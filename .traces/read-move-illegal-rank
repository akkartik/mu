parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    1:address:channel <- new-channel 2:literal\n    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address\n    # 'read-move' is waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number/id\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)]\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    restart 2:number/routine\n    wait-for-routine 2:number\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .rank too high: a    .\n    .                    .\n  ", properties: [_: "literal-string"]}
after-brace: recipe read-move-illegal-rank
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: read-move-illegal-rank
 101 run: screen:address <- new-fake-screen 20:literal/width, 2:literal/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 20 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 2 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 20
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 2
9999 mem: storing 40 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 40
9999 mem: array size is 40
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1095
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1097
 103 run: break-unless x:address:screen, 
9999 mem: location 1097 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1098
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1098 is 1014
9999 mem: storing 40 in location 1099
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1100
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 0
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 0
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 0
9999 mem: storing 1015 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1102 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1102 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 0
9999 mem: storing 1 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 1
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 1
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 1
9999 mem: storing 1017 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1102 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1102 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 1
9999 mem: storing 2 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 2
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 2
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 2
9999 mem: storing 1019 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1102 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1102 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 2
9999 mem: storing 3 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 3
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 3
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 3
9999 mem: storing 1021 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1102 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1102 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 3
9999 mem: storing 4 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 4
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 4
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 4
9999 mem: storing 1023 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1102 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1102 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 4
9999 mem: storing 5 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 5
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 5
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 5
9999 mem: storing 1025 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1102 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1102 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 5
9999 mem: storing 6 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 6
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 6
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 6
9999 mem: storing 1027 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1102 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1102 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 6
9999 mem: storing 7 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 7
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 7
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 7
9999 mem: storing 1029 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1102 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1102 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 7
9999 mem: storing 8 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 8
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 8
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 8
9999 mem: storing 1031 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1102 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1102 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 8
9999 mem: storing 9 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 9
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 9
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 9
9999 mem: storing 1033 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1102 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1102 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 9
9999 mem: storing 10 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 10
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 10
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 10
9999 mem: storing 1035 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1102 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1102 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 10
9999 mem: storing 11 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 11
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 11
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 11
9999 mem: storing 1037 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1102 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1102 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 11
9999 mem: storing 12 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 12
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 12
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 12
9999 mem: storing 1039 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1102 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1102 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 12
9999 mem: storing 13 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 13
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 13
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 13
9999 mem: storing 1041 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1102 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1102 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 13
9999 mem: storing 14 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 14
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 14
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 14
9999 mem: storing 1043 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1102 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1102 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 14
9999 mem: storing 15 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 15
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 15
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 15
9999 mem: storing 1045 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1102 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1102 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 15
9999 mem: storing 16 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 16
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 16
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 16
9999 mem: storing 1047 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1102 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1102 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 16
9999 mem: storing 17 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 17
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 17
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 17
9999 mem: storing 1049 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1102 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1102 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 17
9999 mem: storing 18 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 18
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 18
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 18
9999 mem: storing 1051 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1102 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1102 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 18
9999 mem: storing 19 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 19
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 19
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 19
9999 mem: storing 1053 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1102 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1102 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 19
9999 mem: storing 20 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 20
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 20
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 20
9999 mem: storing 1055 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1102 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1102 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 20
9999 mem: storing 21 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 21
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 21
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 21
9999 mem: storing 1057 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1102 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1102 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 21
9999 mem: storing 22 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 22
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 22
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 22
9999 mem: storing 1059 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1102 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1102 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 22
9999 mem: storing 23 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 23
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 23
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 23
9999 mem: storing 1061 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1102 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1102 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 23
9999 mem: storing 24 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 24
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 24
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 24
9999 mem: storing 1063 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1102 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1102 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 24
9999 mem: storing 25 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 25
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 25
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 25
9999 mem: storing 1065 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1102 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1102 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 25
9999 mem: storing 26 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 26
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 26
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 26
9999 mem: storing 1067 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1102 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1102 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 26
9999 mem: storing 27 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 27
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 27
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 27
9999 mem: storing 1069 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1102 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1102 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 27
9999 mem: storing 28 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 28
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 28
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 28
9999 mem: storing 1071 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1102 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1102 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 28
9999 mem: storing 29 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 29
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 29
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 29
9999 mem: storing 1073 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1102 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1102 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 29
9999 mem: storing 30 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 30
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 30
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 30
9999 mem: storing 1075 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1102 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1102 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 30
9999 mem: storing 31 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 31
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 31
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 31
9999 mem: storing 1077 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1102 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1102 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 31
9999 mem: storing 32 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 32
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 32
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 32
9999 mem: storing 1079 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1102 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1102 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 32
9999 mem: storing 33 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 33
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 33
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 33
9999 mem: storing 1081 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1102 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1102 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 33
9999 mem: storing 34 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 34
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 34
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 34
9999 mem: storing 1083 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1102 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1102 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 34
9999 mem: storing 35 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 35
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 35
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 35
9999 mem: storing 1085 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1102 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1102 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 35
9999 mem: storing 36 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 36
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 36
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 36
9999 mem: storing 1087 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1102 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1102 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 36
9999 mem: storing 37 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 37
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 37
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 37
9999 mem: storing 1089 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1102 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1102 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 37
9999 mem: storing 38 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 38
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 38
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 38
9999 mem: storing 1091 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1102 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1102 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 38
9999 mem: storing 39 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 39
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1098 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1100 is 39
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 39
9999 mem: storing 1093 in location 1102
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1102 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1102 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1103
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1103 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1102 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1102 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1104
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1104 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1100 is 39
9999 mem: storing 40 in location 1100
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1100 is 40
9999 mem: location 1099 is 40
9999 mem: storing 1 in location 1101
 103 run: break-if done?:boolean, 
9999 mem: location 1101 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1105
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1105 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1105
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1105 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1097 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: run [
    1:address:channel <- new-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    wait-for-routine 2:number
  ]
parse: instruction: new-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
after-brace: recipe run1001
after-brace: new-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
 101 run: 1:address:channel <- new-channel 2:literal
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1106
 102 run: result:address:channel <- new channel:type
9999 mem: new alloc: 1113
9999 mem: storing 1113 in location 1108
 102 run: full:address:number <- get-address result:address:channel/deref, first-full:offset
9999 mem: location 1108 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1108 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1109
 102 run: full:address:number/deref <- copy 0:literal
9999 mem: location 1109 is 1113
9999 mem: storing 0 in location 1113
 102 run: free:address:number <- get-address result:address:channel/deref, first-free:offset
9999 mem: location 1108 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1108 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1110
 102 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1110 is 1114
9999 mem: storing 0 in location 1114
 102 run: capacity:number <- next-ingredient 
9999 mem: storing 2 in location 1111
 102 run: capacity:number <- add capacity:number, 1:literal
9999 mem: location 1111 is 2
9999 mem: storing 3 in location 1111
 102 run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
9999 mem: location 1108 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1108 is 1113
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1112
 102 run: dest:address:address:array:location/deref <- new location:type, capacity:number
9999 mem: location 1111 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1116
9999 mem: location 1112 is 1115
9999 mem: storing 1116 in location 1115
 102 run: reply result:address:channel
9999 mem: location 1108 is 1113
9999 run: result 0 is 1113
9999 mem: storing 1113 in location 1
 101 run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
9999 mem: location 1 is 1113
9999 mem: location 900 is 1009
9999 new: routine allocated memory from 101000 to 201000
9999 mem: storing 2 in location 2
 101 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read-move
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 101 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1002
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1003
 101 run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
9999 mem: location 1002 is 1113
9999 mem: location 1003 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 101000
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 101002
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 101003
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101002 is 1113
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 101012
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 101014
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101014 is 1113
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 101022
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 101024
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101024 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 101024 is 1113
9999 run: address to copy is 1113
9999 run: its type is number
9999 mem: location 1113 is 0
9999 mem: storing 0 in location 101025
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101024 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 101024 is 1113
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 0
9999 mem: storing 0 in location 101026
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101025 is 0
9999 mem: location 101026 is 0
9999 mem: storing 1 in location 101027
 104 run: reply result:boolean
9999 mem: location 101027 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101015
 103 run: break-unless empty:boolean, 
9999 mem: location 101015 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101014 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 101014 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 101016
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101016 is 1114
9999 mem: location 1114 is 0
9999 mem: location 101016 is 1114
9999 run: waiting for location 1114 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-illegal-rank
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1113
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1097
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1098
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1097 is 1113
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1120
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1122
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 0
9999 mem: storing 0 in location 1123
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1123 is 0
9999 mem: storing 1 in location 1123
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1122 is 1113
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1128
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1130
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1130 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 1130 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 1131
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1131 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1131 is 1116
9999 mem: storing 3 in location 1132
 106 run: reply result:number
9999 mem: location 1132 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1124
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1123 is 1
9999 mem: location 1124 is 3
9999 mem: storing 0 in location 1125
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1125 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 run: its type is number
9999 mem: location 1113 is 0
9999 mem: storing 0 in location 1126
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1126 is 0
9999 mem: location 1123 is 1
9999 mem: storing 0 in location 1127
 105 run: reply result:boolean
9999 mem: location 1127 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1099
 104 run: break-unless full:boolean, 
9999 mem: location 1099 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1097 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 1097 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 1101
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1097 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 1116
9999 mem: location 1097 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1102
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1101 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1101 is 1116
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 0
9999 mem: storing 1117 in location 1103
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1098 is 97
9999 mem: location 1103 is 1117
9999 mem: storing 97 in location 1117
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1102 is 1114
9999 mem: storing 1 in location 1114
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1101 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1101 is 1116
9999 mem: storing 3 in location 1104
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 1
9999 mem: location 1104 is 3
9999 mem: storing 0 in location 1105
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1105 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1097 is 1113
9999 run: result 0 is 1113
9999 mem: storing 1113 in location 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1113
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1097
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1098
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1097 is 1113
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1122
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1
9999 mem: location 1115 is 1116
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 1
9999 mem: storing 1 in location 1123
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1122 is 1113
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1130
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1130 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1
9999 mem: location 1115 is 1116
9999 mem: location 1130 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 1131
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1131 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1131 is 1116
9999 mem: storing 3 in location 1132
 106 run: reply result:number
9999 mem: location 1132 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1124
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1123 is 2
9999 mem: location 1124 is 3
9999 mem: storing 0 in location 1125
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1125 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1
9999 mem: location 1115 is 1116
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 run: its type is number
9999 mem: location 1113 is 0
9999 mem: storing 0 in location 1126
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1126 is 0
9999 mem: location 1123 is 2
9999 mem: storing 0 in location 1127
 105 run: reply result:boolean
9999 mem: location 1127 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1099
 104 run: break-unless full:boolean, 
9999 mem: location 1099 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1097 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1
9999 mem: location 1115 is 1116
9999 mem: location 1097 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 1101
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1097 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 1
9999 mem: location 1115 is 1116
9999 mem: location 1097 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1102
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1101 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 1
9999 mem: location 1101 is 1116
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 1
9999 mem: storing 1118 in location 1103
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1098 is 97
9999 mem: location 1103 is 1118
9999 mem: storing 97 in location 1118
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 1
9999 mem: location 1102 is 1114
9999 mem: storing 2 in location 1114
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1101 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 97
9999 mem: location 1119 is 0
9999 mem: location 1101 is 1116
9999 mem: storing 3 in location 1104
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1102 is 1114
9999 mem: location 1114 is 2
9999 mem: location 1104 is 3
9999 mem: storing 0 in location 1105
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1105 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1097 is 1113
9999 run: result 0 is 1113
9999 mem: storing 1113 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-file/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101014 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101014 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 101017
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101014 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101014 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 101018
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101018 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 97
9999 mem: location 1119 is 0
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 0
9999 mem: location 101018 is 1116
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 0
9999 run: address to copy is 1117
9999 run: its type is number
9999 mem: location 1117 is 97
9999 mem: storing 97 in location 101019
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 0
9999 mem: location 101017 is 1113
9999 mem: storing 1 in location 1113
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101018 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 97
9999 mem: location 1119 is 0
9999 mem: location 101018 is 1116
9999 mem: storing 3 in location 101020
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 1
9999 mem: location 101020 is 3
9999 mem: storing 0 in location 101021
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101021 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101019 is 97
9999 mem: location 101014 is 1113
9999 run: result 0 is 97
9999 run: result 1 is 1113
9999 mem: storing 97 in location 101004
9999 mem: storing 1113 in location 101002
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101004 is 97
9999 mem: storing 0 in location 101005
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101005 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101004 is 97
9999 mem: storing 0 in location 101005
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101005 is 0
9999 run: jumping to instruction 13
 102 run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
9999 mem: location 101004 is 97
9999 mem: storing 0 in location 101006
 102 run: break-unless empty-fake-keyboard?:boolean, 
9999 mem: location 101006 is 0
9999 run: jumping to instruction 18
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101004 is 97
9999 mem: storing 0 in location 101007
 102 run: break-unless newline?:boolean, 
9999 mem: location 101007 is 0
9999 run: jumping to instruction 25
 102 run: file:number <- subtract c:character, 97:literal
9999 mem: location 101004 is 97
9999 mem: storing 0 in location 101009
 102 run: above-min:boolean <- greater-or-equal file:number, 0:literal
9999 mem: location 101009 is 0
9999 mem: storing 1 in location 101010
 102 run: break-if above-min:boolean, 
9999 mem: location 101010 is 1
9999 run: jumping to instruction 35
 102 run: below-max:boolean <- lesser-than file:number, 8:literal
9999 mem: location 101009 is 0
9999 mem: storing 1 in location 101011
 102 run: break-if below-max:boolean, 
9999 mem: location 101011 is 1
9999 run: jumping to instruction 43
 102 run: reply file:number, 0:literal/quit, 0:literal/error
9999 mem: location 101009 is 0
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
9999 mem: storing 0 in location 1006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 1005 is 0
9999 run: jumping to instruction 6
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 1006 is 0
9999 run: jumping to instruction 8
 101 run: result:address:move <- new move:type
9999 mem: new alloc: 101028
9999 mem: storing 101028 in location 1007
 101 run: x:address:number <- get-address result:address:move/deref, from-file:offset
9999 mem: location 1007 is 101028
9999 mem: location 101028 is 0
9999 mem: location 101029 is 0
9999 mem: location 101030 is 0
9999 mem: location 101031 is 0
9999 mem: location 1007 is 101028
9999 run: address to copy is 101028
9999 mem: storing 101028 in location 1008
 101 run: x:address:number/deref <- copy from-file:number
9999 mem: location 1004 is 0
9999 mem: location 1008 is 101028
9999 mem: storing 0 in location 101028
 101 run: x:address:number <- get-address result:address:move/deref, from-rank:offset
9999 mem: location 1007 is 101028
9999 mem: location 101028 is 0
9999 mem: location 101029 is 0
9999 mem: location 101030 is 0
9999 mem: location 101031 is 0
9999 mem: location 1007 is 101028
9999 run: address to copy is 101029
9999 mem: storing 101029 in location 1008
 101 run: x:address:number/deref, quit?:boolean, error?:boolean <- read-rank stdin:address:channel, screen:address
9999 mem: location 1002 is 1113
9999 mem: location 1003 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 1097
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1098
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 1097 is 1113
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 101014
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101014 is 1113
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1113 in location 101024
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101024 is 1113
9999 mem: location 1113 is 1
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101024 is 1113
9999 run: address to copy is 1113
9999 run: its type is number
9999 mem: location 1113 is 1
9999 mem: storing 1 in location 101025
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101024 is 1113
9999 mem: location 1113 is 1
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101024 is 1113
9999 run: address to copy is 1114
9999 run: its type is number
9999 mem: location 1114 is 2
9999 mem: storing 2 in location 101026
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101025 is 1
9999 mem: location 101026 is 2
9999 mem: storing 0 in location 101027
 104 run: reply result:boolean
9999 mem: location 101027 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 101015
 103 run: break-unless empty:boolean, 
9999 mem: location 101015 is 0
9999 run: jumping to instruction 7
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101014 is 1113
9999 mem: location 1113 is 1
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101014 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 101017
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101014 is 1113
9999 mem: location 1113 is 1
9999 mem: location 1114 is 2
9999 mem: location 1115 is 1116
9999 mem: location 101014 is 1113
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1116
9999 mem: storing 1116 in location 101018
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101018 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 97
9999 mem: location 1119 is 0
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 1
9999 mem: location 101018 is 1116
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 1
9999 run: address to copy is 1118
9999 run: its type is number
9999 mem: location 1118 is 97
9999 mem: storing 97 in location 101019
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 1
9999 mem: location 101017 is 1113
9999 mem: storing 2 in location 1113
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101018 is 1116
9999 mem: location 1116 is 3
9999 mem: location 1117 is 97
9999 mem: location 1118 is 97
9999 mem: location 1119 is 0
9999 mem: location 101018 is 1116
9999 mem: storing 3 in location 101020
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101017 is 1113
9999 mem: location 1113 is 2
9999 mem: location 101020 is 3
9999 mem: storing 0 in location 101021
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101021 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101019 is 97
9999 mem: location 101014 is 1113
9999 run: result 0 is 97
9999 run: result 1 is 1113
9999 mem: storing 97 in location 1099
9999 mem: storing 1113 in location 1097
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 1099 is 97
9999 mem: storing 0 in location 1100
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 1100 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 1099 is 97
9999 mem: storing 0 in location 1100
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 1100 is 0
9999 run: jumping to instruction 13
 102 run: newline?:boolean <- equal c:character, 10:literal
9999 mem: location 1099 is 97
9999 mem: storing 0 in location 1101
 102 run: break-unless newline?:boolean, 
9999 mem: location 1101 is 0
9999 run: jumping to instruction 20
 102 run: rank:number <- subtract c:character, 49:literal
9999 mem: location 1099 is 97
9999 mem: storing 48 in location 1103
 102 run: above-min:boolean <- greater-or-equal rank:number, 0:literal
9999 mem: location 1103 is 48
9999 mem: storing 1 in location 1104
 102 run: break-if above-min:boolean, 
9999 mem: location 1104 is 1
9999 run: jumping to instruction 29
 102 run: below-max:boolean <- lesser-or-equal rank:number, 7:literal
9999 mem: location 1103 is 48
9999 mem: storing 0 in location 1105
 102 run: break-if below-max:boolean, 
9999 mem: location 1105 is 0
9999 run: jump-if fell through
 102 run: error-message:address:array:character <- new [rank too high: ]
9999 mem: storing 101032 in location 1102
 102 run: print-string screen:address, error-message:address:array:character
9999 mem: location 1098 is 1009
9999 mem: location 1102 is 101032
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101002
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 101032 in location 101003
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101004
9999 mem: storing 0 in location 101005
 103 run: break-if color-found?:boolean, 
9999 mem: location 101005 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101004
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101006
9999 mem: storing 0 in location 101007
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 101007 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 101006
 103 run: len:number <- length s:address:array:character/deref
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101003 is 101032
9999 mem: storing 15 in location 101008
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 101009
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 0
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 0
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 0
9999 run: address to copy is 101033
9999 run: its type is character
9999 mem: location 101033 is 114
9999 mem: storing 114 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 114
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 101048
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 114 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 0
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 114
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 114
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 0
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 0
9999 mem: storing 1015 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 101069 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 101069 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 114
9999 mem: location 101070 is 1015
9999 mem: storing 114 in location 1015
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1016
9999 mem: storing 7 in location 1016
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 0
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 0
9999 mem: location 101060 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 0
9999 mem: storing 1 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 1
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 1
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 1
9999 run: address to copy is 101034
9999 run: its type is character
9999 mem: location 101034 is 97
9999 mem: storing 97 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 97
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 1
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 97
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 97
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 1
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 1
9999 mem: storing 1017 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 101069 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 101069 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 97
9999 mem: location 101070 is 1017
9999 mem: storing 97 in location 1017
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1018
9999 mem: storing 7 in location 1018
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 1
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 1
9999 mem: location 101060 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 1
9999 mem: storing 2 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 2
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 2
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 2
9999 run: address to copy is 101035
9999 run: its type is character
9999 mem: location 101035 is 110
9999 mem: storing 110 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 110
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 110 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 2
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 110
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 110
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 2
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 2
9999 mem: storing 1019 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 101069 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 101069 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 110
9999 mem: location 101070 is 1019
9999 mem: storing 110 in location 1019
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1020
9999 mem: storing 7 in location 1020
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 2
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 2
9999 mem: location 101060 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 2
9999 mem: storing 3 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 3
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 3
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 3
9999 run: address to copy is 101036
9999 run: its type is character
9999 mem: location 101036 is 107
9999 mem: storing 107 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 107
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 3
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 107
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 107
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 3
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 3
9999 mem: storing 1021 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 101069 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 101069 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 107
9999 mem: location 101070 is 1021
9999 mem: storing 107 in location 1021
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1022
9999 mem: storing 7 in location 1022
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 3
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 3
9999 mem: location 101060 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 3
9999 mem: storing 4 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 4
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 4
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 4
9999 run: address to copy is 101037
9999 run: its type is character
9999 mem: location 101037 is 32
9999 mem: storing 32 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 32
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 4
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 4
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 4
9999 mem: storing 1023 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 101069 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 101069 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 32
9999 mem: location 101070 is 1023
9999 mem: storing 32 in location 1023
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1024
9999 mem: storing 7 in location 1024
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 4
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 4
9999 mem: location 101060 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 4
9999 mem: storing 5 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 5
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 5
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 5
9999 run: address to copy is 101038
9999 run: its type is character
9999 mem: location 101038 is 116
9999 mem: storing 116 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 116
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 116 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 5
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 116
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 116
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 5
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 5
9999 mem: storing 1025 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 101069 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 101069 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 116
9999 mem: location 101070 is 1025
9999 mem: storing 116 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 5
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 5
9999 mem: location 101060 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 5
9999 mem: storing 6 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 6
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 6
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 6
9999 run: address to copy is 101039
9999 run: its type is character
9999 mem: location 101039 is 111
9999 mem: storing 111 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 111
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 6
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 111
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 111
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 6
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 6
9999 mem: storing 1027 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 101069 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 101069 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 111
9999 mem: location 101070 is 1027
9999 mem: storing 111 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 6
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 6
9999 mem: location 101060 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 6
9999 mem: storing 7 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 7
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 7
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 7
9999 run: address to copy is 101040
9999 run: its type is character
9999 mem: location 101040 is 111
9999 mem: storing 111 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 111
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101051
schedule: print-character/print-string/read-rank/read-move
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 7
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 111
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 111
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 7
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 7
9999 mem: storing 1029 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 101069 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 101069 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 111
9999 mem: location 101070 is 1029
9999 mem: storing 111 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 7
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 7
9999 mem: location 101060 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 7
9999 mem: storing 8 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 8
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 8
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 8
9999 run: address to copy is 101041
9999 run: its type is character
9999 mem: location 101041 is 32
9999 mem: storing 32 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 32
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 8
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 8
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 8
9999 mem: storing 1031 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 101069 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 101069 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 32
9999 mem: location 101070 is 1031
9999 mem: storing 32 in location 1031
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1032
9999 mem: storing 7 in location 1032
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 8
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 8
9999 mem: location 101060 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 8
9999 mem: storing 9 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 9
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 9
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 9
9999 run: address to copy is 101042
9999 run: its type is character
9999 mem: location 101042 is 104
9999 mem: storing 104 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 104
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 9
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 104
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 104
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 9
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 9
9999 mem: storing 1033 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 101069 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 101069 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 104
9999 mem: location 101070 is 1033
9999 mem: storing 104 in location 1033
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1034
9999 mem: storing 7 in location 1034
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 9
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 9
9999 mem: location 101060 is 1012
9999 mem: storing 10 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 9
9999 mem: storing 10 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 10
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 10
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 10
9999 run: address to copy is 101043
9999 run: its type is character
9999 mem: location 101043 is 105
9999 mem: storing 105 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 105
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 10
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 105
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 105
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 10
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 10
9999 mem: storing 1035 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 101069 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 101069 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 105
9999 mem: location 101070 is 1035
9999 mem: storing 105 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 10
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 10
9999 mem: location 101060 is 1012
9999 mem: storing 11 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 10
9999 mem: storing 11 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 11
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 11
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 11
9999 run: address to copy is 101044
9999 run: its type is character
9999 mem: location 101044 is 103
9999 mem: storing 103 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 103
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 11
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 103
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 103
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 11
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 11
9999 mem: storing 1037 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101069 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101069 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 103
9999 mem: location 101070 is 1037
9999 mem: storing 103 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 11
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 11
9999 mem: location 101060 is 1012
9999 mem: storing 12 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 11
9999 mem: storing 12 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 12
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 12
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 12
9999 run: address to copy is 101045
9999 run: its type is character
9999 mem: location 101045 is 104
9999 mem: storing 104 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 104
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 12
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 104
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 104
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 12
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 12
9999 mem: storing 1039 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101069 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101069 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 104
9999 mem: location 101070 is 1039
9999 mem: storing 104 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 12
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 12
9999 mem: location 101060 is 1012
9999 mem: storing 13 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 12
9999 mem: storing 13 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 13
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 13
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 13
9999 run: address to copy is 101046
9999 run: its type is character
9999 mem: location 101046 is 58
9999 mem: storing 58 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 58
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 58 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 13
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 58
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 58
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 13
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 13
9999 mem: storing 1041 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101069 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101069 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 58
9999 mem: location 101070 is 1041
9999 mem: storing 58 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 13
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 13
9999 mem: location 101060 is 1012
9999 mem: storing 14 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 13
9999 mem: storing 14 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 14
9999 mem: location 101008 is 15
9999 mem: storing 0 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101003 is 101032
9999 mem: location 101032 is 15
9999 mem: location 101033 is 114
9999 mem: location 101034 is 97
9999 mem: location 101035 is 110
9999 mem: location 101036 is 107
9999 mem: location 101037 is 32
9999 mem: location 101038 is 116
9999 mem: location 101039 is 111
9999 mem: location 101040 is 111
9999 mem: location 101041 is 32
9999 mem: location 101042 is 104
9999 mem: location 101043 is 105
9999 mem: location 101044 is 103
9999 mem: location 101045 is 104
9999 mem: location 101046 is 58
9999 mem: location 101047 is 32
9999 mem: location 101009 is 14
9999 mem: location 101003 is 101032
9999 mem: location 101009 is 14
9999 run: address to copy is 101047
9999 run: its type is character
9999 mem: location 101047 is 32
9999 mem: storing 32 in location 101011
 103 run: print-character x:address:screen, c:character, color:number, bg-color:number
9999 mem: location 101002 is 1009
9999 mem: location 101011 is 32
9999 mem: location 101004 is 7
9999 mem: location 101006 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101051
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101052
9999 mem: storing 1 in location 101053
 104 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 1 in location 101055
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 1
9999 run: jumping to instruction 12
 104 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 104 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 104 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 104 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 104 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 14
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 104 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101061
 104 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 101064
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 104 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 58
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 32
9999 mem: storing 0 in location 101067
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 58
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 14
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 14
9999 mem: storing 1043 in location 101069
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101069 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 101070
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101069 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 101071
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 32
9999 mem: location 101070 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 14
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 104 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 14
9999 mem: location 101060 is 1012
9999 mem: storing 15 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101009 is 14
9999 mem: storing 15 in location 101009
 103 run: loop 
9999 run: jumping to instruction 16
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101009 is 15
9999 mem: location 101008 is 15
9999 mem: storing 1 in location 101010
 103 run: break-if done?:boolean, 
9999 mem: location 101010 is 1
9999 run: jumping to instruction 22
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101002 is 1009
 102 run: print-character screen:address, c:character
9999 mem: location 1098 is 1009
9999 mem: location 1099 is 97
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 101050
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 101051
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101052
9999 mem: storing 0 in location 101053
 103 run: break-if color-found?:boolean, 
9999 mem: location 101053 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101052
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101054
9999 mem: storing 0 in location 101055
 103 run: break-if bg-color-found?:boolean, 
9999 mem: location 101055 is 0
9999 run: jump-if fell through
 103 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 101054
 103 run: break-unless x:address:screen, 
9999 mem: location 101050 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 20
9999 mem: storing 20 in location 101056
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 2
9999 mem: storing 2 in location 101057
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 101058
 103 run: legal?:boolean <- greater-or-equal row:address:number/deref, 0:literal
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: storing 1 in location 101059
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 21
 103 run: legal?:boolean <- lesser-than row:address:number/deref, height:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101057 is 2
9999 mem: storing 1 in location 101059
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 24
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 101060
 103 run: legal?:boolean <- greater-or-equal column:address:number/deref, 0:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 1 in location 101059
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 28
 103 run: legal?:boolean <- lesser-than column:address:number/deref, width:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 15
9999 mem: location 101056 is 20
9999 mem: storing 1 in location 101059
 103 run: jump-if legal?:boolean, 1:offset
9999 mem: location 101059 is 1
9999 run: jumping to instruction 31
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101051 is 97
9999 mem: storing 0 in location 101061
 103 run: break-unless newline?:boolean, 
9999 mem: location 101061 is 0
9999 run: jumping to instruction 42
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101058 is 1011
9999 mem: location 1011 is 0
9999 mem: location 101056 is 20
9999 mem: storing 0 in location 101064
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101064 is 0
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 101064
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101050 is 1009
9999 mem: location 1009 is 2
9999 mem: location 1010 is 20
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 101050 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 101065
 103 run: len:number <- length buf:address:array:screen-cell/deref
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 58
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101065 is 1014
9999 mem: storing 40 in location 101066
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101051 is 97
9999 mem: storing 0 in location 101067
 103 run: break-unless backspace?:boolean, 
9999 mem: location 101067 is 0
9999 run: jumping to instruction 62
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101065 is 1014
9999 mem: location 1014 is 40
9999 mem: location 1015 is 114
9999 mem: location 1016 is 7
9999 mem: location 1017 is 97
9999 mem: location 1018 is 7
9999 mem: location 1019 is 110
9999 mem: location 1020 is 7
9999 mem: location 1021 is 107
9999 mem: location 1022 is 7
9999 mem: location 1023 is 32
9999 mem: location 1024 is 7
9999 mem: location 1025 is 116
9999 mem: location 1026 is 7
9999 mem: location 1027 is 111
9999 mem: location 1028 is 7
9999 mem: location 1029 is 111
9999 mem: location 1030 is 7
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1033 is 104
9999 mem: location 1034 is 7
9999 mem: location 1035 is 105
9999 mem: location 1036 is 7
9999 mem: location 1037 is 103
9999 mem: location 1038 is 7
9999 mem: location 1039 is 104
9999 mem: location 1040 is 7
9999 mem: location 1041 is 58
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 101064 is 15
9999 mem: location 101065 is 1014
9999 mem: location 101064 is 15
9999 mem: storing 1045 in location 101069
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101069 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101069 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 101070
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101069 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101069 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 101071
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101051 is 97
9999 mem: location 101070 is 1045
9999 mem: storing 97 in location 1045
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101052 is 7
9999 mem: location 101071 is 1046
9999 mem: storing 7 in location 1046
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101056 is 20
9999 mem: storing 19 in location 101072
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 15
9999 mem: location 101072 is 19
9999 mem: storing 0 in location 101073
 103 run: break-if at-right?:boolean, 
9999 mem: location 101073 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101060 is 1012
9999 mem: location 1012 is 15
9999 mem: location 101060 is 1012
9999 mem: storing 16 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101050 is 1009
 102 run: reply 0:literal/dummy, 0:literal/quit, 1:literal/error
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 1
9999 mem: location 1008 is 101029
9999 mem: storing 0 in location 101029
9999 mem: storing 0 in location 1005
9999 mem: storing 1 in location 1006
 101 run: jump-unless quit?:boolean, 1:offset
9999 mem: location 1005 is 0
9999 run: jumping to instruction 15
 101 run: jump-unless error?:boolean, 1:offset
9999 mem: location 1006 is 1
9999 run: jump-unless fell through
 101 run: reply 0:literal/dummy, quit?:boolean, error?:boolean
9999 mem: location 1005 is 0
9999 mem: location 1006 is 1
schedule: waking up routine 1
schedule: run1001/read-move-illegal-rank
  99 run: screen-should-contain [
    .rank too high: a    .
    .                    .
  ]
