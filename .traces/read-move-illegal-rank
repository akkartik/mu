parse/0: instruction: run
parse/0:   ingredient: {name: "
    hide-warnings
    1:address:channel <- init-channel 2:literal
    2:integer/routine <- start-running read-move:recipe, 1:address:channel
    # 'read-move' is waiting for input
    wait-for-routine 2:integer
    3:integer <- routine-state 2:integer/id
    4:boolean/waiting? <- equal 3:integer/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:integer/routine
    wait-for-routine 2:integer
  ", value: 0, type: 0, properties: ["
    hide-warnings
    1:address:channel <- init-channel 2:literal
    2:integer/routine <- start-running read-move:recipe, 1:address:channel
    # 'read-move' is waiting for input
    wait-for-routine 2:integer
    3:integer <- routine-state 2:integer/id
    4:boolean/waiting? <- equal 3:integer/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:integer/routine
    wait-for-routine 2:integer
  ": "literal-string"]}
parse/0: instruction: trace-should-contain
parse/0:   ingredient: {name: "
    warn: rank too high
  ", value: 0, type: 0, properties: ["
    warn: rank too high
  ": "literal-string"]}
after-brace/0: recipe read-move-illegal-rank
after-brace/0: run ...
after-brace/0: trace-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: read-move-illegal-rank
run/0: instruction read-move-illegal-rank/0
run/0: run/52 {name: "
    hide-warnings
    1:address:channel <- init-channel 2:literal
    2:integer/routine <- start-running read-move:recipe, 1:address:channel
    # 'read-move' is waiting for input
    wait-for-routine 2:integer
    3:integer <- routine-state 2:integer/id
    4:boolean/waiting? <- equal 3:integer/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:integer/routine
    wait-for-routine 2:integer
  ", value: 0, type: 0, properties: ["
    hide-warnings
    1:address:channel <- init-channel 2:literal
    2:integer/routine <- start-running read-move:recipe, 1:address:channel
    # 'read-move' is waiting for input
    wait-for-routine 2:integer
    3:integer <- routine-state 2:integer/id
    4:boolean/waiting? <- equal 3:integer/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:integer/routine
    wait-for-routine 2:integer
  ": "literal-string"]}
run/0: ingredient 0 is 
    hide-warnings
    1:address:channel <- init-channel 2:literal
    2:integer/routine <- start-running read-move:recipe, 1:address:channel
    # 'read-move' is waiting for input
    wait-for-routine 2:integer
    3:integer <- routine-state 2:integer/id
    4:boolean/waiting? <- equal 3:integer/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:integer/routine
    wait-for-routine 2:integer
  
parse/0: instruction: hide-warnings
parse/0: instruction: init-channel
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: start-running
parse/0:   ingredient: {name: "read-move", value: 0, type: 0, properties: ["read-move": "recipe"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   product: {name: "2", value: 0, type: 1, properties: ["2": "integer", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "integer"]}
parse/0: instruction: routine-state
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "integer", "id": ]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "integer"]}
parse/0: instruction: equal
parse/0:   ingredient: {name: "3", value: 0, type: 1, properties: ["3": "integer", "routine-state": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal", "waiting": ]}
parse/0:   product: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "4", value: 0, type: 3, properties: ["4": "boolean", "waiting?": ]}
parse/0:   ingredient: {name: "
F read-move-file: routine failed to pause after coming up (before any keys were pressed)", value: 0, type: 0, properties: ["
F read-move-file: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "97", value: 0, type: 0, properties: ["97": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "97", value: 0, type: 0, properties: ["97": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "integer", "routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "2", value: 0, type: 1, properties: ["2": "integer"]}
after-brace/0: recipe run1001
after-brace/0: hide-warnings ...
after-brace/0: init-channel ...
after-brace/0: start-running ...
after-brace/0: wait-for-routine ...
after-brace/0: routine-state ...
after-brace/0: equal ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
run/0: instruction run1001/0
run/0: hide-warnings/19 
run/0: instruction run1001/1
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- init-channel/108 {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run/0: ingredient 0 is 2
run/0: instruction init-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: product 0 is default-space
run/0: instruction init-channel/1
run/0: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]} <- new/51 {name: "channel", value: 10, type: 0, properties: ["channel": "type"]}
run/0: ingredient 0 is channel
mem/0: new alloc: 1031
run/0: product 0 is result
mem/0: storing 1031 in location 1002
run/0: instruction init-channel/2
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is first-full
mem/0: location 1002 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 1003
run/0: instruction init-channel/3
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 1003 is 1031
mem/0: storing 0 in location 1031
run/0: instruction init-channel/4
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is first-free
mem/0: location 1002 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1004
run/0: instruction init-channel/5
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1004 is 1032
mem/0: storing 0 in location 1032
run/0: instruction init-channel/6
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/33 
run/0: product 0 is capacity
mem/0: storing 2 in location 1005
run/0: instruction init-channel/7
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- add/2 {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1005 is 2
run/0: ingredient 1 is 1
run/0: product 0 is capacity
mem/0: storing 3 in location 1005
run/0: instruction init-channel/8
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location"]} <- get-address/28 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is data
mem/0: location 1002 is 1031
run/0: address to copy is 1033
run/0: product 0 is dest
mem/0: storing 1033 in location 1006
run/0: instruction init-channel/9
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location", "deref": ]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is capacity
mem/0: location 1005 is 3
mem/0: array size is 3
mem/0: new alloc: 1034
run/0: product 0 is dest
mem/0: location 1006 is 1033
mem/0: storing 1034 in location 1033
run/0: instruction init-channel/10
run/0: reply/36 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/2
run/0: {name: "2", value: 2, type: 1, properties: ["2": "integer", "routine": ]} <- start-running/37 {name: "read-move", value: 0, type: 0, properties: ["read-move": "recipe"]}, {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}
run/0: ingredient 0 is read-move
run/0: ingredient 1 is 1
mem/0: location 1 is 1031
new/0: routine allocated memory from 101000 to 201000
run/0: product 0 is 2
mem/0: storing 2 in location 2
run/0: instruction run1001/3
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "integer"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read-move
run/0: instruction read-move/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101000
run/0: product 0 is default-space
run/0: instruction read-move/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1031 in location 101002
run/0: instruction read-move/2
run/0: {name: "from-file", value: 2, type: 1, properties: ["from-file": "integer"]} <- read-file/139 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1031
run/0: instruction read-file/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101031
run/0: product 0 is default-space
run/0: instruction read-file/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1031 in location 101033
run/0: instruction read-file/2
run/0: {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101033 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101062
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101064
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101093
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101095
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101095 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101095 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101096
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101095 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101095 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 0
run/0: product 0 is free
mem/0: storing 0 in location 101097
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101096 is 0
run/0: ingredient 1 is free
mem/0: location 101097 is 0
run/0: product 0 is result
mem/0: storing 1 in location 101098
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101098 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101065
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101065 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101064 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101066
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101066 is 1032
mem/0: location 1032 is 0
mem/0: location 101066 is 1032
run/0: waiting for location 1032 to change from 0
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction run1001/4
run/0: {name: "3", value: 3, type: 1, properties: ["3": "integer"]} <- routine-state/38 {name: "2", value: 2, type: 1, properties: ["2": "integer", "id": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: product 0 is 3
mem/0: storing 2 in location 3
run/0: instruction run1001/5
run/0: {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]} <- equal/13 {name: "3", value: 3, type: 1, properties: ["3": "integer", "routine-state": ]}, {name: "2", value: 2, type: 0, properties: ["2": "literal", "waiting": ]}
run/0: ingredient 0 is 3
mem/0: location 3 is 2
run/0: ingredient 1 is 2
run/0: product 0 is 4
mem/0: storing 1 in location 4
run/0: instruction run1001/6
run/0: assert/20 {name: "4", value: 4, type: 3, properties: ["4": "boolean", "waiting?": ]}, {name: "
F read-move-file: routine failed to pause after coming up (before any keys were pressed)", value: 0, type: 0, properties: ["
F read-move-file: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
run/0: ingredient 0 is 4
mem/0: location 4 is 1
run/0: ingredient 1 is 
F read-move-file: routine failed to pause after coming up (before any keys were pressed)
run/0: instruction run1001/7
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1038
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1040
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 97 in location 1041
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1040 is 1031
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1069
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1071
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1071 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1071 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1072
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1072 is 0
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1072
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1071 is 1031
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1100
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1102
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1102 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1102 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is q
mem/0: storing 1034 in location 1103
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1103 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 0
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1103 is 1034
run/0: product 0 is result
mem/0: storing 3 in location 1104
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1104 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1073
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 1072 is 1
run/0: ingredient 1 is len
mem/0: location 1073 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1074
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1074 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1071 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 1071 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1075
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1075 is 0
run/0: ingredient 1 is tmp
mem/0: location 1072 is 1
run/0: product 0 is result
mem/0: storing 0 in location 1076
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1076 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1042
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1042 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1040 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1040 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 1044
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1040 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1040 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1045
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1044 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 0
mem/0: location 1036 is 0
mem/0: location 1037 is 0
run/0: ingredient 1 is free
mem/0: location 1045 is 1032
mem/0: location 1032 is 0
mem/0: location 1044 is 1034
mem/0: location 1045 is 1032
mem/0: location 1032 is 0
run/0: product 0 is dest
mem/0: storing 1035 in location 1046
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1041 is 97
run/0: product 0 is dest
mem/0: location 1046 is 1035
mem/0: storing 97 in location 1035
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1045 is 1032
mem/0: location 1032 is 0
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1045 is 1032
mem/0: storing 1 in location 1032
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1044 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1044 is 1034
run/0: product 0 is len
mem/0: storing 3 in location 1047
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 1045 is 1032
mem/0: location 1032 is 1
run/0: ingredient 1 is len
mem/0: location 1047 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1048
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1048 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1040 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/8
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1131
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1133
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/33 
run/0: product 0 is val
mem/0: storing 97 in location 1134
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1133 is 1031
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1162
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1164
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1164 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1164 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1165
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1165 is 1
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 2 in location 1165
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1164 is 1031
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1193
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 1195
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1195 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1195 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is q
mem/0: storing 1034 in location 1196
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/31 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1196 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1196 is 1034
run/0: product 0 is result
mem/0: storing 3 in location 1197
run/0: instruction channel-capacity/4
run/0: reply/36 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1197 is 3
run/0: result 0 is 3
run/0: product 0 is len
mem/0: storing 3 in location 1166
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 1165 is 2
run/0: ingredient 1 is len
mem/0: location 1166 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1167
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1167 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1164 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 1164 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1168
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1168 is 0
run/0: ingredient 1 is tmp
mem/0: location 1165 is 2
run/0: product 0 is result
mem/0: storing 0 in location 1169
run/0: instruction channel-full?/12
run/0: reply/36 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1169 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1135
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1135 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1133 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1133 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 1137
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1133 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1133 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1138
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1137 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
run/0: ingredient 1 is free
mem/0: location 1138 is 1032
mem/0: location 1032 is 1
mem/0: location 1137 is 1034
mem/0: location 1138 is 1032
mem/0: location 1032 is 1
run/0: product 0 is dest
mem/0: storing 1036 in location 1139
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1134 is 97
run/0: product 0 is dest
mem/0: location 1139 is 1036
mem/0: storing 97 in location 1036
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1138 is 1032
mem/0: location 1032 is 1
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1138 is 1032
mem/0: storing 2 in location 1032
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1137 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 97
mem/0: location 1037 is 0
mem/0: location 1137 is 1034
run/0: product 0 is len
mem/0: storing 3 in location 1140
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 1138 is 1032
mem/0: location 1032 is 2
run/0: ingredient 1 is len
mem/0: location 1140 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 1141
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1141 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/36 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1133 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/9
run/0: restart/39 {name: "2", value: 2, type: 1, properties: ["2": "integer", "routine": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: instruction run1001/10
run/0: wait-for-routine/43 {name: "2", value: 2, type: 1, properties: ["2": "integer"]}
run/0: ingredient 0 is 2
mem/0: location 2 is 2
run/0: waiting for routine 2
schedule/0: read
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101064 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 101067
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101064 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 101064 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 101068
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101068 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 97
mem/0: location 1037 is 0
run/0: ingredient 1 is full
mem/0: location 101067 is 1031
mem/0: location 1031 is 0
mem/0: location 101068 is 1034
mem/0: location 101067 is 1031
mem/0: location 1031 is 0
run/0: address to copy is 1035
run/0: its type is 1
mem/0: location 1035 is 97
run/0: product 0 is result
mem/0: storing 97 in location 101069
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101067 is 1031
mem/0: location 1031 is 0
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101067 is 1031
mem/0: storing 1 in location 1031
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "integer"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101068 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 97
mem/0: location 1037 is 0
mem/0: location 101068 is 1034
run/0: product 0 is len
mem/0: storing 3 in location 101070
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101067 is 1031
mem/0: location 1031 is 1
run/0: ingredient 1 is len
mem/0: location 101070 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101071
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101071 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101069 is 97
run/0: ingredient 1 is chan
mem/0: location 101064 is 1031
run/0: result 0 is 97
run/0: result 1 is 1031
run/0: product 0 is c
mem/0: storing 97 in location 101034
run/0: product 1 is stdin
mem/0: storing 1031 in location 101033
run/0: instruction read-file/4
run/0: {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101034 is 97
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101035
run/0: instruction read-file/5
run/0: break-unless/12 {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101035 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction read-file/9
run/0: {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101034 is 97
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101035
run/0: instruction read-file/10
run/0: break-unless/12 {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101035 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 12
run/0: instruction read-file/13
run/0: {name: "file", value: 4, type: 1, properties: ["file": "integer"]} <- subtract/3 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101034 is 97
run/0: ingredient 1 is 97
run/0: product 0 is file
mem/0: storing 0 in location 101036
run/0: instruction read-file/14
run/0: {name: "above-min", value: 5, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "file", value: 4, type: 1, properties: ["file": "integer"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101036 is 0
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101037
run/0: instruction read-file/15
run/0: assert/20 {name: "above-min", value: 5, type: 3, properties: ["above-min": "boolean"]}, {name: "file too low", value: 0, type: 0, properties: ["file too low": "literal-string"]}
run/0: ingredient 0 is above-min
mem/0: location 101037 is 1
run/0: ingredient 1 is file too low
run/0: instruction read-file/16
run/0: {name: "below-max", value: 6, type: 3, properties: ["below-max": "boolean"]} <- lesser-than/15 {name: "file", value: 4, type: 1, properties: ["file": "integer"]}, {name: "8", value: 8, type: 0, properties: ["8": "literal"]}
run/0: ingredient 0 is file
mem/0: location 101036 is 0
run/0: ingredient 1 is 8
run/0: product 0 is below-max
mem/0: storing 1 in location 101038
run/0: instruction read-file/17
run/0: assert/20 {name: "below-max", value: 6, type: 3, properties: ["below-max": "boolean"]}, {name: "file too high", value: 0, type: 0, properties: ["file too high": "literal-string"]}
run/0: ingredient 0 is below-max
mem/0: location 101038 is 1
run/0: ingredient 1 is file too high
run/0: instruction read-file/18
run/0: reply/36 {name: "file", value: 4, type: 1, properties: ["file": "integer"]}
run/0: ingredient 0 is file
mem/0: location 101036 is 0
run/0: result 0 is 0
run/0: product 0 is from-file
mem/0: storing 0 in location 101003
run/0: instruction read-move/4
run/0: {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]} <- lesser-than/15 {name: "from-file", value: 2, type: 1, properties: ["from-file": "integer"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is from-file
mem/0: location 101003 is 0
run/0: ingredient 1 is 0
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101004
run/0: instruction read-move/5
run/0: break-unless/12 {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101004 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction read-move/8
run/0: {name: "result", value: 4, type: 2-13, properties: ["result": "address":"move"]} <- new/51 {name: "move", value: 0, type: 0, properties: ["move": "literal"]}
run/0: ingredient 0 is move
mem/0: new alloc: 101124
run/0: product 0 is result
mem/0: storing 101124 in location 101005
run/0: instruction read-move/9
run/0: {name: "x", value: 5, type: 2-1, properties: ["x": "address":"integer"]} <- get-address/28 {name: "result", value: 4, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "from-file", value: 0, type: 0, properties: ["from-file": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101005 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 0
mem/0: location 101126 is 0
mem/0: location 101127 is 0
run/0: ingredient 1 is from-file
mem/0: location 101005 is 101124
run/0: address to copy is 101124
run/0: product 0 is x
mem/0: storing 101124 in location 101006
run/0: instruction read-move/10
run/0: {name: "x", value: 5, type: 2-1, properties: ["x": "address":"integer", "deref": ]} <- copy/1 {name: "from-file", value: 2, type: 1, properties: ["from-file": "integer"]}
run/0: ingredient 0 is from-file
mem/0: location 101003 is 0
run/0: product 0 is x
mem/0: location 101006 is 101124
mem/0: storing 0 in location 101124
run/0: instruction read-move/11
run/0: {name: "x", value: 5, type: 2-1, properties: ["x": "address":"integer"]} <- get-address/28 {name: "result", value: 4, type: 2-13, properties: ["result": "address":"move", "deref": ]}, {name: "from-rank", value: 1, type: 0, properties: ["from-rank": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101005 is 101124
mem/0: location 101124 is 0
mem/0: location 101125 is 0
mem/0: location 101126 is 0
mem/0: location 101127 is 0
run/0: ingredient 1 is from-rank
mem/0: location 101005 is 101124
run/0: address to copy is 101125
run/0: product 0 is x
mem/0: storing 101125 in location 101006
run/0: instruction read-move/12
run/0: {name: "x", value: 5, type: 2-1, properties: ["x": "address":"integer", "deref": ]} <- read-rank/140 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1031
run/0: instruction read-rank/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101125
run/0: product 0 is default-space
run/0: instruction read-rank/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1031 in location 101127
run/0: instruction read-rank/2
run/0: {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101127 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101156
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101158
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101187
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101189
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101189 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101189 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 1
run/0: product 0 is full
mem/0: storing 1 in location 101190
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101189 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101189 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 2
run/0: product 0 is free
mem/0: storing 2 in location 101191
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101190 is 1
run/0: ingredient 1 is free
mem/0: location 101191 is 2
run/0: product 0 is result
mem/0: storing 0 in location 101192
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101192 is 0
run/0: result 0 is 0
run/0: product 0 is empty
mem/0: storing 0 in location 101159
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101159 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101158 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 101161
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101158 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 101158 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 101162
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101162 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 97
mem/0: location 1037 is 0
run/0: ingredient 1 is full
mem/0: location 101161 is 1031
mem/0: location 1031 is 1
mem/0: location 101162 is 1034
mem/0: location 101161 is 1031
mem/0: location 1031 is 1
run/0: address to copy is 1036
run/0: its type is 1
mem/0: location 1036 is 97
run/0: product 0 is result
mem/0: storing 97 in location 101163
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101161 is 1031
mem/0: location 1031 is 1
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101161 is 1031
mem/0: storing 2 in location 1031
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "integer"]} <- length/31 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101162 is 1034
mem/0: location 1034 is 3
mem/0: location 1035 is 97
mem/0: location 1036 is 97
mem/0: location 1037 is 0
mem/0: location 101162 is 1034
run/0: product 0 is len
mem/0: storing 3 in location 101164
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101161 is 1031
mem/0: location 1031 is 2
run/0: ingredient 1 is len
mem/0: location 101164 is 3
run/0: product 0 is at-end?
mem/0: storing 0 in location 101165
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101165 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/36 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101163 is 97
run/0: ingredient 1 is chan
mem/0: location 101158 is 1031
run/0: result 0 is 97
run/0: result 1 is 1031
run/0: product 0 is c
mem/0: storing 97 in location 101128
run/0: product 1 is stdin
mem/0: storing 1031 in location 101127
run/0: instruction read-rank/4
run/0: {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "81", value: 81, type: 0, properties: ["81": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101128 is 97
run/0: ingredient 1 is 81
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101129
run/0: instruction read-rank/5
run/0: break-unless/12 {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101129 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction read-rank/9
run/0: {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]} <- equal/13 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "113", value: 113, type: 0, properties: ["113": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101128 is 97
run/0: ingredient 1 is 113
run/0: product 0 is q-pressed?
mem/0: storing 0 in location 101129
run/0: instruction read-rank/10
run/0: break-unless/12 {name: "q-pressed?", value: 3, type: 3, properties: ["q-pressed?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is q-pressed?
mem/0: location 101129 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 12
run/0: instruction read-rank/13
run/0: {name: "rank", value: 4, type: 1, properties: ["rank": "integer"]} <- subtract/3 {name: "c", value: 2, type: 4, properties: ["c": "character"]}, {name: "49", value: 49, type: 0, properties: ["49": "literal"]}
run/0: ingredient 0 is c
mem/0: location 101128 is 97
run/0: ingredient 1 is 49
run/0: product 0 is rank
mem/0: storing 48 in location 101130
run/0: instruction read-rank/14
run/0: {name: "above-min", value: 5, type: 3, properties: ["above-min": "boolean"]} <- greater-or-equal/16 {name: "rank", value: 4, type: 1, properties: ["rank": "integer"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101130 is 48
run/0: ingredient 1 is 0
run/0: product 0 is above-min
mem/0: storing 1 in location 101131
run/0: instruction read-rank/15
run/0: assert/20 {name: "above-min", value: 5, type: 3, properties: ["above-min": "boolean"]}, {name: "rank too low", value: 0, type: 0, properties: ["rank too low": "literal-string"]}
run/0: ingredient 0 is above-min
mem/0: location 101131 is 1
run/0: ingredient 1 is rank too low
run/0: instruction read-rank/16
run/0: {name: "below-max", value: 6, type: 3, properties: ["below-max": "boolean"]} <- lesser-or-equal/17 {name: "rank", value: 4, type: 1, properties: ["rank": "integer"]}, {name: "7", value: 7, type: 0, properties: ["7": "literal"]}
run/0: ingredient 0 is rank
mem/0: location 101130 is 48
run/0: ingredient 1 is 7
run/0: product 0 is below-max
mem/0: storing 0 in location 101132
run/0: instruction read-rank/17
run/0: assert/20 {name: "below-max", value: 6, type: 3, properties: ["below-max": "boolean"]}, {name: "rank too high", value: 0, type: 0, properties: ["rank too high": "literal-string"]}
run/0: ingredient 0 is below-max
mem/0: location 101132 is 0
run/0: ingredient 1 is rank too high
warn/0: rank too high
run/0: instruction read-rank/18
run/0: reply/36 {name: "rank", value: 4, type: 1, properties: ["rank": "integer"]}
run/0: ingredient 0 is rank
mem/0: location 101130 is 48
run/0: result 0 is 48
run/0: product 0 is x
mem/0: location 101006 is 101125
mem/0: storing 48 in location 101125
run/0: instruction read-move/13
run/0: expect-from-channel/141 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}, {name: "45", value: 45, type: 0, properties: ["45": "literal"]}
run/0: ingredient 0 is stdin
mem/0: location 101002 is 1031
run/0: ingredient 1 is 45
run/0: instruction expect-from-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101218
run/0: product 0 is default-space
run/0: instruction expect-from-channel/1
run/0: {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is stdin
mem/0: storing 1031 in location 101220
run/0: instruction expect-from-channel/2
run/0: {name: "expected", value: 2, type: 4, properties: ["expected": "character"]} <- next-ingredient/33 
run/0: product 0 is expected
mem/0: storing 45 in location 101221
run/0: instruction expect-from-channel/3
run/0: {name: "c", value: 3, type: 4, properties: ["c": "character"]}, {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]} <- read/111 {name: "stdin", value: 1, type: 2-10, properties: ["stdin": "address":"channel"]}
run/0: ingredient 0 is stdin
mem/0: location 101220 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101249
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101251
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/51 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101280
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/33 
run/0: product 0 is chan
mem/0: storing 1031 in location 101282
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101282 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101282 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 2
run/0: product 0 is full
mem/0: storing 2 in location 101283
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101282 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101282 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 2
run/0: product 0 is free
mem/0: storing 2 in location 101284
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101283 is 2
run/0: ingredient 1 is free
mem/0: location 101284 is 2
run/0: product 0 is result
mem/0: storing 1 in location 101285
run/0: instruction channel-empty?/5
run/0: reply/36 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101285 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101252
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101252 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/28 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101251 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101251 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101253
run/0: instruction read/6
run/0: wait-for-location/42 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101253 is 1032
mem/0: location 1032 is 2
mem/0: location 101253 is 1032
run/0: waiting for location 1032 to change from 2
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction read-move-illegal-rank/1
run/0: trace-should-contain/54 {name: "
    warn: rank too high
  ", value: 0, type: 0, properties: ["
    warn: rank too high
  ": "literal-string"]}
run/0: ingredient 0 is 
    warn: rank too high
  
