parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    1:address:channel <- init-channel 2:literal\n    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address\n    # 'read-move' is waiting for input\n    wait-for-routine 2:number\n    3:number <- routine-state 2:number/id\n    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting\n    assert 4:boolean/waiting?, [\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)]\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    1:address:channel <- write 1:address:channel, 97:literal  # 'a'\n    restart 2:number/routine\n    wait-for-routine 2:number\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .rank too high: a    .\n    .                    .\n  ", properties: [_: "literal-string"]}
after-brace: recipe read-move-illegal-rank
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: read-move-illegal-rank
 101 run: screen:address <- assume-screen 20:literal/width, 2:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 20 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 2 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 20
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 2
9999 mem: storing 40 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 40
9999 mem: array size is 40
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1117
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1119
 103 run: break-unless x:address:screen, 
9999 mem: location 1119 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1120
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1120 is 1036
9999 mem: storing 40 in location 1121
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1122
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 0
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 0
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 0
9999 mem: storing 1037 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1124 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 1
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 1
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 1
9999 mem: storing 1039 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1124 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 2
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 2
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 2
9999 mem: storing 1041 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1124 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 3
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 3
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 3
9999 mem: storing 1043 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1124 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 4
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 4
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 4
9999 mem: storing 1045 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1124 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 5
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 5
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 5
9999 mem: storing 1047 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1124 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 6
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 6
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 6
9999 mem: storing 1049 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1124 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 7
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 7
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 7
9999 mem: storing 1051 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1124 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 8
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 8
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 8
9999 mem: storing 1053 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1124 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 9
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 9
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 9
9999 mem: storing 1055 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1124 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 10
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 10
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 10
9999 mem: storing 1057 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1124 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 11
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 11
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 11
9999 mem: storing 1059 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1124 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 12
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 12
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 12
9999 mem: storing 1061 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1124 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 13
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 13
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 13
9999 mem: storing 1063 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1124 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 14
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 14
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 14
9999 mem: storing 1065 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1124 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 15
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 15
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 15
9999 mem: storing 1067 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1124 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 16
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 16
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 16
9999 mem: storing 1069 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1124 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 17
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 17
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 17
9999 mem: storing 1071 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1124 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 18
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 18
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 18
9999 mem: storing 1073 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1124 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 19
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 19
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 19
9999 mem: storing 1075 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1124 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 20
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 20
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 20
9999 mem: storing 1077 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1124 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 21
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 21
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 21
9999 mem: storing 1079 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1124 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 22
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 22
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 22
9999 mem: storing 1081 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1124 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 23
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 23
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 23
9999 mem: storing 1083 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1124 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 24
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 24
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 24
9999 mem: storing 1085 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1124 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 25
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 25
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 25
9999 mem: storing 1087 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1124 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1088
9999 mem: storing 7 in location 1088
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 26
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 26
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 26
9999 mem: storing 1089 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1124 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1090
9999 mem: storing 7 in location 1090
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 27
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 27
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 27
9999 mem: storing 1091 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1124 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1092
9999 mem: storing 7 in location 1092
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 28
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 28
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 28
9999 mem: storing 1093 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1124 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1094
9999 mem: storing 7 in location 1094
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 29
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 29
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 29
9999 mem: storing 1095 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1124 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1096
9999 mem: storing 7 in location 1096
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 30
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 30
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 30
9999 mem: storing 1097 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1124 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1098
9999 mem: storing 7 in location 1098
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 31
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 31
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 31
9999 mem: storing 1099 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1124 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1100
9999 mem: storing 7 in location 1100
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 32
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 32
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 32
9999 mem: storing 1101 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1124 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1102
9999 mem: storing 7 in location 1102
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 33
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 33
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 33
9999 mem: storing 1103 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1124 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1104
9999 mem: storing 7 in location 1104
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 34
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 34
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 34
9999 mem: storing 1105 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1124 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1106
9999 mem: storing 7 in location 1106
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 35
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 35
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 35
9999 mem: storing 1107 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1124 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1108
9999 mem: storing 7 in location 1108
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 36
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 36
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 36
9999 mem: storing 1109 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1124 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1110
9999 mem: storing 7 in location 1110
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 37
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 37
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 37
9999 mem: storing 1111 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1124 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1112
9999 mem: storing 7 in location 1112
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 38
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 38
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 38
9999 mem: storing 1113 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1124 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1114
9999 mem: storing 7 in location 1114
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 39
9999 mem: location 1121 is 40
9999 mem: storing 0 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1120 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1122 is 39
9999 mem: location 1120 is 1036
9999 mem: location 1122 is 39
9999 mem: storing 1115 in location 1124
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1125
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1125 is 1115
9999 mem: storing 0 in location 1115
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1124 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1124 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1126
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1126 is 1116
9999 mem: storing 7 in location 1116
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1122 is 40
9999 mem: location 1121 is 40
9999 mem: storing 1 in location 1123
 103 run: break-if done?:boolean, 
9999 mem: location 1123 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1119 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1119 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1127
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1127 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1119 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    wait-for-routine 2:number
  ]
parse: instruction: init-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "\nF read-move-file: routine failed to pause after coming up (before any keys were pressed)", properties: [_: "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
after-brace: recipe run1001
after-brace: init-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
 101 run: 1:address:channel <- init-channel 2:literal
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1148
 102 run: result:address:channel <- new channel:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1150
 102 run: full:address:number <- get-address result:address:channel/deref, first-full:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1151
 102 run: full:address:number/deref <- copy 0:literal
9999 mem: location 1151 is 1179
9999 mem: storing 0 in location 1179
 102 run: free:address:number <- get-address result:address:channel/deref, first-free:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1152
 102 run: free:address:number/deref <- copy 0:literal
9999 mem: location 1152 is 1180
9999 mem: storing 0 in location 1180
 102 run: capacity:number <- next-ingredient 
9999 mem: storing 2 in location 1153
 102 run: capacity:number <- add capacity:number, 1:literal
9999 mem: location 1153 is 2
9999 mem: storing 3 in location 1153
 102 run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
9999 mem: location 1150 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1150 is 1179
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1154
 102 run: dest:address:address:array:location/deref <- new location:type, capacity:number
9999 mem: location 1153 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1182
9999 mem: location 1154 is 1181
9999 mem: storing 1182 in location 1181
 102 run: reply result:address:channel
9999 mem: location 1150 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 101 run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
9999 mem: location 1 is 1179
9999 mem: location 900 is 1031
9999 new: routine allocated memory from 101000 to 201000
9999 mem: storing 2 in location 2
 101 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read-move
 101 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101000
 101 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101002
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101003
 101 run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101031
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101033
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101034
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101033 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101062
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101064
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101064 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101093
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101095
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1179
9999 run: its type is 1
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 101096
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101095 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101095 is 1179
9999 run: address to copy is 1180
9999 run: its type is 1
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 101097
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101096 is 0
9999 mem: location 101097 is 0
9999 mem: storing 1 in location 101098
 104 run: reply result:boolean
9999 mem: location 101098 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 101065
 103 run: break-unless empty:boolean, 
9999 mem: location 101065 is 1
9999 run: jump-unless fell through
 103 run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 101066
 103 run: wait-for-location free-address:address:number/deref
9999 mem: location 101066 is 1180
9999 mem: location 1180 is 0
9999 mem: location 101066 is 1180
9999 run: waiting for location 1180 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-illegal-rank
 103 run: 3:number <- routine-state 2:number/id
9999 mem: location 2 is 2
9999 mem: storing 2 in location 3
 103 run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
9999 mem: location 3 is 2
9999 mem: storing 1 in location 4
 103 run: assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
9999 mem: location 4 is 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1186
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1188
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1189
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1188 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1217
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1219
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1180
9999 run: its type is 1
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1220
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1220 is 0
9999 mem: storing 1 in location 1220
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1219 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1248
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1250
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1250 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1250 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1251
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1251 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1251 is 1182
9999 mem: storing 3 in location 1252
 106 run: reply result:number
9999 mem: location 1252 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1221
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1220 is 1
9999 mem: location 1221 is 3
9999 mem: storing 0 in location 1222
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1219 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1219 is 1179
9999 run: address to copy is 1179
9999 run: its type is 1
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1223
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1223 is 0
9999 mem: location 1220 is 1
9999 mem: storing 0 in location 1224
 105 run: reply result:boolean
9999 mem: location 1224 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1190
 104 run: break-unless full:boolean, 
9999 mem: location 1190 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1192
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1188 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1182
9999 mem: location 1188 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1193
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1192 is 1182
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: storing 1183 in location 1194
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1189 is 97
9999 mem: location 1194 is 1183
9999 mem: storing 97 in location 1183
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1193 is 1180
9999 mem: storing 1 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1192 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1192 is 1182
9999 mem: storing 3 in location 1195
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1193 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1195 is 3
9999 mem: storing 0 in location 1196
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1196 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1188 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: 1:address:channel <- write 1:address:channel, 97:literal
9999 mem: location 1 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1279
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1281
 104 run: val:location <- next-ingredient 
9999 mem: storing 97 in location 1282
 104 run: full:boolean <- channel-full? chan:address:channel
9999 mem: location 1281 is 1179
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1310
 105 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1312
 105 run: tmp:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 1312 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1312 is 1179
9999 run: address to copy is 1180
9999 run: its type is 1
9999 mem: location 1180 is 1
9999 mem: storing 1 in location 1313
 105 run: tmp:number <- add tmp:number, 1:literal
9999 mem: location 1313 is 1
9999 mem: storing 2 in location 1313
 105 run: len:number <- channel-capacity chan:address:channel
9999 mem: location 1312 is 1179
 106 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1341
 106 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 1343
 106 run: q:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1343 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1343 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1344
 106 run: result:number <- length q:address:array:location/deref
9999 mem: location 1344 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1344 is 1182
9999 mem: storing 3 in location 1345
 106 run: reply result:number
9999 mem: location 1345 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1314
 105 run: at-end?:boolean <- greater-or-equal tmp:number, len:number
9999 mem: location 1313 is 2
9999 mem: location 1314 is 3
9999 mem: storing 0 in location 1315
 105 run: break-unless at-end?:boolean, 
9999 mem: location 1315 is 0
9999 run: jumping to instruction 9
 105 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 1312 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1312 is 1179
9999 run: address to copy is 1179
9999 run: its type is 1
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1316
 105 run: result:boolean <- equal full:number, tmp:number
9999 mem: location 1316 is 0
9999 mem: location 1313 is 2
9999 mem: storing 0 in location 1317
 105 run: reply result:boolean
9999 mem: location 1317 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1283
 104 run: break-unless full:boolean, 
9999 mem: location 1283 is 0
9999 run: jumping to instruction 8
 104 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 1281 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1281 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 1285
 104 run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
9999 mem: location 1281 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 1
9999 mem: location 1181 is 1182
9999 mem: location 1281 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1286
 104 run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
9999 mem: location 1285 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1285 is 1182
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: storing 1184 in location 1287
 104 run: dest:address:location/deref <- copy val:location
9999 mem: location 1282 is 97
9999 mem: location 1287 is 1184
9999 mem: storing 97 in location 1184
 104 run: free:address:number/deref <- add free:address:number/deref, 1:literal
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 1
9999 mem: location 1286 is 1180
9999 mem: storing 2 in location 1180
 104 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 1285 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 97
9999 mem: location 1185 is 0
9999 mem: location 1285 is 1182
9999 mem: storing 3 in location 1288
 104 run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
9999 mem: location 1286 is 1180
9999 mem: location 1180 is 2
9999 mem: location 1288 is 3
9999 mem: storing 0 in location 1289
 104 run: break-unless at-end?:boolean, 
9999 mem: location 1289 is 0
9999 run: jumping to instruction 19
 104 run: reply chan:address:channel/same-as-ingredient:0
9999 mem: location 1281 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1
 103 run: restart 2:number/routine
9999 mem: location 2 is 2
 103 run: wait-for-routine 2:number
9999 mem: location 2 is 2
9999 run: waiting for routine 2
schedule: read/read-file/read-move
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101067
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101064 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101064 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101068
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 97
9999 mem: location 1185 is 0
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101068 is 1182
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 run: address to copy is 1183
9999 run: its type is 1
9999 mem: location 1183 is 97
9999 mem: storing 97 in location 101069
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 0
9999 mem: location 101067 is 1179
9999 mem: storing 1 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101068 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 97
9999 mem: location 1185 is 0
9999 mem: location 101068 is 1182
9999 mem: storing 3 in location 101070
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101067 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101070 is 3
9999 mem: storing 0 in location 101071
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101071 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101069 is 97
9999 mem: location 101064 is 1179
9999 run: result 0 is 97
9999 run: result 1 is 1179
9999 mem: storing 97 in location 101035
9999 mem: storing 1179 in location 101033
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101036
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101036 is 0
9999 run: jumping to instruction 13
 102 run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101037
 102 run: break-unless empty-fake-keyboard?:boolean, 
9999 mem: location 101037 is 0
9999 run: jumping to instruction 18
 102 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101038
 102 run: break-unless newline?:boolean, 
9999 mem: location 101038 is 0
9999 run: jumping to instruction 25
 102 run: file:number <- subtract c:character, 97:literal
9999 mem: location 101035 is 97
9999 mem: storing 0 in location 101040
 102 run: above-min:boolean <- greater-or-equal file:number, 0:literal
9999 mem: location 101040 is 0
9999 mem: storing 1 in location 101041
 102 run: break-if above-min:boolean, 
9999 mem: location 101041 is 1
9999 run: jumping to instruction 35
 102 run: below-max:boolean <- lesser-than file:number, 8:literal
9999 mem: location 101040 is 0
9999 mem: storing 1 in location 101042
 102 run: break-if below-max:boolean, 
9999 mem: location 101042 is 1
9999 run: jumping to instruction 43
 102 run: reply file:number, 0:literal/quit, 0:literal/error
9999 mem: location 101040 is 0
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 0
9999 mem: storing 0 in location 101004
9999 mem: storing 0 in location 101005
9999 mem: storing 0 in location 101006
 101 run: reply-if quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 6
 101 run: reply-if error?:boolean, 1:offset
9999 mem: location 101006 is 0
9999 run: jumping to instruction 8
 101 run: result:address:move <- new move:type
9999 mem: new alloc: 101124
9999 mem: storing 101124 in location 101007
 101 run: x:address:number <- get-address result:address:move/deref, from-file:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 0
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101124
9999 mem: storing 101124 in location 101008
 101 run: x:address:number/deref <- copy from-file:number
9999 mem: location 101004 is 0
9999 mem: location 101008 is 101124
9999 mem: storing 0 in location 101124
 101 run: x:address:number <- get-address result:address:move/deref, from-rank:offset
9999 mem: location 101007 is 101124
9999 mem: location 101124 is 0
9999 mem: location 101125 is 0
9999 mem: location 101126 is 0
9999 mem: location 101127 is 0
9999 mem: location 101007 is 101124
9999 run: address to copy is 101125
9999 mem: storing 101125 in location 101008
 101 run: x:address:number/deref, quit?:boolean, error?:boolean <- read-rank stdin:address:channel, screen:address
9999 mem: location 101002 is 1179
9999 mem: location 101003 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101128
 102 run: stdin:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101130
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 101131
 102 run: c:character, stdin:address:channel <- read stdin:address:channel
9999 mem: location 101130 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101159
 103 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101161
 103 run: empty:boolean <- channel-empty? chan:address:channel
9999 mem: location 101161 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101190
 104 run: chan:address:channel <- next-ingredient 
9999 mem: storing 1179 in location 101192
 104 run: full:number <- get chan:address:channel/deref, first-full:offset
9999 mem: location 101192 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101192 is 1179
9999 run: address to copy is 1179
9999 run: its type is 1
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 101193
 104 run: free:number <- get chan:address:channel/deref, first-free:offset
9999 mem: location 101192 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101192 is 1179
9999 run: address to copy is 1180
9999 run: its type is 1
9999 mem: location 1180 is 2
9999 mem: storing 2 in location 101194
 104 run: result:boolean <- equal full:number, free:number
9999 mem: location 101193 is 1
9999 mem: location 101194 is 2
9999 mem: storing 0 in location 101195
 104 run: reply result:boolean
9999 mem: location 101195 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 101162
 103 run: break-unless empty:boolean, 
9999 mem: location 101162 is 0
9999 run: jumping to instruction 7
 103 run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
9999 mem: location 101161 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101161 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 101164
 103 run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
9999 mem: location 101161 is 1179
9999 mem: location 1179 is 1
9999 mem: location 1180 is 2
9999 mem: location 1181 is 1182
9999 mem: location 101161 is 1179
9999 run: address to copy is 1181
9999 run: its type is 2
9999 mem: location 1181 is 1182
9999 mem: storing 1182 in location 101165
 103 run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
9999 mem: location 101165 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 97
9999 mem: location 1185 is 0
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101165 is 1182
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 run: address to copy is 1184
9999 run: its type is 1
9999 mem: location 1184 is 97
9999 mem: storing 97 in location 101166
 103 run: full:address:number/deref <- add full:address:number/deref, 1:literal
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 1
9999 mem: location 101164 is 1179
9999 mem: storing 2 in location 1179
 103 run: len:number <- length circular-buffer:address:array:location/deref
9999 mem: location 101165 is 1182
9999 mem: location 1182 is 3
9999 mem: location 1183 is 97
9999 mem: location 1184 is 97
9999 mem: location 1185 is 0
9999 mem: location 101165 is 1182
9999 mem: storing 3 in location 101167
 103 run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
9999 mem: location 101164 is 1179
9999 mem: location 1179 is 2
9999 mem: location 101167 is 3
9999 mem: storing 0 in location 101168
 103 run: break-unless at-end?:boolean, 
9999 mem: location 101168 is 0
9999 run: jumping to instruction 17
 103 run: reply result:location, chan:address:channel/same-as-ingredient:0
9999 mem: location 101166 is 97
9999 mem: location 101161 is 1179
9999 run: result 0 is 97
9999 run: result 1 is 1179
9999 mem: storing 97 in location 101132
9999 mem: storing 1179 in location 101130
 102 run: q-pressed?:boolean <- equal c:character, 81:literal
9999 mem: location 101132 is 97
9999 mem: storing 0 in location 101133
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101133 is 0
9999 run: jumping to instruction 8
 102 run: q-pressed?:boolean <- equal c:character, 113:literal
9999 mem: location 101132 is 97
9999 mem: storing 0 in location 101133
 102 run: break-unless q-pressed?:boolean, 
9999 mem: location 101133 is 0
9999 run: jumping to instruction 13
 102 run: newline?:boolean <- equal c:character, 10:literal
9999 mem: location 101132 is 97
9999 mem: storing 0 in location 101134
 102 run: break-unless newline?:boolean, 
9999 mem: location 101134 is 0
9999 run: jumping to instruction 20
 102 run: rank:number <- subtract c:character, 49:literal
9999 mem: location 101132 is 97
9999 mem: storing 48 in location 101136
 102 run: above-min:boolean <- greater-or-equal rank:number, 0:literal
9999 mem: location 101136 is 48
9999 mem: storing 1 in location 101137
 102 run: break-if above-min:boolean, 
9999 mem: location 101137 is 1
9999 run: jumping to instruction 29
 102 run: below-max:boolean <- lesser-or-equal rank:number, 7:literal
9999 mem: location 101136 is 48
9999 mem: storing 0 in location 101138
 102 run: break-if below-max:boolean, 
9999 mem: location 101138 is 0
9999 run: jump-if fell through
 102 run: error-message:address:array:character <- new [rank too high: ]
9999 mem: storing 101221 in location 101135
 102 run: print-string screen:address, error-message:address:array:character
9999 mem: location 101131 is 1031
9999 mem: location 101135 is 101221
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101237
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101239
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 101221 in location 101240
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101241
9999 mem: storing 0 in location 101242
 103 run: break-if color-found?:boolean, 
9999 mem: location 101242 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101241
 103 run: len:number <- length s:address:array:character/deref
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101240 is 101221
9999 mem: storing 15 in location 101243
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 101244
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 0
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 0
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 0
9999 run: address to copy is 101222
9999 run: its type is 4
9999 mem: location 101222 is 114
9999 mem: storing 114 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 114
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101268
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101270
 104 run: c:character <- next-ingredient 
9999 mem: storing 114 in location 101271
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101272
9999 mem: storing 1 in location 101273
 104 run: break-if color-found?:boolean, 
9999 mem: location 101273 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101270 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101270 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101270 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101274
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101270 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101270 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101275
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101270 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101270 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101276
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101270 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101270 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101277
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101271 is 114
9999 mem: storing 0 in location 101278
 104 run: break-unless newline?:boolean, 
9999 mem: location 101278 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101274 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101276 is 20
9999 mem: storing 0 in location 101281
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101281 is 0
9999 mem: location 101275 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 101281
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101270 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 101270 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101282
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101271 is 114
9999 mem: storing 0 in location 101283
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101283 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101282 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101281 is 0
9999 mem: location 101282 is 1036
9999 mem: location 101281 is 0
9999 mem: storing 1037 in location 101285
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101285 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101285 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 101286
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101285 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 101285 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 101287
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101271 is 114
9999 mem: location 101286 is 1037
9999 mem: storing 114 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101272 is 7
9999 mem: location 101287 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101276 is 20
9999 mem: storing 19 in location 101288
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101275 is 1034
9999 mem: location 1034 is 0
9999 mem: location 101288 is 19
9999 mem: storing 0 in location 101289
 104 run: break-if at-right?:boolean, 
9999 mem: location 101289 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101275 is 1034
9999 mem: location 1034 is 0
9999 mem: location 101275 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101270 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 0
9999 mem: storing 1 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 1
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 1
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 1
9999 run: address to copy is 101223
9999 run: its type is 4
9999 mem: location 101223 is 97
9999 mem: storing 97 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 97
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101299
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101301
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 101302
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101303
9999 mem: storing 1 in location 101304
 104 run: break-if color-found?:boolean, 
9999 mem: location 101304 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101301 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101301 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101301 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101305
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101301 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101301 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101306
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101301 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101301 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101307
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101301 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101301 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101308
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101302 is 97
9999 mem: storing 0 in location 101309
 104 run: break-unless newline?:boolean, 
9999 mem: location 101309 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101305 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101307 is 20
9999 mem: storing 0 in location 101312
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101312 is 0
9999 mem: location 101306 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 101312
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101301 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 101301 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101313
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101302 is 97
9999 mem: storing 0 in location 101314
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101314 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101313 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101312 is 1
9999 mem: location 101313 is 1036
9999 mem: location 101312 is 1
9999 mem: storing 1039 in location 101316
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101316 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101316 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 101317
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101316 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 101316 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 101318
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101302 is 97
9999 mem: location 101317 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101303 is 7
9999 mem: location 101318 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101307 is 20
9999 mem: storing 19 in location 101319
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101306 is 1034
9999 mem: location 1034 is 1
9999 mem: location 101319 is 19
9999 mem: storing 0 in location 101320
 104 run: break-if at-right?:boolean, 
9999 mem: location 101320 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101306 is 1034
9999 mem: location 1034 is 1
9999 mem: location 101306 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101301 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 1
9999 mem: storing 2 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 2
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 2
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 2
9999 run: address to copy is 101224
9999 run: its type is 4
9999 mem: location 101224 is 110
9999 mem: storing 110 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 110
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101330
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101332
 104 run: c:character <- next-ingredient 
9999 mem: storing 110 in location 101333
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101334
9999 mem: storing 1 in location 101335
 104 run: break-if color-found?:boolean, 
9999 mem: location 101335 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101332 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101332 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101332 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101336
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101332 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101332 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101337
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101332 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101332 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101338
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101332 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101332 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101339
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101333 is 110
9999 mem: storing 0 in location 101340
 104 run: break-unless newline?:boolean, 
9999 mem: location 101340 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101336 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101338 is 20
9999 mem: storing 0 in location 101343
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101343 is 0
9999 mem: location 101337 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 101343
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101332 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 101332 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101344
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101333 is 110
9999 mem: storing 0 in location 101345
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101345 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101344 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101343 is 2
9999 mem: location 101344 is 1036
9999 mem: location 101343 is 2
9999 mem: storing 1041 in location 101347
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101347 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101347 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 101348
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101347 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 101347 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 101349
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101333 is 110
9999 mem: location 101348 is 1041
9999 mem: storing 110 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101334 is 7
9999 mem: location 101349 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101338 is 20
9999 mem: storing 19 in location 101350
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101337 is 1034
9999 mem: location 1034 is 2
9999 mem: location 101350 is 19
9999 mem: storing 0 in location 101351
 104 run: break-if at-right?:boolean, 
9999 mem: location 101351 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101337 is 1034
9999 mem: location 1034 is 2
9999 mem: location 101337 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101332 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 2
9999 mem: storing 3 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 3
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 3
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 3
9999 run: address to copy is 101225
9999 run: its type is 4
9999 mem: location 101225 is 107
9999 mem: storing 107 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 107
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101361
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101363
 104 run: c:character <- next-ingredient 
9999 mem: storing 107 in location 101364
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101365
9999 mem: storing 1 in location 101366
 104 run: break-if color-found?:boolean, 
9999 mem: location 101366 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101363 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101363 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101363 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101367
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101363 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101363 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101368
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101363 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101363 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101369
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101363 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101363 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101370
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101364 is 107
9999 mem: storing 0 in location 101371
 104 run: break-unless newline?:boolean, 
9999 mem: location 101371 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101367 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101369 is 20
9999 mem: storing 0 in location 101374
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101374 is 0
9999 mem: location 101368 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 101374
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101363 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 101363 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101375
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101364 is 107
9999 mem: storing 0 in location 101376
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101376 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101375 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101374 is 3
9999 mem: location 101375 is 1036
9999 mem: location 101374 is 3
9999 mem: storing 1043 in location 101378
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101378 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101378 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 101379
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101378 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 101378 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 101380
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101364 is 107
9999 mem: location 101379 is 1043
9999 mem: storing 107 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101365 is 7
9999 mem: location 101380 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101369 is 20
9999 mem: storing 19 in location 101381
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101368 is 1034
9999 mem: location 1034 is 3
9999 mem: location 101381 is 19
9999 mem: storing 0 in location 101382
 104 run: break-if at-right?:boolean, 
9999 mem: location 101382 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101368 is 1034
9999 mem: location 1034 is 3
9999 mem: location 101368 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101363 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 3
9999 mem: storing 4 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 4
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 4
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 4
9999 run: address to copy is 101226
9999 run: its type is 4
9999 mem: location 101226 is 32
9999 mem: storing 32 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 32
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101392
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101394
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101395
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101396
9999 mem: storing 1 in location 101397
 104 run: break-if color-found?:boolean, 
9999 mem: location 101397 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101394 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101394 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101394 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101398
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101394 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101394 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101399
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101394 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101394 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101400
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101394 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101394 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101401
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101395 is 32
9999 mem: storing 0 in location 101402
 104 run: break-unless newline?:boolean, 
9999 mem: location 101402 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101398 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101400 is 20
9999 mem: storing 0 in location 101405
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101405 is 0
9999 mem: location 101399 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 101405
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101394 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 101394 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101406
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101395 is 32
9999 mem: storing 0 in location 101407
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101407 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101406 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101405 is 4
9999 mem: location 101406 is 1036
9999 mem: location 101405 is 4
9999 mem: storing 1045 in location 101409
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101409 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101409 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 101410
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101409 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 101409 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 101411
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101395 is 32
9999 mem: location 101410 is 1045
9999 mem: storing 32 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101396 is 7
9999 mem: location 101411 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101400 is 20
9999 mem: storing 19 in location 101412
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101399 is 1034
9999 mem: location 1034 is 4
9999 mem: location 101412 is 19
9999 mem: storing 0 in location 101413
 104 run: break-if at-right?:boolean, 
9999 mem: location 101413 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101399 is 1034
9999 mem: location 1034 is 4
9999 mem: location 101399 is 1034
9999 mem: storing 5 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101394 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 4
9999 mem: storing 5 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 5
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 5
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 5
9999 run: address to copy is 101227
9999 run: its type is 4
9999 mem: location 101227 is 116
9999 mem: storing 116 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 116
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101423
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101425
 104 run: c:character <- next-ingredient 
9999 mem: storing 116 in location 101426
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101427
9999 mem: storing 1 in location 101428
 104 run: break-if color-found?:boolean, 
9999 mem: location 101428 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101425 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101425 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101425 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101429
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101425 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101425 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101430
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101425 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101425 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101431
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101425 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101425 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101432
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101426 is 116
9999 mem: storing 0 in location 101433
 104 run: break-unless newline?:boolean, 
9999 mem: location 101433 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101429 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101431 is 20
9999 mem: storing 0 in location 101436
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101436 is 0
9999 mem: location 101430 is 1034
9999 mem: location 1034 is 5
9999 mem: storing 5 in location 101436
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101425 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 5
9999 mem: location 1035 is 1036
9999 mem: location 101425 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101437
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101426 is 116
9999 mem: storing 0 in location 101438
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101438 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101437 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101436 is 5
9999 mem: location 101437 is 1036
9999 mem: location 101436 is 5
9999 mem: storing 1047 in location 101440
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101440 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 101440 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 101441
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101440 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 101440 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 101442
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101426 is 116
9999 mem: location 101441 is 1047
9999 mem: storing 116 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101427 is 7
9999 mem: location 101442 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101431 is 20
9999 mem: storing 19 in location 101443
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101430 is 1034
9999 mem: location 1034 is 5
9999 mem: location 101443 is 19
9999 mem: storing 0 in location 101444
 104 run: break-if at-right?:boolean, 
9999 mem: location 101444 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101430 is 1034
9999 mem: location 1034 is 5
9999 mem: location 101430 is 1034
9999 mem: storing 6 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101425 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 5
9999 mem: storing 6 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 6
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 6
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 6
9999 run: address to copy is 101228
9999 run: its type is 4
9999 mem: location 101228 is 111
9999 mem: storing 111 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 111
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101454
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101456
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101457
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101458
9999 mem: storing 1 in location 101459
 104 run: break-if color-found?:boolean, 
9999 mem: location 101459 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101456 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101456 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101456 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101460
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101456 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101456 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101461
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101456 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101456 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101462
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101456 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101456 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101463
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101457 is 111
9999 mem: storing 0 in location 101464
 104 run: break-unless newline?:boolean, 
9999 mem: location 101464 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101460 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101462 is 20
9999 mem: storing 0 in location 101467
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101467 is 0
9999 mem: location 101461 is 1034
9999 mem: location 1034 is 6
9999 mem: storing 6 in location 101467
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101456 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 6
9999 mem: location 1035 is 1036
9999 mem: location 101456 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101468
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101457 is 111
9999 mem: storing 0 in location 101469
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101469 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101468 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101467 is 6
9999 mem: location 101468 is 1036
9999 mem: location 101467 is 6
9999 mem: storing 1049 in location 101471
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101471 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 101471 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 101472
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101471 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 101471 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 101473
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101457 is 111
9999 mem: location 101472 is 1049
9999 mem: storing 111 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101458 is 7
9999 mem: location 101473 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101462 is 20
9999 mem: storing 19 in location 101474
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101461 is 1034
9999 mem: location 1034 is 6
9999 mem: location 101474 is 19
9999 mem: storing 0 in location 101475
 104 run: break-if at-right?:boolean, 
9999 mem: location 101475 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101461 is 1034
9999 mem: location 1034 is 6
9999 mem: location 101461 is 1034
9999 mem: storing 7 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101456 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 6
9999 mem: storing 7 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 7
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 7
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 7
9999 run: address to copy is 101229
9999 run: its type is 4
9999 mem: location 101229 is 111
9999 mem: storing 111 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 111
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101485
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101487
 104 run: c:character <- next-ingredient 
9999 mem: storing 111 in location 101488
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101489
9999 mem: storing 1 in location 101490
 104 run: break-if color-found?:boolean, 
9999 mem: location 101490 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101487 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101487 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101487 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101491
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101487 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101487 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101492
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101487 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101487 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101493
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101487 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101487 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101494
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101488 is 111
9999 mem: storing 0 in location 101495
 104 run: break-unless newline?:boolean, 
9999 mem: location 101495 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101491 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101493 is 20
9999 mem: storing 0 in location 101498
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101498 is 0
9999 mem: location 101492 is 1034
9999 mem: location 1034 is 7
9999 mem: storing 7 in location 101498
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101487 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 1036
9999 mem: location 101487 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101499
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101488 is 111
9999 mem: storing 0 in location 101500
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101500 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101499 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101498 is 7
9999 mem: location 101499 is 1036
9999 mem: location 101498 is 7
9999 mem: storing 1051 in location 101502
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101502 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 101502 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 101503
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101502 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 101502 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 101504
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101488 is 111
9999 mem: location 101503 is 1051
9999 mem: storing 111 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101489 is 7
9999 mem: location 101504 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101493 is 20
9999 mem: storing 19 in location 101505
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101492 is 1034
9999 mem: location 1034 is 7
9999 mem: location 101505 is 19
9999 mem: storing 0 in location 101506
 104 run: break-if at-right?:boolean, 
9999 mem: location 101506 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101492 is 1034
9999 mem: location 1034 is 7
9999 mem: location 101492 is 1034
9999 mem: storing 8 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101487 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 7
9999 mem: storing 8 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 8
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 8
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 8
9999 run: address to copy is 101230
9999 run: its type is 4
9999 mem: location 101230 is 32
9999 mem: storing 32 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 32
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101516
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101518
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101519
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101520
9999 mem: storing 1 in location 101521
 104 run: break-if color-found?:boolean, 
9999 mem: location 101521 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101518 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101518 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101518 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101522
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101518 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101518 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101523
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101518 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101518 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101524
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101518 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101518 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101525
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101519 is 32
9999 mem: storing 0 in location 101526
 104 run: break-unless newline?:boolean, 
9999 mem: location 101526 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101522 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101524 is 20
9999 mem: storing 0 in location 101529
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101529 is 0
9999 mem: location 101523 is 1034
9999 mem: location 1034 is 8
9999 mem: storing 8 in location 101529
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101518 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 8
9999 mem: location 1035 is 1036
9999 mem: location 101518 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101530
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101519 is 32
9999 mem: storing 0 in location 101531
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101531 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101530 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101529 is 8
9999 mem: location 101530 is 1036
9999 mem: location 101529 is 8
9999 mem: storing 1053 in location 101533
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101533 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 101533 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 101534
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101533 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 101533 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 101535
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101519 is 32
9999 mem: location 101534 is 1053
9999 mem: storing 32 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101520 is 7
9999 mem: location 101535 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101524 is 20
9999 mem: storing 19 in location 101536
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101523 is 1034
9999 mem: location 1034 is 8
9999 mem: location 101536 is 19
9999 mem: storing 0 in location 101537
 104 run: break-if at-right?:boolean, 
9999 mem: location 101537 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101523 is 1034
9999 mem: location 1034 is 8
9999 mem: location 101523 is 1034
9999 mem: storing 9 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101518 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 8
9999 mem: storing 9 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 9
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 9
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 9
9999 run: address to copy is 101231
9999 run: its type is 4
9999 mem: location 101231 is 104
9999 mem: storing 104 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 104
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101547
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101549
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 101550
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101551
9999 mem: storing 1 in location 101552
 104 run: break-if color-found?:boolean, 
9999 mem: location 101552 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101549 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101549 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101549 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101553
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101549 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101549 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101554
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101549 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101549 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101555
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101549 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101549 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101556
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101550 is 104
9999 mem: storing 0 in location 101557
schedule: print-character/print-string/read-rank/read-move
 104 run: break-unless newline?:boolean, 
9999 mem: location 101557 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101553 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101555 is 20
9999 mem: storing 0 in location 101560
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101560 is 0
9999 mem: location 101554 is 1034
9999 mem: location 1034 is 9
9999 mem: storing 9 in location 101560
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101549 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 9
9999 mem: location 1035 is 1036
9999 mem: location 101549 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101561
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101550 is 104
9999 mem: storing 0 in location 101562
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101562 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101561 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101560 is 9
9999 mem: location 101561 is 1036
9999 mem: location 101560 is 9
9999 mem: storing 1055 in location 101564
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101564 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 101564 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 101565
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101564 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 101564 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 101566
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101550 is 104
9999 mem: location 101565 is 1055
9999 mem: storing 104 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101551 is 7
9999 mem: location 101566 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101555 is 20
9999 mem: storing 19 in location 101567
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101554 is 1034
9999 mem: location 1034 is 9
9999 mem: location 101567 is 19
9999 mem: storing 0 in location 101568
 104 run: break-if at-right?:boolean, 
9999 mem: location 101568 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101554 is 1034
9999 mem: location 1034 is 9
9999 mem: location 101554 is 1034
9999 mem: storing 10 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101549 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 9
9999 mem: storing 10 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 10
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 10
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 10
9999 run: address to copy is 101232
9999 run: its type is 4
9999 mem: location 101232 is 105
9999 mem: storing 105 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 105
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101578
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101580
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 101581
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101582
9999 mem: storing 1 in location 101583
 104 run: break-if color-found?:boolean, 
9999 mem: location 101583 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101580 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101580 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101580 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101584
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101580 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101580 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101585
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101580 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101580 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101586
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101580 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101580 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101587
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101581 is 105
9999 mem: storing 0 in location 101588
 104 run: break-unless newline?:boolean, 
9999 mem: location 101588 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101584 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101586 is 20
9999 mem: storing 0 in location 101591
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101591 is 0
9999 mem: location 101585 is 1034
9999 mem: location 1034 is 10
9999 mem: storing 10 in location 101591
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101580 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 10
9999 mem: location 1035 is 1036
9999 mem: location 101580 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101592
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101581 is 105
9999 mem: storing 0 in location 101593
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101593 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101592 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101591 is 10
9999 mem: location 101592 is 1036
9999 mem: location 101591 is 10
9999 mem: storing 1057 in location 101595
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101595 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 101595 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 101596
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101595 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 101595 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 101597
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101581 is 105
9999 mem: location 101596 is 1057
9999 mem: storing 105 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101582 is 7
9999 mem: location 101597 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101586 is 20
9999 mem: storing 19 in location 101598
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101585 is 1034
9999 mem: location 1034 is 10
9999 mem: location 101598 is 19
9999 mem: storing 0 in location 101599
 104 run: break-if at-right?:boolean, 
9999 mem: location 101599 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101585 is 1034
9999 mem: location 1034 is 10
9999 mem: location 101585 is 1034
9999 mem: storing 11 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101580 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 10
9999 mem: storing 11 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 11
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 11
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 11
9999 run: address to copy is 101233
9999 run: its type is 4
9999 mem: location 101233 is 103
9999 mem: storing 103 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 103
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101609
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101611
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 101612
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101613
9999 mem: storing 1 in location 101614
 104 run: break-if color-found?:boolean, 
9999 mem: location 101614 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101611 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101611 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101611 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101615
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101611 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101611 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101616
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101611 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101611 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101617
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101611 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101611 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101618
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101612 is 103
9999 mem: storing 0 in location 101619
 104 run: break-unless newline?:boolean, 
9999 mem: location 101619 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101615 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101617 is 20
9999 mem: storing 0 in location 101622
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101622 is 0
9999 mem: location 101616 is 1034
9999 mem: location 1034 is 11
9999 mem: storing 11 in location 101622
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101611 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 11
9999 mem: location 1035 is 1036
9999 mem: location 101611 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101623
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101612 is 103
9999 mem: storing 0 in location 101624
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101624 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101623 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101622 is 11
9999 mem: location 101623 is 1036
9999 mem: location 101622 is 11
9999 mem: storing 1059 in location 101626
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101626 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 101626 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 101627
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101626 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 101626 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 101628
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101612 is 103
9999 mem: location 101627 is 1059
9999 mem: storing 103 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101613 is 7
9999 mem: location 101628 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101617 is 20
9999 mem: storing 19 in location 101629
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101616 is 1034
9999 mem: location 1034 is 11
9999 mem: location 101629 is 19
9999 mem: storing 0 in location 101630
 104 run: break-if at-right?:boolean, 
9999 mem: location 101630 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101616 is 1034
9999 mem: location 1034 is 11
9999 mem: location 101616 is 1034
9999 mem: storing 12 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101611 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 11
9999 mem: storing 12 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 12
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 12
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 12
9999 run: address to copy is 101234
9999 run: its type is 4
9999 mem: location 101234 is 104
9999 mem: storing 104 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 104
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101640
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101642
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 101643
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101644
9999 mem: storing 1 in location 101645
 104 run: break-if color-found?:boolean, 
9999 mem: location 101645 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101642 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101642 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101642 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101646
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101642 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101642 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101647
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101642 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101642 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101648
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101642 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101642 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101649
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101643 is 104
9999 mem: storing 0 in location 101650
 104 run: break-unless newline?:boolean, 
9999 mem: location 101650 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101646 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101648 is 20
9999 mem: storing 0 in location 101653
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101653 is 0
9999 mem: location 101647 is 1034
9999 mem: location 1034 is 12
9999 mem: storing 12 in location 101653
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101642 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 12
9999 mem: location 1035 is 1036
9999 mem: location 101642 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101654
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101643 is 104
9999 mem: storing 0 in location 101655
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101655 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101654 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101653 is 12
9999 mem: location 101654 is 1036
9999 mem: location 101653 is 12
9999 mem: storing 1061 in location 101657
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101657 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 101657 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 101658
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101657 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 101657 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 101659
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101643 is 104
9999 mem: location 101658 is 1061
9999 mem: storing 104 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101644 is 7
9999 mem: location 101659 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101648 is 20
9999 mem: storing 19 in location 101660
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101647 is 1034
9999 mem: location 1034 is 12
9999 mem: location 101660 is 19
9999 mem: storing 0 in location 101661
 104 run: break-if at-right?:boolean, 
9999 mem: location 101661 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101647 is 1034
9999 mem: location 1034 is 12
9999 mem: location 101647 is 1034
9999 mem: storing 13 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101642 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 12
9999 mem: storing 13 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 13
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 13
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 13
9999 run: address to copy is 101235
9999 run: its type is 4
9999 mem: location 101235 is 58
9999 mem: storing 58 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 58
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101671
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101673
 104 run: c:character <- next-ingredient 
9999 mem: storing 58 in location 101674
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101675
9999 mem: storing 1 in location 101676
 104 run: break-if color-found?:boolean, 
9999 mem: location 101676 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101673 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101673 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101673 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101677
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101673 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101673 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101678
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101673 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101673 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101679
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101673 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101673 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101680
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101674 is 58
9999 mem: storing 0 in location 101681
 104 run: break-unless newline?:boolean, 
9999 mem: location 101681 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101677 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101679 is 20
9999 mem: storing 0 in location 101684
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101684 is 0
9999 mem: location 101678 is 1034
9999 mem: location 1034 is 13
9999 mem: storing 13 in location 101684
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101673 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 13
9999 mem: location 1035 is 1036
9999 mem: location 101673 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101685
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101674 is 58
9999 mem: storing 0 in location 101686
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101686 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101685 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101684 is 13
9999 mem: location 101685 is 1036
9999 mem: location 101684 is 13
9999 mem: storing 1063 in location 101688
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101688 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 101688 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 101689
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101688 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 101688 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 101690
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101674 is 58
9999 mem: location 101689 is 1063
9999 mem: storing 58 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101675 is 7
9999 mem: location 101690 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101679 is 20
9999 mem: storing 19 in location 101691
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101678 is 1034
9999 mem: location 1034 is 13
9999 mem: location 101691 is 19
9999 mem: storing 0 in location 101692
 104 run: break-if at-right?:boolean, 
9999 mem: location 101692 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101678 is 1034
9999 mem: location 1034 is 13
9999 mem: location 101678 is 1034
9999 mem: storing 14 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101673 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 13
9999 mem: storing 14 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 14
9999 mem: location 101243 is 15
9999 mem: storing 0 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 101240 is 101221
9999 mem: location 101221 is 15
9999 mem: location 101222 is 114
9999 mem: location 101223 is 97
9999 mem: location 101224 is 110
9999 mem: location 101225 is 107
9999 mem: location 101226 is 32
9999 mem: location 101227 is 116
9999 mem: location 101228 is 111
9999 mem: location 101229 is 111
9999 mem: location 101230 is 32
9999 mem: location 101231 is 104
9999 mem: location 101232 is 105
9999 mem: location 101233 is 103
9999 mem: location 101234 is 104
9999 mem: location 101235 is 58
9999 mem: location 101236 is 32
9999 mem: location 101244 is 14
9999 mem: location 101240 is 101221
9999 mem: location 101244 is 14
9999 run: address to copy is 101236
9999 run: its type is 4
9999 mem: location 101236 is 32
9999 mem: storing 32 in location 101246
 103 run: print-character x:address:screen, c:character, color:number
9999 mem: location 101239 is 1031
9999 mem: location 101246 is 32
9999 mem: location 101241 is 7
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101702
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101704
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 101705
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 101706
9999 mem: storing 1 in location 101707
 104 run: break-if color-found?:boolean, 
9999 mem: location 101707 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 101704 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101704 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101704 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101708
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101704 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101704 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101709
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101704 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101704 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101710
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101704 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101704 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101711
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101705 is 32
9999 mem: storing 0 in location 101712
 104 run: break-unless newline?:boolean, 
9999 mem: location 101712 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101708 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101710 is 20
9999 mem: storing 0 in location 101715
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101715 is 0
9999 mem: location 101709 is 1034
9999 mem: location 1034 is 14
9999 mem: storing 14 in location 101715
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101704 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 14
9999 mem: location 1035 is 1036
9999 mem: location 101704 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101716
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101705 is 32
9999 mem: storing 0 in location 101717
 104 run: break-unless backspace?:boolean, 
9999 mem: location 101717 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101716 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 58
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101715 is 14
9999 mem: location 101716 is 1036
9999 mem: location 101715 is 14
9999 mem: storing 1065 in location 101719
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101719 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 101719 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 101720
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101719 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 101719 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 101721
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101705 is 32
9999 mem: location 101720 is 1065
9999 mem: storing 32 in location 1065
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101706 is 7
9999 mem: location 101721 is 1066
9999 mem: storing 7 in location 1066
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101710 is 20
9999 mem: storing 19 in location 101722
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101709 is 1034
9999 mem: location 1034 is 14
9999 mem: location 101722 is 19
9999 mem: storing 0 in location 101723
 104 run: break-if at-right?:boolean, 
9999 mem: location 101723 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101709 is 1034
9999 mem: location 1034 is 14
9999 mem: location 101709 is 1034
9999 mem: storing 15 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101704 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 101244 is 14
9999 mem: storing 15 in location 101244
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 101244 is 15
9999 mem: location 101243 is 15
9999 mem: storing 1 in location 101245
 103 run: break-if done?:boolean, 
9999 mem: location 101245 is 1
9999 run: jumping to instruction 17
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101239 is 1031
 102 run: print-character screen:address, c:character
9999 mem: location 101131 is 1031
9999 mem: location 101132 is 97
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 101733
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 101735
 103 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 101736
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 101737
9999 mem: storing 0 in location 101738
 103 run: break-if color-found?:boolean, 
9999 mem: location 101738 is 0
9999 run: jump-if fell through
 103 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 101737
 103 run: break-unless x:address:screen, 
9999 mem: location 101735 is 1031
9999 run: jump-unless fell through
 103 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 101735 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101735 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 101739
 103 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 101735 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101735 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 101740
 103 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 101735 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101735 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 20
9999 mem: storing 20 in location 101741
 103 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 101735 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101735 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 2
9999 mem: storing 2 in location 101742
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 101736 is 97
9999 mem: storing 0 in location 101743
 103 run: break-unless newline?:boolean, 
9999 mem: location 101743 is 0
9999 run: jumping to instruction 25
 103 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 101739 is 1033
9999 mem: location 1033 is 0
9999 mem: location 101741 is 20
9999 mem: storing 0 in location 101746
 103 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 101746 is 0
9999 mem: location 101740 is 1034
9999 mem: location 1034 is 15
9999 mem: storing 15 in location 101746
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 101735 is 1031
9999 mem: location 1031 is 2
9999 mem: location 1032 is 20
9999 mem: location 1033 is 0
9999 mem: location 1034 is 15
9999 mem: location 1035 is 1036
9999 mem: location 101735 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 101747
 103 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 101736 is 97
9999 mem: storing 0 in location 101748
 103 run: break-unless backspace?:boolean, 
9999 mem: location 101748 is 0
9999 run: jumping to instruction 44
 103 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 101747 is 1036
9999 mem: location 1036 is 40
9999 mem: location 1037 is 114
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 110
9999 mem: location 1042 is 7
9999 mem: location 1043 is 107
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 116
9999 mem: location 1048 is 7
9999 mem: location 1049 is 111
9999 mem: location 1050 is 7
9999 mem: location 1051 is 111
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1057 is 105
9999 mem: location 1058 is 7
9999 mem: location 1059 is 103
9999 mem: location 1060 is 7
9999 mem: location 1061 is 104
9999 mem: location 1062 is 7
9999 mem: location 1063 is 58
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1115 is 0
9999 mem: location 1116 is 7
9999 mem: location 101746 is 15
9999 mem: location 101747 is 1036
9999 mem: location 101746 is 15
9999 mem: storing 1067 in location 101750
 103 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 101750 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 101750 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 101751
 103 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 101750 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 101750 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 101752
 103 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 101736 is 97
9999 mem: location 101751 is 1067
9999 mem: storing 97 in location 1067
 103 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 101737 is 7
9999 mem: location 101752 is 1068
9999 mem: storing 7 in location 1068
 103 run: right:number <- subtract width:number, 1:literal
9999 mem: location 101741 is 20
9999 mem: storing 19 in location 101753
 103 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 101740 is 1034
9999 mem: location 1034 is 15
9999 mem: location 101753 is 19
9999 mem: storing 0 in location 101754
 103 run: break-if at-right?:boolean, 
9999 mem: location 101754 is 0
9999 run: jump-if fell through
 103 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 101740 is 1034
9999 mem: location 1034 is 15
9999 mem: location 101740 is 1034
9999 mem: storing 16 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 101735 is 1031
 102 run: reply 0:literal/dummy, 0:literal/quit, 1:literal/error
9999 run: result 0 is 0
9999 run: result 1 is 0
9999 run: result 2 is 1
9999 mem: location 101008 is 101125
9999 mem: storing 0 in location 101125
9999 mem: storing 0 in location 101005
9999 mem: storing 1 in location 101006
 101 run: reply-if quit?:boolean, 1:offset
9999 mem: location 101005 is 0
9999 run: jumping to instruction 15
 101 run: reply-if error?:boolean, 1:offset
9999 mem: location 101006 is 1
9999 run: jump-unless fell through
 101 run: reply-if 0:literal/dummy, quit?:boolean, error?:boolean
9999 mem: location 101005 is 0
9999 mem: location 101006 is 1
schedule: waking up routine 1
schedule: run1001/read-move-illegal-rank
  99 run: screen-should-contain [
    .rank too high: a    .
    .                    .
  ]
