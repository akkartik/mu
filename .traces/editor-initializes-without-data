parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    1:address:editor-data <- new-editor 0:literal/data, screen:address, 2:literal/left, 5:literal/right\n    2:editor-data <- copy 1:address:editor-data/deref\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    # 2 (data) <- just the ยง sentinel\n    # 3 (before cursor) <- the ยง sentinel\n    4 <- 2  # left\n    5 <- 4  # right  (inclusive)\n    6 <- 1  # cursor row\n    7 <- 2  # cursor column\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initializes-without-data
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: memory-should-contain ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initializes-without-data
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 3 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1045
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1047
 103 run: break-unless x:address:screen, 
9999 mem: location 1047 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1047 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1047 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1048
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1048 is 1014
9999 mem: storing 15 in location 1049
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1050
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 0
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 0
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 0
9999 mem: storing 1015 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1052 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1052 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 0
9999 mem: storing 1 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 1
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 1
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 1
9999 mem: storing 1017 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1052 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1052 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 1
9999 mem: storing 2 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 2
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 2
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 2
9999 mem: storing 1019 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1052 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1052 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 2
9999 mem: storing 3 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 3
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 3
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 3
9999 mem: storing 1021 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1052 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1052 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 3
9999 mem: storing 4 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 4
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 4
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 4
9999 mem: storing 1023 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1052 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1052 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 4
9999 mem: storing 5 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 5
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 5
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 5
9999 mem: storing 1025 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1052 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1052 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 5
9999 mem: storing 6 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 6
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 6
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 6
9999 mem: storing 1027 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1052 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1052 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 6
9999 mem: storing 7 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 7
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 7
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 7
9999 mem: storing 1029 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1052 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1052 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 7
9999 mem: storing 8 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 8
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 8
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 8
9999 mem: storing 1031 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1052 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1052 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 8
9999 mem: storing 9 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 9
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 9
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 9
9999 mem: storing 1033 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1052 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1052 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 9
9999 mem: storing 10 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 10
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 10
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 10
9999 mem: storing 1035 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1052 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1052 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 10
9999 mem: storing 11 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 11
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 11
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 11
9999 mem: storing 1037 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1052 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1052 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 11
9999 mem: storing 12 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 12
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 12
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 12
9999 mem: storing 1039 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1052 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1052 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 12
9999 mem: storing 13 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 13
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 13
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 13
9999 mem: storing 1041 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1052 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1052 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 13
9999 mem: storing 14 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 14
9999 mem: location 1049 is 15
9999 mem: storing 0 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1048 is 1014
9999 mem: location 1014 is 15
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1050 is 14
9999 mem: location 1048 is 1014
9999 mem: location 1050 is 14
9999 mem: storing 1043 in location 1052
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1052 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1052 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1053
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1053 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1052 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1052 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1054
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1054 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1050 is 14
9999 mem: storing 15 in location 1050
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1050 is 15
9999 mem: location 1049 is 15
9999 mem: storing 1 in location 1051
 103 run: break-if done?:boolean, 
9999 mem: location 1051 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1047 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1047 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1055
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1055 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1047 is 1009
9999 mem: location 1009 is 3
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1047 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1055
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1055 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1047 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: run [
    1:address:editor-data <- new-editor 0:literal/data, screen:address, 2:literal/left, 5:literal/right
    2:editor-data <- copy 1:address:editor-data/deref
  ]
parse: instruction: new-editor
parse:   ingredient: {name: "0", properties: ["0": "literal", "data": ]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "1", properties: ["1": "address":"editor-data"]}
parse: instruction: copy
parse:   ingredient: {name: "1", properties: ["1": "address":"editor-data", "deref": ]}
parse:   product: {name: "2", properties: ["2": "editor-data"]}
after-brace: recipe run1001
after-brace: new-editor ...
after-brace: copy ...
 101 run: 1:address:editor-data <- new-editor 0:literal/data, screen:address, 2:literal/left, 5:literal/right
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1056
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 0 in location 1058
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1059
 102 run: left:number <- next-ingredient 
9999 mem: storing 2 in location 1060
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1061
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1061 is 5
9999 mem: storing 4 in location 1061
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1071
9999 mem: storing 1071 in location 1062
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1062 is 1071
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1063
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1060 is 2
9999 mem: location 1063 is 1073
9999 mem: storing 2 in location 1073
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 2
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1062 is 1071
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1063
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1061 is 4
9999 mem: location 1063 is 1074
9999 mem: storing 4 in location 1074
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 2
9999 mem: location 1074 is 4
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1062 is 1071
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1063
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1063 is 1075
9999 mem: storing 1 in location 1075
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 2
9999 mem: location 1074 is 4
9999 mem: location 1075 is 1
9999 mem: location 1076 is 0
9999 mem: location 1062 is 1071
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1063
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1060 is 2
9999 mem: location 1063 is 1076
9999 mem: storing 2 in location 1076
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 2
9999 mem: location 1074 is 4
9999 mem: location 1075 is 1
9999 mem: location 1076 is 2
9999 mem: location 1062 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1064
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/ยง, 0:literal/tail
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1077
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1079
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1080
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1085
9999 mem: storing 1085 in location 1081
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1081 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1081 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1082
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1079 is 167
9999 mem: location 1082 is 1085
9999 mem: storing 167 in location 1085
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1081 is 1085
9999 mem: location 1085 is 167
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1081 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1083
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1080 is 0
9999 mem: location 1083 is 1086
9999 mem: storing 0 in location 1086
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1080 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1081 is 1085
9999 run: result 0 is 1085
9999 mem: location 1064 is 1071
9999 mem: storing 1085 in location 1071
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1062 is 1071
9999 mem: location 1071 is 1085
9999 mem: location 1072 is 0
9999 mem: location 1073 is 2
9999 mem: location 1074 is 4
9999 mem: location 1075 is 1
9999 mem: location 1076 is 2
9999 mem: location 1062 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1065
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1064 is 1071
9999 mem: location 1071 is 1085
9999 mem: location 1065 is 1072
9999 mem: storing 1085 in location 1072
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1058 is 0
9999 run: jump-if fell through
 102 run: reply result:address:editor-data
9999 mem: location 1062 is 1071
9999 run: result 0 is 1071
9999 mem: storing 1071 in location 1
 101 run: 2:editor-data <- copy 1:address:editor-data/deref
9999 mem: location 1 is 1071
9999 mem: location 1071 is 1085
9999 mem: location 1072 is 1085
9999 mem: location 1073 is 2
9999 mem: location 1074 is 4
9999 mem: location 1075 is 1
9999 mem: location 1076 is 2
9999 mem: storing 1085 in location 2
9999 mem: storing 1085 in location 3
9999 mem: storing 2 in location 4
9999 mem: storing 4 in location 5
9999 mem: storing 1 in location 6
9999 mem: storing 2 in location 7
 100 run: memory-should-contain [
    # 2 (data) <- just the ยง sentinel
    # 3 (before cursor) <- the ยง sentinel
    4 <- 2  # left
    5 <- 4  # right  (inclusive)
    6 <- 1  # cursor row
    7 <- 2  # cursor column
  ]
9999 run: checking location 4
9999 run: checking location 5
9999 run: checking location 6
9999 run: checking location 7
 100 run: screen-should-contain [
    .     .
    .     .
    .     .
  ]
