9999 parse: instruction: run
9999 parse:   ingredient: {"\n    1:address:array:character/raw <- new [_, hello!]\n    2:address:array:character/raw <- new [abc]\n    3:address:array:character/raw <- interpolate 1:address:array:character/raw, 2:address:array:character/raw\n    4:array:character/raw <- copy *3:address:array:character/raw\n  ": "literal-string"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    4:string <- [abc, hello!]\n    16 <- 0  # out of bounds\n  ": "literal-string"}
9999 after-brace: recipe scenario-interpolate-at-start
9999 after-brace: run ...
9999 after-brace: memory-should-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-interpolate-at-start
 102 run: run [
    1:address:array:character/raw <- new [_, hello!]
    2:address:array:character/raw <- new [abc]
    3:address:array:character/raw <- interpolate 1:address:array:character/raw, 2:address:array:character/raw
    4:array:character/raw <- copy *3:address:array:character/raw
  ]
9999 parse: instruction: new
9999 parse:   ingredient: {"_, hello!": "literal-string"}
9999 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9999 parse: instruction: new
9999 parse:   ingredient: {"abc": "literal-string"}
9999 parse:   product: {"2": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9999 parse: instruction: interpolate
9999 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9999 parse:   ingredient: {"2": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9999 parse:   product: {"3": <"address" : <"array" : <"character" : <>>>>, "raw": <>}
9999 parse: instruction: copy
9999 parse:   ingredient: {"*3": <"address" : <"array" : <"character" : <>>>>, "raw": <>, "lookup": <>}
9999 parse:   product: {"4": <"array" : <"character" : <>>>, "raw": <>}
9999 after-brace: recipe run1001
9999 after-brace: new ...
9999 after-brace: new ...
9999 after-brace: interpolate ...
9999 after-brace: copy ...
9999 trace: run: incrementing callstack depth to 2
 103 run: 1:address:array:character/raw <- new [_, hello!]
9999 mem: storing 1000 in location 1
 103 run: 2:address:array:character/raw <- new [abc]
9999 mem: storing 1010 in location 2
 103 run: 3:address:array:character/raw <- interpolate 1:address:array:character/raw, 2:address:array:character/raw
9999 mem: location 1 is 1000
9999 mem: location 2 is 1010
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 16
9999 mem: new alloc: 1014
 104 run: template:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1016
 104 run: tem-len:number <- length *template
9999 mem: location 1016 is 1000
9999 mem: storing 9 in location 1017
 104 run: result-len:number <- copy tem-len
9999 mem: location 1017 is 9
9999 mem: storing 9 in location 1018
 104 run: a:address:array:character, arg-received?:boolean <- next-ingredient 
9999 mem: storing 1010 in location 1019
9999 mem: storing 1 in location 1020
 104 run: break-unless arg-received?, 
9999 mem: location 1020 is 1
9999 run: jump-unless fell through
 104 run: a-len:number <- length *a
9999 mem: location 1019 is 1010
9999 mem: storing 3 in location 1021
 104 run: result-len <- add result-len, a-len
9999 mem: location 1018 is 9
9999 mem: location 1021 is 3
9999 mem: storing 12 in location 1018
 104 run: result-len <- subtract result-len, 1
9999 mem: location 1018 is 12
9999 mem: storing 11 in location 1018
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: a:address:array:character, arg-received?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1019
9999 mem: storing 0 in location 1020
 104 run: break-unless arg-received?, 
9999 mem: location 1020 is 0
9999 run: jumping to instruction 11
 104 run: rewind-ingredients 
 104 run: _ <- next-ingredient 
 104 run: result:address:array:character <- new character:type, result-len
9999 mem: location 1018 is 11
9999 mem: array size is 11
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1022
 104 run: result-idx:number <- copy 0
9999 mem: storing 0 in location 1023
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1024
 104 run: a:address:array:character, arg-received?:boolean <- next-ingredient 
9999 mem: storing 1010 in location 1019
9999 mem: storing 1 in location 1020
 104 run: break-unless arg-received?, 
9999 mem: location 1020 is 1
9999 run: jump-unless fell through
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 0
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, +done:label
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 0
9999 run: address to copy is 1001
9999 run: its type is character
9999 mem: location 1001 is 95
9999 mem: storing 95 in location 1026
 104 run: underscore?:boolean <- equal in, 95/_
9999 mem: location 1026 is 95
9999 mem: storing 1 in location 1027
 104 run: break-if underscore?, 
9999 mem: location 1027 is 1
9999 run: jumping to instruction 31
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1029
 104 run: arg-done?:boolean <- greater-or-equal j, a-len
9999 mem: location 1029 is 0
9999 mem: location 1021 is 3
9999 mem: storing 0 in location 1030
 104 run: break-if arg-done?, 
9999 mem: location 1030 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *a, j
9999 mem: location 1019 is 1010
9999 mem: location 1029 is 0
9999 run: address to copy is 1011
9999 run: its type is character
9999 mem: location 1011 is 97
9999 mem: storing 97 in location 1026
 104 run: out:address:character <- index-address *result, result-idx
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 0
9999 mem: storing 1032 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 97
9999 mem: location 1028 is 1032
9999 mem: storing 97 in location 1032
 104 run: j <- add j, 1
9999 mem: location 1029 is 0
9999 mem: storing 1 in location 1029
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 0
9999 mem: storing 1 in location 1023
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: arg-done?:boolean <- greater-or-equal j, a-len
9999 mem: location 1029 is 1
9999 mem: location 1021 is 3
9999 mem: storing 0 in location 1030
 104 run: break-if arg-done?, 
9999 mem: location 1030 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *a, j
9999 mem: location 1019 is 1010
9999 mem: location 1029 is 1
9999 run: address to copy is 1012
9999 run: its type is character
9999 mem: location 1012 is 98
9999 mem: storing 98 in location 1026
 104 run: out:address:character <- index-address *result, result-idx
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 1
9999 mem: storing 1033 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 98
9999 mem: location 1028 is 1033
9999 mem: storing 98 in location 1033
 104 run: j <- add j, 1
9999 mem: location 1029 is 1
9999 mem: storing 2 in location 1029
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 1
9999 mem: storing 2 in location 1023
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: arg-done?:boolean <- greater-or-equal j, a-len
9999 mem: location 1029 is 2
9999 mem: location 1021 is 3
9999 mem: storing 0 in location 1030
 104 run: break-if arg-done?, 
9999 mem: location 1030 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *a, j
9999 mem: location 1019 is 1010
9999 mem: location 1029 is 2
9999 run: address to copy is 1013
9999 run: its type is character
9999 mem: location 1013 is 99
9999 mem: storing 99 in location 1026
 104 run: out:address:character <- index-address *result, result-idx
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 2
9999 mem: storing 1034 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 99
9999 mem: location 1028 is 1034
9999 mem: storing 99 in location 1034
 104 run: j <- add j, 1
9999 mem: location 1029 is 2
9999 mem: storing 3 in location 1029
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 2
9999 mem: storing 3 in location 1023
 104 run: loop 
9999 run: jumping to instruction 34
 104 run: arg-done?:boolean <- greater-or-equal j, a-len
9999 mem: location 1029 is 3
9999 mem: location 1021 is 3
9999 mem: storing 1 in location 1030
 104 run: break-if arg-done?, 
9999 mem: location 1030 is 1
9999 run: jumping to instruction 42
 104 run: i <- add i, 1
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 104 run: loop 
9999 run: jumping to instruction 18
 104 run: a:address:array:character, arg-received?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1019
9999 mem: storing 0 in location 1020
 104 run: break-unless arg-received?, 
9999 mem: location 1020 is 0
9999 run: jumping to instruction 45
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 1
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 1
9999 run: address to copy is 1002
9999 run: its type is character
9999 mem: location 1002 is 44
9999 mem: storing 44 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 3
9999 mem: storing 1035 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 44
9999 mem: location 1028 is 1035
9999 mem: storing 44 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1024 is 1
9999 mem: storing 2 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 3
9999 mem: storing 4 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 2
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 2
9999 run: address to copy is 1003
9999 run: its type is character
9999 mem: location 1003 is 32
9999 mem: storing 32 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 4
9999 mem: storing 1036 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 32
9999 mem: location 1028 is 1036
9999 mem: storing 32 in location 1036
 104 run: i <- add i, 1
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 4
9999 mem: storing 5 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 3
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 3
9999 run: address to copy is 1004
9999 run: its type is character
9999 mem: location 1004 is 104
9999 mem: storing 104 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 5
9999 mem: storing 1037 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 104
9999 mem: location 1028 is 1037
9999 mem: storing 104 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1024 is 3
9999 mem: storing 4 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 5
9999 mem: storing 6 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 4
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 4
9999 run: address to copy is 1005
9999 run: its type is character
9999 mem: location 1005 is 101
9999 mem: storing 101 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 6
9999 mem: storing 1038 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 101
9999 mem: location 1028 is 1038
9999 mem: storing 101 in location 1038
 104 run: i <- add i, 1
9999 mem: location 1024 is 4
9999 mem: storing 5 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 6
9999 mem: storing 7 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 5
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 5
9999 run: address to copy is 1006
9999 run: its type is character
9999 mem: location 1006 is 108
9999 mem: storing 108 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 7
9999 mem: storing 1039 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 108
9999 mem: location 1028 is 1039
9999 mem: storing 108 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1024 is 5
9999 mem: storing 6 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 7
9999 mem: storing 8 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 6
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 6
9999 run: address to copy is 1007
9999 run: its type is character
9999 mem: location 1007 is 108
9999 mem: storing 108 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 8
9999 mem: storing 1040 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 108
9999 mem: location 1028 is 1040
9999 mem: storing 108 in location 1040
 104 run: i <- add i, 1
9999 mem: location 1024 is 6
9999 mem: storing 7 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 8
9999 mem: storing 9 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 7
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 7
9999 run: address to copy is 1008
9999 run: its type is character
9999 mem: location 1008 is 111
9999 mem: storing 111 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 9
9999 mem: storing 1041 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 111
9999 mem: location 1028 is 1041
9999 mem: storing 111 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1024 is 7
9999 mem: storing 8 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 9
9999 mem: storing 10 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 8
9999 mem: location 1017 is 9
9999 mem: storing 0 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 0
9999 run: jump-if fell through
 104 run: in:character <- index *template, i
9999 mem: location 1016 is 1000
9999 mem: location 1024 is 8
9999 run: address to copy is 1009
9999 run: its type is character
9999 mem: location 1009 is 33
9999 mem: storing 33 in location 1026
 104 run: out:address:character <- index-address *result, result-idx:number
9999 mem: location 1022 is 1031
9999 mem: location 1023 is 10
9999 mem: storing 1042 in location 1028
 104 run: *out <- copy in
9999 mem: location 1026 is 33
9999 mem: location 1028 is 1042
9999 mem: storing 33 in location 1042
 104 run: i <- add i, 1
9999 mem: location 1024 is 8
9999 mem: storing 9 in location 1024
 104 run: result-idx <- add result-idx, 1
9999 mem: location 1023 is 10
9999 mem: storing 11 in location 1023
 104 run: loop 
9999 run: jumping to instruction 48
 104 run: tem-done?:boolean <- greater-or-equal i, tem-len
9999 mem: location 1024 is 9
9999 mem: location 1017 is 9
9999 mem: storing 1 in location 1025
 104 run: break-if tem-done?, 
9999 mem: location 1025 is 1
9999 run: jumping to instruction 56
 104 run: reply result
9999 mem: location 1022 is 1031
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 3
 103 run: 4:array:character/raw <- copy *3:address:array:character/raw
9999 mem: location 3 is 1031
9999 mem: location 1031 is 11
9999 mem: location 1032 is 97
9999 mem: location 1033 is 98
9999 mem: location 1034 is 99
9999 mem: location 1035 is 44
9999 mem: location 1036 is 32
9999 mem: location 1037 is 104
9999 mem: location 1038 is 101
9999 mem: location 1039 is 108
9999 mem: location 1040 is 108
9999 mem: location 1041 is 111
9999 mem: location 1042 is 33
9999 mem: storing 11 in location 4
9999 mem: storing 97 in location 5
9999 mem: storing 98 in location 6
9999 mem: storing 99 in location 7
9999 mem: storing 44 in location 8
9999 mem: storing 32 in location 9
9999 mem: storing 104 in location 10
9999 mem: storing 101 in location 11
9999 mem: storing 108 in location 12
9999 mem: storing 108 in location 13
9999 mem: storing 111 in location 14
9999 mem: storing 33 in location 15
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    4:string <- [abc, hello!]
    16 <- 0  # out of bounds
  ]
9999 run: checking string length at 4
9999 run: checking location 5
9999 run: checking location 6
9999 run: checking location 7
9999 run: checking location 8
9999 run: checking location 9
9999 run: checking location 10
9999 run: checking location 11
9999 run: checking location 12
9999 run: checking location 13
9999 run: checking location 14
9999 run: checking location 15
9999 run: checking location 16
9999 trace: fall-through: exiting scenario-interpolate-at-start; decrementing callstack depth from 1
