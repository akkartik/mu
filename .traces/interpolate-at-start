schedule: main
run: -- nil
run: 1 main 0: ((1 string-address) <- new _, hello!)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1 to 1000
run: -- ((1 1000) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !))
run: 2 main 1: ((2 string-address) <- new abc)
run: 1010 => (2 string-address)
setm: (2 string-address) <= 1010
sz: (2 string-address)
addr: (2 string-address)
addr: initial result: 2
setm: size of (2 string-address) is 1
setm: (2 string-address): setting 2 to 1010
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c))
run: 3 main 2: ((3 string-address) <- interpolate (1 string-address) (2 string-address))
m: (1 string-address)
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
m: (2 string-address)
sz: (2 string-address)
addr: (2 string-address)
addr: initial result: 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c))
run: 4 interpolate 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1014 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30))
run: 5 interpolate 1: ((1 string-address) <- arg)
arg: nil 0 (1000 1010)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
addr: incrementing by 1014
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1015 to 1000
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000))
run: 6 interpolate 2: ((2 integer) <- len (1 string-address deref))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
run: 9 => (2 integer)
setm: (2 integer) <= 9
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
setm: size of (2 integer) is 1
setm: (2 integer): setting 1016 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9))
run: 7 interpolate 3: ((3 string-address) <- arg)
arg: nil 1 (1000 1010)
run: 1010 => (3 string-address)
setm: (3 string-address) <= 1010
sz: (3 string-address)
addr: (3 string-address)
addr: initial result: 3
addr: incrementing by 1014
setm: size of (3 string-address) is 1
setm: (3 string-address): setting 1017 to 1010
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010))
run: 8 interpolate 4: ((4 integer) <- len (3 string-address deref))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1014
sz: (1010 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
run: 3 => (4 integer)
setm: (4 integer) <= 3
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
setm: size of (4 integer) is 1
setm: (4 integer): setting 1018 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3))
run: 9 interpolate 5: ((5 integer) <- add (2 integer) (4 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
add: 9 3
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
run: 12 => (5 integer)
setm: (5 integer) <= 12
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1014
setm: size of (5 integer) is 1
setm: (5 integer): setting 1019 to 12
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 12))
run: 10 interpolate 6: ((5 integer) <- sub (5 integer) (1 literal))
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1014
run: 11 => (5 integer)
setm: (5 integer) <= 11
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1014
setm: size of (5 integer) is 1
setm: (5 integer): setting 1019 to 11
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11))
run: 11 interpolate 7: ((6 string-address) <- new (string literal) (5 integer))
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1014
sizeof: byte
run: 1045 => (6 string-address)
setm: (6 string-address) <= 1045
sz: (6 string-address)
addr: (6 string-address)
addr: initial result: 6
addr: incrementing by 1014
setm: size of (6 string-address) is 1
setm: (6 string-address): setting 1020 to 1045
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1045 11))
run: 12 interpolate 8: ((7 integer) <- copy (0 literal))
run: 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1045 11))
run: 13 interpolate 9: ((8 integer) <- copy (0 literal))
run: 0 => (8 integer)
setm: (8 integer) <= 0
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1045 11))
run: 14 interpolate 10: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1045 11))
run: 15 interpolate 11: (jump-unless (9 boolean) (26 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1045 11))
run: 16 interpolate 12: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1001 byte
m: (1001 byte global)
sz: (1001 byte global)
addr: (1001 byte global)
addr: initial result: 1001
run: _ => (10 byte)
setm: (10 byte) <= _
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to _
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1045 11))
run: 17 interpolate 13: ((11 boolean) <- eq (10 byte) (_ literal))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: t => (11 boolean)
setm: (11 boolean) <= t
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1014
setm: size of (11 boolean) is 1
setm: (11 boolean): setting 1025 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1025 t) (1045 11))
run: 18 interpolate 14: (jump-if (11 boolean) (5 offset))
m: (11 boolean)
sz: (11 boolean)
addr: (11 boolean)
addr: initial result: 11
addr: incrementing by 1014
jump: checking that t is t
jump: jumping to 20
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1025 t) (1045 11))
run: 19 interpolate 20: ((13 integer) <- copy (0 literal))
run: 0 => (13 integer)
setm: (13 integer) <= 0
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
setm: size of (13 integer) is 1
setm: (13 integer): setting 1027 to 0
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1025 t) (1027 0) (1045 11))
run: 20 interpolate 21: ((14 boolean) <- lt (13 integer) (4 integer))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
run: t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1028 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1025 t) (1027 0) (1028 t) (1045 11))
run: 21 interpolate 22: (jump-unless (14 boolean) (6 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 _) (1025 t) (1027 0) (1028 t) (1045 11))
run: 22 interpolate 23: ((10 byte) <- index (3 string-address deref) (13 integer))
array-info: (3 string-address deref) (13 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
array-info: initial base 1010 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1014
sz: (1010 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
array-info: array-len of (3 string-address deref) is 3
index: (3 string-address deref) (13 integer) => 1011 byte
m: (1011 byte global)
sz: (1011 byte global)
addr: (1011 byte global)
addr: initial result: 1011
run: a => (10 byte)
setm: (10 byte) <= a
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to a
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 a) (1025 t) (1027 0) (1028 t) (1045 11))
run: 23 interpolate 24: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1046
run: 1046 => (12 byte-address)
setm: (12 byte-address) <= 1046
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1046
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 0) (1028 t) (1045 11))
run: 24 interpolate 25: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: a => (12 byte-address deref)
setm: (12 byte-address deref) <= a
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1046 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1046
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1046 to a
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 0) (1028 t) (1045 11) (1046 a))
run: 25 interpolate 26: ((13 integer) <- add (13 integer) (1 literal))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
add: 0 1
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
run: 1 => (13 integer)
setm: (13 integer) <= 1
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
setm: size of (13 integer) is 1
setm: (13 integer): setting 1027 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 0) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 26 interpolate 27: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 0 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 27 interpolate 28: (jump (-8 offset))
jump: jumping to 21
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 28 interpolate 21: ((14 boolean) <- lt (13 integer) (4 integer))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
run: t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1028 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 29 interpolate 22: (jump-unless (14 boolean) (6 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 a) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 30 interpolate 23: ((10 byte) <- index (3 string-address deref) (13 integer))
array-info: (3 string-address deref) (13 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
array-info: initial base 1010 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1014
sz: (1010 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
array-info: array-len of (3 string-address deref) is 3
index: (3 string-address deref) (13 integer) => 1012 byte
m: (1012 byte global)
sz: (1012 byte global)
addr: (1012 byte global)
addr: initial result: 1012
run: b => (10 byte)
setm: (10 byte) <= b
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to b
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1046) (1027 1) (1028 t) (1045 11) (1046 a))
run: 31 interpolate 24: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1047
run: 1047 => (12 byte-address)
setm: (12 byte-address) <= 1047
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1047
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 1) (1028 t) (1045 11) (1046 a))
run: 32 interpolate 25: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: b => (12 byte-address deref)
setm: (12 byte-address deref) <= b
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1047 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1047
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1047 to b
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 1) (1028 t) (1045 11) (1046 a) (1047 b))
run: 33 interpolate 26: ((13 integer) <- add (13 integer) (1 literal))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
add: 1 1
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
run: 2 => (13 integer)
setm: (13 integer) <= 2
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
setm: size of (13 integer) is 1
setm: (13 integer): setting 1027 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 1) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 34 interpolate 27: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 1 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 35 interpolate 28: (jump (-8 offset))
jump: jumping to 21
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 36 interpolate 21: ((14 boolean) <- lt (13 integer) (4 integer))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
run: t => (14 boolean)
setm: (14 boolean) <= t
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1028 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 37 interpolate 22: (jump-unless (14 boolean) (6 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 b) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 38 interpolate 23: ((10 byte) <- index (3 string-address deref) (13 integer))
array-info: (3 string-address deref) (13 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
array-info: initial base 1010 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1014
sz: (1010 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1014
addr: deref 1017 => 1010
array-info: array-len of (3 string-address deref) is 3
index: (3 string-address deref) (13 integer) => 1013 byte
m: (1013 byte global)
sz: (1013 byte global)
addr: (1013 byte global)
addr: initial result: 1013
run: c => (10 byte)
setm: (10 byte) <= c
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to c
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1047) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 39 interpolate 24: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1048
run: 1048 => (12 byte-address)
setm: (12 byte-address) <= 1048
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1048
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b))
run: 40 interpolate 25: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: c => (12 byte-address deref)
setm: (12 byte-address deref) <= c
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1048 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1048
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1048 to c
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 2) (1028 t) (1045 11) (1046 a) (1047 b) (1048 c))
run: 41 interpolate 26: ((13 integer) <- add (13 integer) (1 literal))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
add: 2 1
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
run: 3 => (13 integer)
setm: (13 integer) <= 3
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
setm: size of (13 integer) is 1
setm: (13 integer): setting 1027 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 2) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1028 t) (1045 11) (1046 a) (1047 b) (1048 c))
run: 42 interpolate 27: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 2 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 3 => (7 integer)
setm: (7 integer) <= 3
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1028 t) (1045 11) (1046 a) (1047 b) (1048 c))
run: 43 interpolate 28: (jump (-8 offset))
jump: jumping to 21
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1028 t) (1045 11) (1046 a) (1047 b) (1048 c))
run: 44 interpolate 21: ((14 boolean) <- lt (13 integer) (4 integer))
m: (13 integer)
sz: (13 integer)
addr: (13 integer)
addr: initial result: 13
addr: incrementing by 1014
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1014
run: nil => (14 boolean)
setm: (14 boolean) <= nil
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
setm: size of (14 boolean) is 1
setm: (14 boolean): setting 1028 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 45 interpolate 22: (jump-unless (14 boolean) (6 offset))
m: (14 boolean)
sz: (14 boolean)
addr: (14 boolean)
addr: initial result: 14
addr: incrementing by 1014
jump: checking that nil is not t
jump: jumping to 29
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 0) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 46 interpolate 29: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 0 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 1 => (8 integer)
setm: (8 integer) <= 1
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 1
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 47 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 48 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 c) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 49 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1002 byte
m: (1002 byte global)
sz: (1002 byte global)
addr: (1002 byte global)
addr: initial result: 1002
run: , => (10 byte)
setm: (10 byte) <= ,
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to ,
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 ,) (1025 t) (1026 1048) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 50 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1049
run: 1049 => (12 byte-address)
setm: (12 byte-address) <= 1049
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1049
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c))
run: 51 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: , => (12 byte-address deref)
setm: (12 byte-address deref) <= ,
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1049 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1049
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1049 to ,
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 1) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 52 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 1 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 2
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 3) (1022 2) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 53 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 3 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 4 => (7 integer)
setm: (7 integer) <= 4
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 4
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 54 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 55 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 56 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024 ,) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 57 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1003 byte
m: (1003 byte global)
sz: (1003 byte global)
addr: (1003 byte global)
addr: initial result: 1003
run:   => (10 byte)
setm: (10 byte) <=  
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to  
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024  ) (1025 t) (1026 1049) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 58 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1050
run: 1050 => (12 byte-address)
setm: (12 byte-address) <= 1050
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1050
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,))
run: 59 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run:   => (12 byte-address deref)
setm: (12 byte-address deref) <=  
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1050 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1050
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1050 to  
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 2) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 60 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 2 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 3 => (8 integer)
setm: (8 integer) <= 3
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 3
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 4) (1022 3) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 61 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 4 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 5 => (7 integer)
setm: (7 integer) <= 5
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 5
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 62 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 63 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 64 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024  ) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 65 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1004 byte
m: (1004 byte global)
sz: (1004 byte global)
addr: (1004 byte global)
addr: initial result: 1004
run: h => (10 byte)
setm: (10 byte) <= h
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to h
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024 h) (1025 t) (1026 1050) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 66 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1051
run: 1051 => (12 byte-address)
setm: (12 byte-address) <= 1051
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1051
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ))
run: 67 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: h => (12 byte-address deref)
setm: (12 byte-address deref) <= h
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1051 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1051
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1051 to h
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 3) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 68 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 3 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 4 => (8 integer)
setm: (8 integer) <= 4
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 4
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 5) (1022 4) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 69 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 5 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 6 => (7 integer)
setm: (7 integer) <= 6
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 6
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 70 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 71 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 72 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 h) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 73 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1005 byte
m: (1005 byte global)
sz: (1005 byte global)
addr: (1005 byte global)
addr: initial result: 1005
run: e => (10 byte)
setm: (10 byte) <= e
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to e
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 e) (1025 t) (1026 1051) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 74 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1052
run: 1052 => (12 byte-address)
setm: (12 byte-address) <= 1052
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1052
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h))
run: 75 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: e => (12 byte-address deref)
setm: (12 byte-address deref) <= e
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1052 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1052
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1052 to e
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 4) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 76 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 4 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 5 => (8 integer)
setm: (8 integer) <= 5
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 5
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 6) (1022 5) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 77 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 6 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 7 => (7 integer)
setm: (7 integer) <= 7
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 7
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 78 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 79 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 80 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 e) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 81 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1006 byte
m: (1006 byte global)
sz: (1006 byte global)
addr: (1006 byte global)
addr: initial result: 1006
run: l => (10 byte)
setm: (10 byte) <= l
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 l) (1025 t) (1026 1052) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 82 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1053
run: 1053 => (12 byte-address)
setm: (12 byte-address) <= 1053
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1053
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e))
run: 83 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: l => (12 byte-address deref)
setm: (12 byte-address deref) <= l
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1053 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1053
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1053 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 5) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 84 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 5 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 6 => (8 integer)
setm: (8 integer) <= 6
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 6
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 7) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 85 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 7 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 8 => (7 integer)
setm: (7 integer) <= 8
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 8
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 86 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 87 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 88 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 89 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1007 byte
m: (1007 byte global)
sz: (1007 byte global)
addr: (1007 byte global)
addr: initial result: 1007
run: l => (10 byte)
setm: (10 byte) <= l
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1053) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 90 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1054
run: 1054 => (12 byte-address)
setm: (12 byte-address) <= 1054
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1054
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l))
run: 91 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: l => (12 byte-address deref)
setm: (12 byte-address deref) <= l
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1054 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1054
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1054 to l
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 6) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 92 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 6 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 7 => (8 integer)
setm: (8 integer) <= 7
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 7
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 8) (1022 7) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 93 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 8 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 9 => (7 integer)
setm: (7 integer) <= 9
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 94 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 95 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 96 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 l) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 97 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1008 byte
m: (1008 byte global)
sz: (1008 byte global)
addr: (1008 byte global)
addr: initial result: 1008
run: o => (10 byte)
setm: (10 byte) <= o
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to o
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 o) (1025 t) (1026 1054) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 98 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1055
run: 1055 => (12 byte-address)
setm: (12 byte-address) <= 1055
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1055
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l))
run: 99 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: o => (12 byte-address deref)
setm: (12 byte-address deref) <= o
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1055 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1055
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1055 to o
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 7) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 100 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 7 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 8 => (8 integer)
setm: (8 integer) <= 8
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 8
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 9) (1022 8) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 101 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 9 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 10 => (7 integer)
setm: (7 integer) <= 10
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 10
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 102 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 103 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 104 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that t is not t
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 o) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 105 interpolate 32: ((10 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1014
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1014
addr: deref 1015 => 1000
array-info: array-len of (1 string-address deref) is 9
index: (1 string-address deref) (8 integer) => 1009 byte
m: (1009 byte global)
sz: (1009 byte global)
addr: (1009 byte global)
addr: initial result: 1009
run: ! => (10 byte)
setm: (10 byte) <= !
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
setm: size of (10 byte) is 1
setm: (10 byte): setting 1024 to !
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 !) (1025 t) (1026 1055) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 106 interpolate 33: ((12 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
array-info: initial base 1045 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1014
sz: (1045 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1014
addr: deref 1020 => 1045
array-info: array-len of (6 string-address deref) is 11
index-address: (6 string-address deref) (7 integer) => 1056
run: 1056 => (12 byte-address)
setm: (12 byte-address) <= 1056
sz: (12 byte-address)
addr: (12 byte-address)
addr: initial result: 12
addr: incrementing by 1014
setm: size of (12 byte-address) is 1
setm: (12 byte-address): setting 1026 to 1056
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o))
run: 107 interpolate 34: ((12 byte-address deref) <- copy (10 byte))
m: (10 byte)
sz: (10 byte)
addr: (10 byte)
addr: initial result: 10
addr: incrementing by 1014
run: ! => (12 byte-address deref)
setm: (12 byte-address deref) <= !
sz: (12 byte-address deref)
m: (12 location)
sz: (12 location)
addr: (12 location)
addr: initial result: 12
addr: incrementing by 1014
sz: (1056 byte)
addr: (12 byte-address deref)
addr: initial result: 12
addr: incrementing by 1014
addr: deref 1026 => 1056
setm: size of (12 byte-address deref) is 1
setm: (12 byte-address deref): setting 1056 to !
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 8) (1023 t) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 108 interpolate 35: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
add: 8 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
run: 9 => (8 integer)
setm: (8 integer) <= 9
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
setm: size of (8 integer) is 1
setm: (8 integer): setting 1022 to 9
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 10) (1022 9) (1023 t) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 109 interpolate 36: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
add: 10 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
run: 11 => (7 integer)
setm: (7 integer) <= 11
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1014
setm: size of (7 integer) is 1
setm: (7 integer): setting 1021 to 11
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 11) (1022 9) (1023 t) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 110 interpolate 37: (jump (-8 offset))
jump: jumping to 30
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 11) (1022 9) (1023 t) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 111 interpolate 30: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1014
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1014
run: nil => (9 boolean)
setm: (9 boolean) <= nil
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1023 to nil
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 11) (1022 9) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 112 interpolate 31: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1014
jump: checking that nil is not t
jump: jumping to 38
run: -- ((1 1000) (2 1010) (1000 9) (1001 _) (1002 ,) (1003  ) (1004 h) (1005 e) (1006 l) (1007 l) (1008 o) (1009 !) (1010 3) (1011 a) (1012 b) (1013 c) (1014 30) (1015 1000) (1016 9) (1017 1010) (1018 3) (1019 11) (1020 1045) (1021 11) (1022 9) (1024 !) (1025 t) (1026 1056) (1027 3) (1045 11) (1046 a) (1047 b) (1048 c) (1049 ,) (1050  ) (1051 h) (1052 e) (1053 l) (1054 l) (1055 o) (1056 !))
run: 113 interpolate 38: (reply (6 string-address))
m: (6 string-address)
sz: (6 string-address)
addr: (6 string-address)
addr: initial result: 6
addr: incrementing by 1014
reply: ((6 string-address)) ((3 string-address))
reply: 1045 => (3 string-address)
setm: (3 string-address) <= 1045
sz: (3 string-address)
addr: (3 string-address)
addr: initial result: 3
setm: size of (3 string-address) is 1
setm: (3 string-address): setting 3 to 1045
schedule: done with routine
