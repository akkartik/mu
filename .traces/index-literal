schedule: main
run: -- nil
run: 1 main 0: ((1 integer) <- copy (2 literal))
run: 2 => (1 integer)
setm: (1 integer) <= 2
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 2
run: -- ((1 2))
run: 2 main 1: ((2 integer) <- copy (23 literal))
run: 23 => (2 integer)
setm: (2 integer) <= 23
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 23
run: -- ((1 2) (2 23))
run: 3 main 2: ((3 boolean) <- copy (nil literal))
run: nil => (3 boolean)
setm: (3 boolean) <= nil
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 3 to nil
run: -- ((1 2) (2 23))
run: 4 main 3: ((4 integer) <- copy (24 literal))
run: 24 => (4 integer)
setm: (4 integer) <= 24
setm: size of (4 integer) is 1
setm: (4 integer): setting 4 to 24
run: -- ((1 2) (2 23) (4 24))
run: 5 main 4: ((5 boolean) <- copy (t literal))
run: t => (5 boolean)
setm: (5 boolean) <= t
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 5 to t
run: -- ((1 2) (2 23) (4 24) (5 t))
run: 6 main 5: ((6 integer-boolean-pair) <- index (1 integer-boolean-pair-array) (1 literal))
array-info: (1 integer-boolean-pair-array) (1 literal)
array-info: initial base 1 type ((array t) (elem integer-boolean-pair))
array-len: (1 integer-boolean-pair-array)
m: (1 integer)
sizeof: (1 integer)
array-info: array-len of (1 integer-boolean-pair-array) is 2
sizeof: integer-boolean-pair
sizeof: integer
sizeof: boolean
index: (1 integer-boolean-pair-array) (1 literal) => 4 integer-boolean-pair
m: (4 integer-boolean-pair global)
sizeof: (4 integer-boolean-pair global)
sizeof: integer
sizeof: boolean
run: #(tagged record (24 t . nil)) => (6 integer-boolean-pair)
setm: (6 integer-boolean-pair) <= #(tagged record (24 t . nil))
setm: size of (6 integer-boolean-pair) is 2
sizeof: (6 integer-boolean-pair)
sizeof: integer
sizeof: boolean
setm: (6 integer-boolean-pair): setting 6 to 24
setm: (6 integer-boolean-pair): setting 7 to t
schedule: done with routine
