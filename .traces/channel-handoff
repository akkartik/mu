schedule: f1
run: -- nil
run: 1 f1 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30))
run: 2 f1 1: ((1 channel-address) <- new-channel (3 literal))
run: -- ((1000 30))
run: 3 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1031 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1031 30))
run: 4 new-channel 1: ((1 channel-address) <- new (channel literal))
sizeof: channel
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: 1062 => (1 channel-address)
setm: (1 channel-address) <= 1062
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1032 to 1062
run: -- ((1000 30) (1031 30) (1032 1062))
run: 5 new-channel 2: ((2 integer-address) <- get-address (1 channel-address deref) (0 offset))
run: 1062 => (2 integer-address)
setm: (2 integer-address) <= 1062
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 1033 to 1062
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062))
run: 6 new-channel 3: ((2 integer-address deref) <- copy (0 literal))
run: 0 => (2 integer-address deref)
setm: (2 integer-address deref) <= 0
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1062 to 0
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1062 0))
run: 7 new-channel 4: ((3 integer-address) <- get-address (1 channel-address deref) (1 offset))
sizeof: integer
run: 1063 => (3 integer-address)
setm: (3 integer-address) <= 1063
setm: size of (3 integer-address) is 1
setm: (3 integer-address): setting 1034 to 1063
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1062 0))
run: 8 new-channel 5: ((3 integer-address deref) <- copy (0 literal))
run: 0 => (3 integer-address deref)
setm: (3 integer-address deref) <= 0
setm: size of (3 integer-address deref) is 1
setm: (3 integer-address deref): setting 1063 to 0
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1062 0) (1063 0))
run: 9 new-channel 6: ((4 integer) <- arg)
arg: nil 0 (3)
run: 3 => (4 integer)
setm: (4 integer) <= 3
setm: size of (4 integer) is 1
setm: (4 integer): setting 1035 to 3
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 3) (1062 0) (1063 0))
run: 10 new-channel 7: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sizeof: (4 integer)
add: 3 1
m: (4 integer)
sizeof: (4 integer)
run: 4 => (4 integer)
setm: (4 integer) <= 4
setm: size of (4 integer) is 1
setm: (4 integer): setting 1035 to 4
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1062 0) (1063 0))
run: 11 new-channel 8: ((5 tagged-value-array-address-address) <- get-address (1 channel-address deref) (2 offset))
sizeof: integer
sizeof: integer
run: 1064 => (5 tagged-value-array-address-address)
setm: (5 tagged-value-array-address-address) <= 1064
setm: size of (5 tagged-value-array-address-address) is 1
setm: (5 tagged-value-array-address-address): setting 1036 to 1064
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0))
run: 12 new-channel 9: ((5 tagged-value-array-address-address deref) <- new (tagged-value-array literal) (4 integer))
m: (4 integer)
sizeof: (4 integer)
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1065 => (5 tagged-value-array-address-address deref)
setm: (5 tagged-value-array-address-address deref) <= 1065
setm: size of (5 tagged-value-array-address-address deref) is 1
setm: (5 tagged-value-array-address-address deref): setting 1064 to 1065
run: -- ((1000 30) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4))
run: 13 new-channel 10: (reply (1 channel-address))
m: (1 channel-address)
sizeof: (1 channel-address)
reply: ((1 channel-address)) ((1 channel-address))
reply: 1062 => (1 channel-address)
setm: (1 channel-address) <= 1062
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1001 to 1062
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4))
run: 14 f1 2: (fork (f2 fn) (1 channel-address))
m: (1 channel-address)
sizeof: (1 channel-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4))
run: 15 f1 3: ((1 tagged-value global) <- read (1 channel-address))
m: (1 channel-address)
sizeof: (1 channel-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4))
run: 16 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1074 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30))
run: 17 read 1: ((1 channel-address) <- arg)
arg: nil 0 (1062)
run: 1062 => (1 channel-address)
setm: (1 channel-address) <= 1062
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1075 to 1062
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062))
run: 18 read 2: ((2 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sizeof: (1 channel-address deref)
sizeof: (nil channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062))
run: 19 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1105 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1105 30))
run: 20 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 0 1065 . nil))
setm: size of (1 channel) is 3
sizeof: (1 channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
setm: (1 channel): setting 1106 to 0
setm: (1 channel): setting 1107 to 0
setm: (1 channel): setting 1108 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1105 30) (1106 0) (1107 0) (1108 1065))
run: 21 empty? 2: ((4 integer) <- get (1 channel) (0 offset))
m: (1106 integer global)
sizeof: (1106 integer global)
run: 0 => (4 integer)
setm: (4 integer) <= 0
setm: size of (4 integer) is 1
setm: (4 integer): setting 1109 to 0
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0))
run: 22 empty? 3: ((5 integer) <- get (1 channel) (1 offset))
sizeof: integer
m: (1107 integer global)
sizeof: (1107 integer global)
run: 0 => (5 integer)
setm: (5 integer) <= 0
setm: size of (5 integer) is 1
setm: (5 integer): setting 1110 to 0
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0))
run: 23 empty? 4: ((6 boolean) <- eq (4 integer) (5 integer))
m: (4 integer)
sizeof: (4 integer)
m: (5 integer)
sizeof: (5 integer)
run: t => (6 boolean)
setm: (6 boolean) <= t
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1111 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t))
run: 24 empty? 5: (reply (6 boolean))
m: (6 boolean)
sizeof: (6 boolean)
reply: ((6 boolean)) ((2 boolean))
reply: t => (2 boolean)
setm: (2 boolean) <= t
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 1076 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t))
run: 25 read 3: (jump-unless (2 boolean) (2 offset))
m: (2 boolean)
sizeof: (2 boolean)
jump: checking that t is not t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t))
run: 26 read 4: ((3 integer-address) <- get-address (1 channel-address deref) (1 offset))
sizeof: integer
run: 1063 => (3 integer-address)
setm: (3 integer-address) <= 1063
setm: size of (3 integer-address) is 1
setm: (3 integer-address): setting 1077 to 1063
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t))
run: 27 read 5: (sleep (3 integer-address deref))
m: (3 integer-address deref)
sizeof: (3 integer-address deref)
sizeof: (nil integer)
schedule: pushing read to sleep queue
schedule: f2
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t))
run: 28 f2 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1136 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30))
run: 29 f2 1: ((1 integer-address) <- new (integer literal))
sizeof: integer
run: 1167 => (1 integer-address)
setm: (1 integer-address) <= 1167
setm: size of (1 integer-address) is 1
setm: (1 integer-address): setting 1137 to 1167
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167))
run: 30 f2 2: ((1 integer-address deref) <- copy (24 literal))
run: 24 => (1 integer-address deref)
setm: (1 integer-address deref) <= 24
setm: size of (1 integer-address deref) is 1
setm: (1 integer-address deref): setting 1167 to 24
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1167 24))
run: 31 f2 3: ((2 channel-address) <- arg)
arg: nil 0 (1062)
run: 1062 => (2 channel-address)
setm: (2 channel-address) <= 1062
setm: size of (2 channel-address) is 1
setm: (2 channel-address): setting 1138 to 1062
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24))
run: 32 f2 4: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (1 integer-address))
m: (1 integer-address)
sizeof: (1 integer-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24))
run: 33 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1168 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30))
run: 34 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1167)
run: integer-address => (1 type)
setm: (1 type) <= integer-address
setm: size of (1 type) is 1
setm: (1 type): setting 1169 to integer-address
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address))
run: 35 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sizeof: (1 type)
sizeof: integer-address
run: 1 => (2 integer)
setm: (2 integer) <= 1
setm: size of (2 integer) is 1
setm: (2 integer): setting 1170 to 1
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1))
run: 36 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sizeof: (2 integer)
run: t => (3 boolean)
setm: (3 boolean) <= t
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1171 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t))
run: 37 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sizeof: (3 boolean)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t))
run: 38 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1199 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1199
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1172 to 1199
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199))
run: 39 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
run: 1199 => (5 location)
setm: (5 location) <= 1199
setm: size of (5 location) is 1
setm: (5 location): setting 1173 to 1199
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199))
run: 40 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sizeof: (1 type)
run: integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1199 to integer-address
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1199 integer-address))
run: 41 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
sizeof: type
run: 1200 => (6 location)
setm: (6 location) <= 1200
setm: size of (6 location) is 1
setm: (6 location): setting 1174 to 1200
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address))
run: 42 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1167)
run: 1167 => (6 location deref)
setm: (6 location deref) <= 1167
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1200 to 1167
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167))
run: 43 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sizeof: (4 tagged-value-address)
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1199 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1199
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 1139 to 1199
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167))
run: 44 f2 5: ((2 channel-address deref) <- write (2 channel-address) (3 tagged-value-address deref))
m: (2 channel-address)
sizeof: (2 channel-address)
m: (3 tagged-value-address deref)
sizeof: (3 tagged-value-address deref)
sizeof: (nil tagged-value)
sizeof: type
sizeof: location
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167))
run: 45 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1201 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30))
run: 46 write 1: ((1 channel-address) <- arg)
arg: nil 0 (1062 #(tagged record (integer-address 1167 . nil)))
run: 1062 => (1 channel-address)
setm: (1 channel-address) <= 1062
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1202 to 1062
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062))
run: 47 write 2: ((2 tagged-value) <- arg)
arg: nil 1 (1062 #(tagged record (integer-address 1167 . nil)))
run: #(tagged record (integer-address 1167 . nil)) => (2 tagged-value)
setm: (2 tagged-value) <= #(tagged record (integer-address 1167 . nil))
setm: size of (2 tagged-value) is 2
sizeof: (2 tagged-value)
sizeof: type
sizeof: location
setm: (2 tagged-value): setting 1203 to integer-address
setm: (2 tagged-value): setting 1204 to 1167
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167))
run: 48 write 3: ((4 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sizeof: (1 channel-address deref)
sizeof: (nil channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167))
run: 49 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1232 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30))
run: 50 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 0 1065 . nil))
setm: size of (1 channel) is 3
sizeof: (1 channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
setm: (1 channel): setting 1233 to 0
setm: (1 channel): setting 1234 to 0
setm: (1 channel): setting 1235 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065))
run: 51 full? 2: ((4 integer) <- get (1 channel) (1 offset))
sizeof: integer
m: (1234 integer global)
sizeof: (1234 integer global)
run: 0 => (4 integer)
setm: (4 integer) <= 0
setm: size of (4 integer) is 1
setm: (4 integer): setting 1236 to 0
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 0))
run: 52 full? 3: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sizeof: (4 integer)
add: 0 1
m: (4 integer)
sizeof: (4 integer)
run: 1 => (4 integer)
setm: (4 integer) <= 1
setm: size of (4 integer) is 1
setm: (4 integer): setting 1236 to 1
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1))
run: 53 full? 4: ((5 integer) <- capacity (1 channel))
m: (1 channel)
sizeof: (1 channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1))
run: 54 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1263 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1263 30))
run: 55 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 0 1065 . nil)))
run: #(tagged record (0 0 1065 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 0 1065 . nil))
setm: size of (1 channel) is 3
sizeof: (1 channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
setm: (1 channel): setting 1264 to 0
setm: (1 channel): setting 1265 to 0
setm: (1 channel): setting 1266 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1263 30) (1264 0) (1265 0) (1266 1065))
run: 56 capacity 2: ((4 tagged-value-array-address) <- get (1 channel) (2 offset))
sizeof: integer
sizeof: integer
m: (1266 tagged-value-array-address global)
sizeof: (1266 tagged-value-array-address global)
run: 1065 => (4 tagged-value-array-address)
setm: (4 tagged-value-array-address) <= 1065
setm: size of (4 tagged-value-array-address) is 1
setm: (4 tagged-value-array-address): setting 1267 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065))
run: 57 capacity 3: ((5 integer) <- len (4 tagged-value-array-address deref))
array-len: (4 tagged-value-array-address deref)
m: (1065 integer global)
sizeof: (1065 integer global)
run: 4 => (5 integer)
setm: (5 integer) <= 4
setm: size of (5 integer) is 1
setm: (5 integer): setting 1268 to 4
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 58 capacity 4: (reply (5 integer))
m: (5 integer)
sizeof: (5 integer)
reply: ((5 integer)) ((5 integer))
reply: 4 => (5 integer)
setm: (5 integer) <= 4
setm: size of (5 integer) is 1
setm: (5 integer): setting 1237 to 4
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 59 full? 5: ((6 boolean) <- lt (4 integer) (5 integer))
m: (4 integer)
sizeof: (4 integer)
m: (5 integer)
sizeof: (5 integer)
run: t => (6 boolean)
setm: (6 boolean) <= t
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1238 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 60 full? 6: (jump-if (6 boolean) (1 offset))
m: (6 boolean)
sizeof: (6 boolean)
jump: checking that t is t
jump: jumping to 8
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 61 full? 8: ((7 integer) <- get (1 channel) (0 offset))
m: (1233 integer global)
sizeof: (1233 integer global)
run: 0 => (7 integer)
setm: (7 integer) <= 0
setm: size of (7 integer) is 1
setm: (7 integer): setting 1239 to 0
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 62 full? 9: ((8 boolean) <- eq (7 integer) (4 integer))
m: (7 integer)
sizeof: (7 integer)
m: (4 integer)
sizeof: (4 integer)
run: nil => (8 boolean)
setm: (8 boolean) <= nil
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1240 to nil
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 63 full? 10: (reply (8 boolean))
m: (8 boolean)
sizeof: (8 boolean)
reply: ((8 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1205 to nil
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 64 write 4: (jump-unless (4 boolean) (2 offset))
m: (4 boolean)
sizeof: (4 boolean)
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 65 write 7: ((6 tagged-value-array-address) <- get (1 channel-address deref) (2 offset))
sizeof: integer
sizeof: integer
m: (1064 tagged-value-array-address global)
sizeof: (1064 tagged-value-array-address global)
run: 1065 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1065
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1207 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 66 write 8: ((7 integer-address) <- get-address (1 channel-address deref) (1 offset))
sizeof: integer
run: 1063 => (7 integer-address)
setm: (7 integer-address) <= 1063
setm: size of (7 integer-address) is 1
setm: (7 integer-address): setting 1208 to 1063
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 67 write 9: ((8 tagged-value-address) <- index-address (6 tagged-value-array-address deref) (7 integer-address deref))
m: (7 integer-address deref)
sizeof: (7 integer-address deref)
sizeof: (nil integer)
array-len: (1065 tagged-value-array global)
m: (1065 integer global)
sizeof: (1065 integer global)
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1066 => (8 tagged-value-address)
setm: (8 tagged-value-address) <= 1066
setm: size of (8 tagged-value-address) is 1
setm: (8 tagged-value-address): setting 1209 to 1066
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 68 write 10: ((8 tagged-value-address deref) <- copy (2 tagged-value))
m: (2 tagged-value)
sizeof: (2 tagged-value)
sizeof: type
sizeof: location
run: #(tagged record (integer-address 1167 . nil)) => (8 tagged-value-address deref)
setm: (8 tagged-value-address deref) <= #(tagged record (integer-address 1167 . nil))
setm: size of (8 tagged-value-address deref) is 2
sizeof: (8 tagged-value-address deref)
sizeof: (nil tagged-value)
sizeof: type
sizeof: location
setm: (8 tagged-value-address deref): setting 1066 to integer-address
setm: (8 tagged-value-address deref): setting 1067 to 1167
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 0) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 69 write 11: ((7 integer-address deref) <- add (7 integer-address deref) (1 literal))
m: (7 integer-address deref)
sizeof: (7 integer-address deref)
sizeof: (nil integer)
add: 0 1
m: (7 integer-address deref)
sizeof: (7 integer-address deref)
sizeof: (nil integer)
run: 1 => (7 integer-address deref)
setm: (7 integer-address deref) <= 1
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1063 to 1
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 70 write 12: ((9 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (1065 integer global)
sizeof: (1065 integer global)
run: 4 => (9 integer)
setm: (9 integer) <= 4
setm: size of (9 integer) is 1
setm: (9 integer): setting 1210 to 4
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 71 write 13: ((10 boolean) <- lt (7 integer-address deref) (9 integer))
m: (7 integer-address deref)
sizeof: (7 integer-address deref)
sizeof: (nil integer)
m: (9 integer)
sizeof: (9 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1211 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 72 write 14: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sizeof: (10 boolean)
jump: checking that t is t
jump: jumping to 16
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 73 write 16: (reply (1 channel-address deref))
m: (1 channel-address deref)
sizeof: (1 channel-address deref)
sizeof: (nil channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
reply: ((1 channel-address deref)) ((2 channel-address deref))
reply: #(tagged record (0 1 1065 . nil)) => (2 channel-address deref)
setm: (2 channel-address deref) <= #(tagged record (0 1 1065 . nil))
setm: size of (2 channel-address deref) is 3
sizeof: (2 channel-address deref)
sizeof: (nil channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
setm: (2 channel-address deref): setting 1062 to 0
setm: (2 channel-address deref): setting 1063 to 1
setm: (2 channel-address deref): setting 1064 to 1065
schedule: done with routine
schedule: waking up read
schedule: read
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 74 read 6: ((4 integer-address) <- get-address (1 channel-address deref) (0 offset))
run: 1062 => (4 integer-address)
setm: (4 integer-address) <= 1062
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1078 to 1062
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 75 read 7: ((5 tagged-value-array-address) <- get (1 channel-address deref) (2 offset))
sizeof: integer
sizeof: integer
m: (1064 tagged-value-array-address global)
sizeof: (1064 tagged-value-array-address global)
run: 1065 => (5 tagged-value-array-address)
setm: (5 tagged-value-array-address) <= 1065
setm: size of (5 tagged-value-array-address) is 1
setm: (5 tagged-value-array-address): setting 1079 to 1065
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 76 read 8: ((6 tagged-value) <- index (5 tagged-value-array-address deref) (4 integer-address deref))
m: (4 integer-address deref)
sizeof: (4 integer-address deref)
sizeof: (nil integer)
array-len: (1065 tagged-value-array global)
m: (1065 integer global)
sizeof: (1065 integer global)
sizeof: tagged-value
sizeof: type
sizeof: location
m: (1066 tagged-value global)
sizeof: (1066 tagged-value global)
sizeof: type
sizeof: location
run: #(tagged record (integer-address 1167 . nil)) => (6 tagged-value)
setm: (6 tagged-value) <= #(tagged record (integer-address 1167 . nil))
setm: size of (6 tagged-value) is 2
sizeof: (6 tagged-value)
sizeof: type
sizeof: location
setm: (6 tagged-value): setting 1080 to integer-address
setm: (6 tagged-value): setting 1081 to 1167
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 0) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1080 integer-address) (1081 1167) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 77 read 9: ((4 integer-address deref) <- add (4 integer-address deref) (1 literal))
m: (4 integer-address deref)
sizeof: (4 integer-address deref)
sizeof: (nil integer)
add: 0 1
m: (4 integer-address deref)
sizeof: (4 integer-address deref)
sizeof: (nil integer)
run: 1 => (4 integer-address deref)
setm: (4 integer-address deref) <= 1
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1062 to 1
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 1) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1080 integer-address) (1081 1167) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 78 read 10: ((8 integer) <- len (5 tagged-value-array-address deref))
array-len: (5 tagged-value-array-address deref)
m: (1065 integer global)
sizeof: (1065 integer global)
run: 4 => (8 integer)
setm: (8 integer) <= 4
setm: size of (8 integer) is 1
setm: (8 integer): setting 1082 to 4
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 1) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1080 integer-address) (1081 1167) (1082 4) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 79 read 11: ((9 boolean) <- lt (4 integer-address deref) (8 integer))
m: (4 integer-address deref)
sizeof: (4 integer-address deref)
sizeof: (nil integer)
m: (8 integer)
sizeof: (8 integer)
run: t => (9 boolean)
setm: (9 boolean) <= t
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1083 to t
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 1) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1080 integer-address) (1081 1167) (1082 4) (1083 t) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 80 read 12: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sizeof: (9 boolean)
jump: checking that t is t
jump: jumping to 14
run: -- ((1000 30) (1001 1062) (1031 30) (1032 1062) (1033 1062) (1034 1063) (1035 4) (1036 1064) (1062 1) (1063 1) (1064 1065) (1065 4) (1066 integer-address) (1067 1167) (1074 30) (1075 1062) (1076 t) (1077 1063) (1078 1062) (1079 1065) (1080 integer-address) (1081 1167) (1082 4) (1083 t) (1105 30) (1106 0) (1107 0) (1108 1065) (1109 0) (1110 0) (1111 t) (1136 30) (1137 1167) (1138 1062) (1139 1199) (1167 24) (1168 30) (1169 integer-address) (1170 1) (1171 t) (1172 1199) (1173 1199) (1174 1200) (1199 integer-address) (1200 1167) (1201 30) (1202 1062) (1203 integer-address) (1204 1167) (1207 1065) (1208 1063) (1209 1066) (1210 4) (1211 t) (1232 30) (1233 0) (1234 0) (1235 1065) (1236 1) (1237 4) (1238 t) (1239 0) (1263 30) (1264 0) (1265 0) (1266 1065) (1267 1065) (1268 4))
run: 81 read 14: (reply (6 tagged-value) (1 channel-address deref))
m: (6 tagged-value)
sizeof: (6 tagged-value)
sizeof: type
sizeof: location
m: (1 channel-address deref)
sizeof: (1 channel-address deref)
sizeof: (nil channel)
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
reply: ((6 tagged-value) (1 channel-address deref)) ((1 tagged-value global))
reply: #(tagged record (integer-address 1167 . nil)) => (1 tagged-value global)
setm: (1 tagged-value global) <= #(tagged record (integer-address 1167 . nil))
setm: size of (1 tagged-value global) is 2
sizeof: (1 tagged-value global)
sizeof: type
sizeof: location
setm: (1 tagged-value global): setting 1 to integer-address
setm: (1 tagged-value global): setting 2 to 1167
schedule: done with routine
