parse: instruction: run
parse:   ingredient: {name: "
    1:number <- copy 13:literal
  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1 <- 13
  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "
    2:number <- copy 13:literal
  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1 <- 13
    2 <- 13
  ", properties: [_: "literal-string"]}
after-brace: recipe foo
after-brace: run ...
after-brace: memory-should-contain ...
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: foo
 101 run: run [
    1:number <- copy 13:literal
  ]
parse: instruction: copy
parse:   ingredient: {name: "13", properties: ["13": "literal"]}
parse:   product: {name: "1", properties: ["1": "number"]}
after-brace: recipe run1001
after-brace: copy ...
 101 run: 1:number <- copy 13:literal
9999 mem: storing 13 in location 1
 100 run: memory-should-contain [
    1 <- 13
  ]
9999 run: checking location 1
 100 run: run [
    2:number <- copy 13:literal
  ]
parse: instruction: copy
parse:   ingredient: {name: "13", properties: ["13": "literal"]}
parse:   product: {name: "2", properties: ["2": "number"]}
after-brace: recipe run1002
after-brace: copy ...
 100 run: 2:number <- copy 13:literal
9999 mem: storing 13 in location 2
  99 run: memory-should-contain [
    1 <- 13
    2 <- 13
  ]
9999 run: checking location 1
9999 run: checking location 2
