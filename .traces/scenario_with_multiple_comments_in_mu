parse: instruction: run
parse:   ingredient: {name: "\n    # comment1\n    # comment2\n    1:number <- add 2:literal, 2:literal\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    1 <- 4\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario_with_multiple_comments_in_mu
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario_with_multiple_comments_in_mu
 101 run: run [
    # comment1
    # comment2
    1:number <- add 2:literal, 2:literal
  ]
parse: instruction: add
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "number"]}
after-brace: recipe run1001
after-brace: add ...
 101 run: 1:number <- add 2:literal, 2:literal
9999 mem: storing 4 in location 1
 100 run: memory-should-contain [
    1 <- 4
  ]
9999 run: checking location 1
