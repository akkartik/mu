c{0: 0 (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((-237 literal))) -- nil
c{1: 0 âœ“ (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((-237 literal)))
cn0: convert-names in main
cn0: (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((-237 literal))) nil nil
cn0: checking arg ((-237 literal))
cn0: checking oarg ((1 string-address) (raw))
maybe-add: ((1 string-address) (raw))
cn1: (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((-237 literal)))
schedule: main
run: main 0: (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((-237 literal)))
run: integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/main 0: 1000 => ((default-space space-address))
run: integer-to-decimal-string/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (-237)
run: integer-to-decimal-string/main 1: -237 => ((1 integer))
mem: ((1 integer)): 1002 <= -237
run: integer-to-decimal-string/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => -237
run: integer-to-decimal-string/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 1003 <= nil
run: integer-to-decimal-string/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 1005 <= nil
run: integer-to-decimal-string/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => -237
run: integer-to-decimal-string/main 7: t => ((5 boolean))
mem: ((5 boolean)): 1006 <= t
run: integer-to-decimal-string/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => t
run: integer-to-decimal-string/main 9: (((4 boolean)) <- ((copy)) ((t literal)))
run: integer-to-decimal-string/main 9: t => ((4 boolean))
mem: ((4 boolean)): 1005 <= t
run: integer-to-decimal-string/main 10: (((1 integer)) <- ((multiply)) ((1 integer)) ((-1 literal)))
mem: ((1 integer)) => -237
run: integer-to-decimal-string/main 10: 237 => ((1 integer))
mem: ((1 integer)): 1002 <= 237
run: integer-to-decimal-string/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/main 0: 1031 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1033 <= 1062
run: init-buffer/integer-to-decimal-string/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/main 2: 1062 => ((2 integer-address))
mem: ((2 integer-address)): 1034 <= 1062
run: init-buffer/integer-to-decimal-string/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1062 <= 0
run: init-buffer/integer-to-decimal-string/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/main 4: 1063 => ((3 string-address-address))
mem: ((3 string-address-address)): 1035 <= 1063
run: init-buffer/integer-to-decimal-string/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/main 5: 30 => ((4 integer))
mem: ((4 integer)): 1036 <= 30
run: init-buffer/integer-to-decimal-string/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/main 6: 1064 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1063 <= 1064
run: init-buffer/integer-to-decimal-string/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1062
run: integer-to-decimal-string/main 11: 1062 => ((6 buffer-address))
mem: ((6 buffer-address)): 1007 <= 1062
run: integer-to-decimal-string/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/main 12: #\0 => ((7 character))
mem: ((7 character)): 1008 <= #\0
run: integer-to-decimal-string/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/main 13: 48 => ((8 integer))
mem: ((8 integer)): 1009 <= 48
run: integer-to-decimal-string/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 237
run: integer-to-decimal-string/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 237
mem: ((1 integer)) => 237
run: integer-to-decimal-string/main 16: 23 => ((1 integer))
mem: ((1 integer)): 1002 <= 23
run: integer-to-decimal-string/main 16: 7 => ((10 integer))
mem: ((10 integer)): 1011 <= 7
run: integer-to-decimal-string/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 7
run: integer-to-decimal-string/main 17: 55 => ((11 integer))
mem: ((11 integer)): 1012 <= 55
run: integer-to-decimal-string/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 55
run: integer-to-decimal-string/main 18: #\7 => ((12 character))
mem: ((12 character)): 1013 <= #\7
run: integer-to-decimal-string/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 1062
mem: ((12 character)) => 7
run: append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/main 0: 1095 => ((default-space space-address))
run: append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 #\7)
run: append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1097 <= 1062
run: append/integer-to-decimal-string/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 #\7)
run: append/integer-to-decimal-string/main 2: #\7 => ((2 character))
mem: ((2 character)): 1098 <= #\7
run: append/integer-to-decimal-string/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1062
run: buffer-full?/append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/main 0: 1126 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: buffer-full?/append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1128 <= 1062
run: buffer-full?/append/integer-to-decimal-string/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1062 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1129 <= 0
run: buffer-full?/append/integer-to-decimal-string/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: buffer-full?/append/integer-to-decimal-string/main 3: 1064 => ((3 string-address))
mem: ((3 string-address)): 1130 <= 1064
run: buffer-full?/append/integer-to-decimal-string/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1064 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 4: 30 => ((4 integer))
mem: ((4 integer)): 1131 <= 30
run: buffer-full?/append/integer-to-decimal-string/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1132 <= nil
run: buffer-full?/append/integer-to-decimal-string/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1099 <= nil
run: append/integer-to-decimal-string/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/main 6: 1062 => ((4 integer-address))
mem: ((4 integer-address)): 1100 <= 1062
run: append/integer-to-decimal-string/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: append/integer-to-decimal-string/main 7: 1064 => ((5 string-address))
mem: ((5 string-address)): 1101 <= 1064
run: append/integer-to-decimal-string/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
run: append/integer-to-decimal-string/main 8: 1065 => ((6 byte-address))
mem: ((6 byte-address)): 1102 <= 1065
run: append/integer-to-decimal-string/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: append/integer-to-decimal-string/main 9: #\7 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1065 <= #\7
run: append/integer-to-decimal-string/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1062 <= 1
run: append/integer-to-decimal-string/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1062
run: integer-to-decimal-string/main 19: 1062 => ((6 buffer-address))
mem: ((6 buffer-address)): 1007 <= 1062
run: integer-to-decimal-string/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 23
run: integer-to-decimal-string/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 23
mem: ((1 integer)) => 23
run: integer-to-decimal-string/main 16: 2 => ((1 integer))
mem: ((1 integer)): 1002 <= 2
run: integer-to-decimal-string/main 16: 3 => ((10 integer))
mem: ((10 integer)): 1011 <= 3
run: integer-to-decimal-string/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 3
run: integer-to-decimal-string/main 17: 51 => ((11 integer))
mem: ((11 integer)): 1012 <= 51
run: integer-to-decimal-string/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 51
run: integer-to-decimal-string/main 18: #\3 => ((12 character))
mem: ((12 character)): 1013 <= #\3
run: integer-to-decimal-string/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 1062
mem: ((12 character)) => 3
run: append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/main 0: 1157 => ((default-space space-address))
run: append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 #\3)
run: append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1159 <= 1062
run: append/integer-to-decimal-string/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 #\3)
run: append/integer-to-decimal-string/main 2: #\3 => ((2 character))
mem: ((2 character)): 1160 <= #\3
run: append/integer-to-decimal-string/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1062
run: buffer-full?/append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/main 0: 1188 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: buffer-full?/append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1190 <= 1062
run: buffer-full?/append/integer-to-decimal-string/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1062 integer) (raw)) => 1
run: buffer-full?/append/integer-to-decimal-string/main 2: 1 => ((2 integer))
mem: ((2 integer)): 1191 <= 1
run: buffer-full?/append/integer-to-decimal-string/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: buffer-full?/append/integer-to-decimal-string/main 3: 1064 => ((3 string-address))
mem: ((3 string-address)): 1192 <= 1064
run: buffer-full?/append/integer-to-decimal-string/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1064 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 4: 30 => ((4 integer))
mem: ((4 integer)): 1193 <= 30
run: buffer-full?/append/integer-to-decimal-string/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1194 <= nil
run: buffer-full?/append/integer-to-decimal-string/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1161 <= nil
run: append/integer-to-decimal-string/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/main 6: 1062 => ((4 integer-address))
mem: ((4 integer-address)): 1162 <= 1062
run: append/integer-to-decimal-string/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: append/integer-to-decimal-string/main 7: 1064 => ((5 string-address))
mem: ((5 string-address)): 1163 <= 1064
run: append/integer-to-decimal-string/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
run: append/integer-to-decimal-string/main 8: 1066 => ((6 byte-address))
mem: ((6 byte-address)): 1164 <= 1066
run: append/integer-to-decimal-string/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: append/integer-to-decimal-string/main 9: #\3 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1066 <= #\3
run: append/integer-to-decimal-string/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/integer-to-decimal-string/main 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1062 <= 2
run: append/integer-to-decimal-string/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1062
run: integer-to-decimal-string/main 19: 1062 => ((6 buffer-address))
mem: ((6 buffer-address)): 1007 <= 1062
run: integer-to-decimal-string/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 2
mem: ((1 integer)) => 2
run: integer-to-decimal-string/main 16: 0 => ((1 integer))
mem: ((1 integer)): 1002 <= 0
run: integer-to-decimal-string/main 16: 2 => ((10 integer))
mem: ((10 integer)): 1011 <= 2
run: integer-to-decimal-string/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 2
run: integer-to-decimal-string/main 17: 50 => ((11 integer))
mem: ((11 integer)): 1012 <= 50
run: integer-to-decimal-string/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 50
run: integer-to-decimal-string/main 18: #\2 => ((12 character))
mem: ((12 character)): 1013 <= #\2
run: integer-to-decimal-string/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 1062
mem: ((12 character)) => 2
run: append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/main 0: 1219 => ((default-space space-address))
run: append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 #\2)
run: append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1221 <= 1062
run: append/integer-to-decimal-string/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 #\2)
run: append/integer-to-decimal-string/main 2: #\2 => ((2 character))
mem: ((2 character)): 1222 <= #\2
run: append/integer-to-decimal-string/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1062
run: buffer-full?/append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/main 0: 1250 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: buffer-full?/append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1252 <= 1062
run: buffer-full?/append/integer-to-decimal-string/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1062 integer) (raw)) => 2
run: buffer-full?/append/integer-to-decimal-string/main 2: 2 => ((2 integer))
mem: ((2 integer)): 1253 <= 2
run: buffer-full?/append/integer-to-decimal-string/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: buffer-full?/append/integer-to-decimal-string/main 3: 1064 => ((3 string-address))
mem: ((3 string-address)): 1254 <= 1064
run: buffer-full?/append/integer-to-decimal-string/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1064 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 4: 30 => ((4 integer))
mem: ((4 integer)): 1255 <= 30
run: buffer-full?/append/integer-to-decimal-string/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 2
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1256 <= nil
run: buffer-full?/append/integer-to-decimal-string/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1223 <= nil
run: append/integer-to-decimal-string/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/main 6: 1062 => ((4 integer-address))
mem: ((4 integer-address)): 1224 <= 1062
run: append/integer-to-decimal-string/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: append/integer-to-decimal-string/main 7: 1064 => ((5 string-address))
mem: ((5 string-address)): 1225 <= 1064
run: append/integer-to-decimal-string/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 2
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
run: append/integer-to-decimal-string/main 8: 1067 => ((6 byte-address))
mem: ((6 byte-address)): 1226 <= 1067
run: append/integer-to-decimal-string/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/integer-to-decimal-string/main 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1067 <= #\2
run: append/integer-to-decimal-string/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 2
run: append/integer-to-decimal-string/main 10: 3 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1062 <= 3
run: append/integer-to-decimal-string/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1062
run: integer-to-decimal-string/main 19: 1062 => ((6 buffer-address))
mem: ((6 buffer-address)): 1007 <= 1062
run: integer-to-decimal-string/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/main 14: t => ((9 boolean))
mem: ((9 boolean)): 1010 <= t
run: integer-to-decimal-string/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: integer-to-decimal-string/main 22: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((- literal)))
mem: ((6 buffer-address)) => 1062
run: append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/main 0: 1281 => ((default-space space-address))
run: append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 #\-)
run: append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1283 <= 1062
run: append/integer-to-decimal-string/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 #\-)
run: append/integer-to-decimal-string/main 2: #\- => ((2 character))
mem: ((2 character)): 1284 <= #\-
run: append/integer-to-decimal-string/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1062
run: buffer-full?/append/integer-to-decimal-string/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/main 0: 1312 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: buffer-full?/append/integer-to-decimal-string/main 1: 1062 => ((1 buffer-address))
mem: ((1 buffer-address)): 1314 <= 1062
run: buffer-full?/append/integer-to-decimal-string/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1062 integer) (raw)) => 3
run: buffer-full?/append/integer-to-decimal-string/main 2: 3 => ((2 integer))
mem: ((2 integer)): 1315 <= 3
run: buffer-full?/append/integer-to-decimal-string/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: buffer-full?/append/integer-to-decimal-string/main 3: 1064 => ((3 string-address))
mem: ((3 string-address)): 1316 <= 1064
run: buffer-full?/append/integer-to-decimal-string/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1064 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 4: 30 => ((4 integer))
mem: ((4 integer)): 1317 <= 30
run: buffer-full?/append/integer-to-decimal-string/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1318 <= nil
run: buffer-full?/append/integer-to-decimal-string/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1285 <= nil
run: append/integer-to-decimal-string/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/main 6: 1062 => ((4 integer-address))
mem: ((4 integer-address)): 1286 <= 1062
run: append/integer-to-decimal-string/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: append/integer-to-decimal-string/main 7: 1064 => ((5 string-address))
mem: ((5 string-address)): 1287 <= 1064
run: append/integer-to-decimal-string/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
run: append/integer-to-decimal-string/main 8: 1068 => ((6 byte-address))
mem: ((6 byte-address)): 1288 <= 1068
run: append/integer-to-decimal-string/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: append/integer-to-decimal-string/main 9: #\- => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1068 <= #\-
run: append/integer-to-decimal-string/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/integer-to-decimal-string/main 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1062 <= 4
run: append/integer-to-decimal-string/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1062
run: integer-to-decimal-string/main 22: 1062 => ((6 buffer-address))
mem: ((6 buffer-address)): 1007 <= 1062
run: integer-to-decimal-string/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((1062 integer) (raw)) => 4
run: integer-to-decimal-string/main 23: 4 => ((13 integer))
mem: ((13 integer)): 1014 <= 4
run: integer-to-decimal-string/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((1063 string-address) (raw)) => 1064
run: integer-to-decimal-string/main 24: 1064 => ((14 string-address))
mem: ((14 string-address)): 1015 <= 1064
run: integer-to-decimal-string/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 4
run: integer-to-decimal-string/main 25: 1343 => ((15 string-address))
mem: ((15 string-address)): 1016 <= 1343
run: integer-to-decimal-string/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 4
run: integer-to-decimal-string/main 26: 3 => ((16 integer))
mem: ((16 integer)): 1017 <= 3
run: integer-to-decimal-string/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/main 27: 0 => ((17 integer))
mem: ((17 integer)): 1018 <= 0
run: integer-to-decimal-string/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 3
run: integer-to-decimal-string/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 3
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
mem: ((1068 byte) (raw)) => -
run: integer-to-decimal-string/main 30: #\- => ((18 byte))
mem: ((18 byte)): 1019 <= #\-
run: integer-to-decimal-string/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((1343 string) (raw))
mem: ((1343 integer) (raw)) => 4
run: integer-to-decimal-string/main 31: 1344 => ((19 byte-address))
mem: ((19 byte-address)): 1020 <= 1344
run: integer-to-decimal-string/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => -
run: integer-to-decimal-string/main 32: #\- => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 1344 <= #\-
run: integer-to-decimal-string/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 3
run: integer-to-decimal-string/main 33: 2 => ((16 integer))
mem: ((16 integer)): 1017 <= 2
run: integer-to-decimal-string/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/main 34: 1 => ((17 integer))
mem: ((17 integer)): 1018 <= 1
run: integer-to-decimal-string/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 2
run: integer-to-decimal-string/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 2
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
mem: ((1067 byte) (raw)) => 2
run: integer-to-decimal-string/main 30: #\2 => ((18 byte))
mem: ((18 byte)): 1019 <= #\2
run: integer-to-decimal-string/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 1
array-len: ((1343 string) (raw))
mem: ((1343 integer) (raw)) => 4
run: integer-to-decimal-string/main 31: 1345 => ((19 byte-address))
mem: ((19 byte-address)): 1020 <= 1345
run: integer-to-decimal-string/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 2
run: integer-to-decimal-string/main 32: #\2 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 1345 <= #\2
run: integer-to-decimal-string/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 2
run: integer-to-decimal-string/main 33: 1 => ((16 integer))
mem: ((16 integer)): 1017 <= 1
run: integer-to-decimal-string/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 1
run: integer-to-decimal-string/main 34: 2 => ((17 integer))
mem: ((17 integer)): 1018 <= 2
run: integer-to-decimal-string/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 1
run: integer-to-decimal-string/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 1
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
mem: ((1066 byte) (raw)) => 3
run: integer-to-decimal-string/main 30: #\3 => ((18 byte))
mem: ((18 byte)): 1019 <= #\3
run: integer-to-decimal-string/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 2
array-len: ((1343 string) (raw))
mem: ((1343 integer) (raw)) => 4
run: integer-to-decimal-string/main 31: 1346 => ((19 byte-address))
mem: ((19 byte-address)): 1020 <= 1346
run: integer-to-decimal-string/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 3
run: integer-to-decimal-string/main 32: #\3 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 1346 <= #\3
run: integer-to-decimal-string/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 1
run: integer-to-decimal-string/main 33: 0 => ((16 integer))
mem: ((16 integer)): 1017 <= 0
run: integer-to-decimal-string/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 2
run: integer-to-decimal-string/main 34: 3 => ((17 integer))
mem: ((17 integer)): 1018 <= 3
run: integer-to-decimal-string/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1010 <= nil
run: integer-to-decimal-string/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((1064 string) (raw))
mem: ((1064 integer) (raw)) => 30
mem: ((1065 byte) (raw)) => 7
run: integer-to-decimal-string/main 30: #\7 => ((18 byte))
mem: ((18 byte)): 1019 <= #\7
run: integer-to-decimal-string/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 3
array-len: ((1343 string) (raw))
mem: ((1343 integer) (raw)) => 4
run: integer-to-decimal-string/main 31: 1347 => ((19 byte-address))
mem: ((19 byte-address)): 1020 <= 1347
run: integer-to-decimal-string/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 7
run: integer-to-decimal-string/main 32: #\7 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 1347 <= #\7
run: integer-to-decimal-string/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/main 33: -1 => ((16 integer))
mem: ((16 integer)): 1017 <= -1
run: integer-to-decimal-string/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 3
run: integer-to-decimal-string/main 34: 4 => ((17 integer))
mem: ((17 integer)): 1018 <= 4
run: integer-to-decimal-string/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/main 28: t => ((9 boolean))
mem: ((9 boolean)): 1010 <= t
run: integer-to-decimal-string/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 1343
run: main 0: 1343 => ((1 string-address) (raw))
mem: ((1 string-address) (raw)): 1 <= 1343
schedule: done with routine nil
