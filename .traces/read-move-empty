parse: instruction: assume-screen
parse:   ingredient: {name: "20", properties: ["20": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 10:literal/newline
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    wait-for-routine 2:number
  ", properties: ["
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 10:literal/newline
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    wait-for-routine 2:number
  ": "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "
    .that's not enough   .
    .                    .
  ", properties: ["
    .that's not enough   .
    .                    .
  ": "literal-string"]}
after-brace: recipe read-move-empty
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: read-move-empty
run: screen:address <- assume-screen 20:literal/width, 2:literal/height
run: default-space:address:array:location <- new location:type, 30:literal/capacity
mem: array size is 30
mem: new alloc: 1000
run: result:address:screen <- new screen:type
mem: new alloc: 1031
mem: storing 1031 in location 1002
run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 0
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1032
mem: storing 1032 in location 1003
run: width:address:number/deref <- next-ingredient 
mem: location 1003 is 1032
mem: storing 20 in location 1032
run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1031
mem: storing 1031 in location 1004
run: height:address:number/deref <- next-ingredient 
mem: location 1004 is 1031
mem: storing 2 in location 1031
run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1005
run: row:address:number/deref <- copy 0:literal
mem: location 1005 is 1033
mem: storing 0 in location 1033
run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1006
run: column:address:number/deref <- copy 0:literal
mem: location 1006 is 1034
mem: storing 0 in location 1034
run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
mem: location 1003 is 1032
mem: location 1032 is 20
mem: location 1004 is 1031
mem: location 1031 is 2
mem: storing 40 in location 1007
run: buf:address:address:array:character <- get-address result:address:screen/deref, data:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1035
mem: storing 1035 in location 1008
run: buf:address:address:array:character/deref <- new character:literal, bufsize:number
mem: location 1007 is 40
mem: array size is 40
mem: new alloc: 1036
mem: location 1008 is 1035
mem: storing 1036 in location 1035
run: clear-screen result:address:screen
mem: location 1002 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1077
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1079
run: break-unless x:address:screen, 
mem: location 1079 is 1031
run: jump-unless fell through
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1080
run: max:number <- length buf:address:array:character/deref
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1080 is 1036
mem: storing 40 in location 1081
run: i:number <- copy 0:literal
mem: storing 0 in location 1082
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 0
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 0
mem: location 1080 is 1036
mem: location 1082 is 0
mem: storing 1037 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1037
mem: storing 0 in location 1037
run: i:number <- add i:number, 1:literal
mem: location 1082 is 0
mem: storing 1 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 1
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 1
mem: location 1080 is 1036
mem: location 1082 is 1
mem: storing 1038 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1038
mem: storing 0 in location 1038
run: i:number <- add i:number, 1:literal
mem: location 1082 is 1
mem: storing 2 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 2
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 2
mem: location 1080 is 1036
mem: location 1082 is 2
mem: storing 1039 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1039
mem: storing 0 in location 1039
run: i:number <- add i:number, 1:literal
mem: location 1082 is 2
mem: storing 3 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 3
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 3
mem: location 1080 is 1036
mem: location 1082 is 3
mem: storing 1040 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1040
mem: storing 0 in location 1040
run: i:number <- add i:number, 1:literal
mem: location 1082 is 3
mem: storing 4 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 4
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 4
mem: location 1080 is 1036
mem: location 1082 is 4
mem: storing 1041 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1041
mem: storing 0 in location 1041
run: i:number <- add i:number, 1:literal
mem: location 1082 is 4
mem: storing 5 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 5
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 5
mem: location 1080 is 1036
mem: location 1082 is 5
mem: storing 1042 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1042
mem: storing 0 in location 1042
run: i:number <- add i:number, 1:literal
mem: location 1082 is 5
mem: storing 6 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 6
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 6
mem: location 1080 is 1036
mem: location 1082 is 6
mem: storing 1043 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1043
mem: storing 0 in location 1043
run: i:number <- add i:number, 1:literal
mem: location 1082 is 6
mem: storing 7 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 7
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 7
mem: location 1080 is 1036
mem: location 1082 is 7
mem: storing 1044 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1044
mem: storing 0 in location 1044
run: i:number <- add i:number, 1:literal
mem: location 1082 is 7
mem: storing 8 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 8
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 8
mem: location 1080 is 1036
mem: location 1082 is 8
mem: storing 1045 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1045
mem: storing 0 in location 1045
run: i:number <- add i:number, 1:literal
mem: location 1082 is 8
mem: storing 9 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 9
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 9
mem: location 1080 is 1036
mem: location 1082 is 9
mem: storing 1046 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1046
mem: storing 0 in location 1046
run: i:number <- add i:number, 1:literal
mem: location 1082 is 9
mem: storing 10 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 10
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 10
mem: location 1080 is 1036
mem: location 1082 is 10
mem: storing 1047 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1047
mem: storing 0 in location 1047
run: i:number <- add i:number, 1:literal
mem: location 1082 is 10
mem: storing 11 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 11
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 11
mem: location 1080 is 1036
mem: location 1082 is 11
mem: storing 1048 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1048
mem: storing 0 in location 1048
run: i:number <- add i:number, 1:literal
mem: location 1082 is 11
mem: storing 12 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 12
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 12
mem: location 1080 is 1036
mem: location 1082 is 12
mem: storing 1049 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1049
mem: storing 0 in location 1049
run: i:number <- add i:number, 1:literal
mem: location 1082 is 12
mem: storing 13 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 13
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 13
mem: location 1080 is 1036
mem: location 1082 is 13
mem: storing 1050 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1050
mem: storing 0 in location 1050
run: i:number <- add i:number, 1:literal
mem: location 1082 is 13
mem: storing 14 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 14
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 14
mem: location 1080 is 1036
mem: location 1082 is 14
mem: storing 1051 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1051
mem: storing 0 in location 1051
run: i:number <- add i:number, 1:literal
mem: location 1082 is 14
mem: storing 15 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 15
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 15
mem: location 1080 is 1036
mem: location 1082 is 15
mem: storing 1052 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1052
mem: storing 0 in location 1052
run: i:number <- add i:number, 1:literal
mem: location 1082 is 15
mem: storing 16 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 16
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 16
mem: location 1080 is 1036
mem: location 1082 is 16
mem: storing 1053 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1053
mem: storing 0 in location 1053
run: i:number <- add i:number, 1:literal
mem: location 1082 is 16
mem: storing 17 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 17
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 17
mem: location 1080 is 1036
mem: location 1082 is 17
mem: storing 1054 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1054
mem: storing 0 in location 1054
run: i:number <- add i:number, 1:literal
mem: location 1082 is 17
mem: storing 18 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 18
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 18
mem: location 1080 is 1036
mem: location 1082 is 18
mem: storing 1055 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1055
mem: storing 0 in location 1055
run: i:number <- add i:number, 1:literal
mem: location 1082 is 18
mem: storing 19 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 19
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 19
mem: location 1080 is 1036
mem: location 1082 is 19
mem: storing 1056 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1056
mem: storing 0 in location 1056
run: i:number <- add i:number, 1:literal
mem: location 1082 is 19
mem: storing 20 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 20
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 20
mem: location 1080 is 1036
mem: location 1082 is 20
mem: storing 1057 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1057
mem: storing 0 in location 1057
run: i:number <- add i:number, 1:literal
mem: location 1082 is 20
mem: storing 21 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 21
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 21
mem: location 1080 is 1036
mem: location 1082 is 21
mem: storing 1058 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1058
mem: storing 0 in location 1058
run: i:number <- add i:number, 1:literal
mem: location 1082 is 21
mem: storing 22 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 22
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 22
mem: location 1080 is 1036
mem: location 1082 is 22
mem: storing 1059 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1059
mem: storing 0 in location 1059
run: i:number <- add i:number, 1:literal
mem: location 1082 is 22
mem: storing 23 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 23
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 23
mem: location 1080 is 1036
mem: location 1082 is 23
mem: storing 1060 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1060
mem: storing 0 in location 1060
run: i:number <- add i:number, 1:literal
mem: location 1082 is 23
mem: storing 24 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 24
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 24
mem: location 1080 is 1036
mem: location 1082 is 24
mem: storing 1061 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1061
mem: storing 0 in location 1061
run: i:number <- add i:number, 1:literal
mem: location 1082 is 24
mem: storing 25 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 25
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 25
mem: location 1080 is 1036
mem: location 1082 is 25
mem: storing 1062 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1062
mem: storing 0 in location 1062
run: i:number <- add i:number, 1:literal
mem: location 1082 is 25
mem: storing 26 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 26
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 26
mem: location 1080 is 1036
mem: location 1082 is 26
mem: storing 1063 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1063
mem: storing 0 in location 1063
run: i:number <- add i:number, 1:literal
mem: location 1082 is 26
mem: storing 27 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 27
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 27
mem: location 1080 is 1036
mem: location 1082 is 27
mem: storing 1064 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1064
mem: storing 0 in location 1064
run: i:number <- add i:number, 1:literal
mem: location 1082 is 27
mem: storing 28 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 28
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 28
mem: location 1080 is 1036
mem: location 1082 is 28
mem: storing 1065 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1065
mem: storing 0 in location 1065
run: i:number <- add i:number, 1:literal
mem: location 1082 is 28
mem: storing 29 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 29
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 29
mem: location 1080 is 1036
mem: location 1082 is 29
mem: storing 1066 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1066
mem: storing 0 in location 1066
run: i:number <- add i:number, 1:literal
mem: location 1082 is 29
mem: storing 30 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 30
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 30
mem: location 1080 is 1036
mem: location 1082 is 30
mem: storing 1067 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1067
mem: storing 0 in location 1067
run: i:number <- add i:number, 1:literal
mem: location 1082 is 30
mem: storing 31 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 31
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 31
mem: location 1080 is 1036
mem: location 1082 is 31
mem: storing 1068 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1068
mem: storing 0 in location 1068
run: i:number <- add i:number, 1:literal
mem: location 1082 is 31
mem: storing 32 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 32
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 32
mem: location 1080 is 1036
mem: location 1082 is 32
mem: storing 1069 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1069
mem: storing 0 in location 1069
run: i:number <- add i:number, 1:literal
mem: location 1082 is 32
mem: storing 33 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 33
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 33
mem: location 1080 is 1036
mem: location 1082 is 33
mem: storing 1070 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1070
mem: storing 0 in location 1070
run: i:number <- add i:number, 1:literal
mem: location 1082 is 33
mem: storing 34 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 34
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 34
mem: location 1080 is 1036
mem: location 1082 is 34
mem: storing 1071 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1071
mem: storing 0 in location 1071
run: i:number <- add i:number, 1:literal
mem: location 1082 is 34
mem: storing 35 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 35
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 35
mem: location 1080 is 1036
mem: location 1082 is 35
mem: storing 1072 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1072
mem: storing 0 in location 1072
run: i:number <- add i:number, 1:literal
mem: location 1082 is 35
mem: storing 36 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 36
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 36
mem: location 1080 is 1036
mem: location 1082 is 36
mem: storing 1073 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1073
mem: storing 0 in location 1073
run: i:number <- add i:number, 1:literal
mem: location 1082 is 36
mem: storing 37 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 37
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 37
mem: location 1080 is 1036
mem: location 1082 is 37
mem: storing 1074 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1074
mem: storing 0 in location 1074
run: i:number <- add i:number, 1:literal
mem: location 1082 is 37
mem: storing 38 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 38
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 38
mem: location 1080 is 1036
mem: location 1082 is 38
mem: storing 1075 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1075
mem: storing 0 in location 1075
run: i:number <- add i:number, 1:literal
mem: location 1082 is 38
mem: storing 39 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 39
mem: location 1081 is 40
mem: storing 0 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1080 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 1082 is 39
mem: location 1080 is 1036
mem: location 1082 is 39
mem: storing 1076 in location 1084
run: c:address:character/deref <- copy [ ]
mem: location 1084 is 1076
mem: storing 0 in location 1076
run: i:number <- add i:number, 1:literal
mem: location 1082 is 39
mem: storing 40 in location 1082
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1082 is 40
mem: location 1081 is 40
mem: storing 1 in location 1083
run: break-if done?:boolean, 
mem: location 1083 is 1
run: jumping to instruction 14
run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1085
run: cur:address:number/deref <- copy 0:literal
mem: location 1085 is 1033
mem: storing 0 in location 1033
run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1079 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1079 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1085
run: cur:address:number/deref <- copy 0:literal
mem: location 1085 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1079 is 1031
run: reply result:address:screen
mem: location 1002 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: run [
    1:address:channel <- init-channel 2:literal
    2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
    # 'read-move' is waiting for input
    wait-for-routine 2:number
    3:number <- routine-state 2:number/id
    4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
    assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
    1:address:channel <- write 1:address:channel, 10:literal/newline
    1:address:channel <- write 1:address:channel, 97:literal  # 'a'
    restart 2:number/routine
    wait-for-routine 2:number
  ]
parse: instruction: init-channel
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: start-running
parse:   ingredient: {name: "read-move", properties: ["read-move": "recipe"]}
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
parse: instruction: routine-state
parse:   ingredient: {name: "2", properties: ["2": "number", "id": ]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: equal
parse:   ingredient: {name: "3", properties: ["3": "number", "routine-state": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "waiting": ]}
parse:   product: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse: instruction: assert
parse:   ingredient: {name: "4", properties: ["4": "boolean", "waiting?": ]}
parse:   ingredient: {name: "
F read-move-file: routine failed to pause after coming up (before any keys were pressed)", properties: ["
F read-move-file: routine failed to pause after coming up (before any keys were pressed)": "literal-string"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "10", properties: ["10": "literal", "newline": ]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: write
parse:   ingredient: {name: "1", properties: ["1": "address":"channel"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "1", properties: ["1": "address":"channel"]}
parse: instruction: restart
parse:   ingredient: {name: "2", properties: ["2": "number", "routine": ]}
parse: instruction: wait-for-routine
parse:   ingredient: {name: "2", properties: ["2": "number"]}
after-brace: recipe run1001
after-brace: init-channel ...
after-brace: start-running ...
after-brace: wait-for-routine ...
after-brace: routine-state ...
after-brace: equal ...
after-brace: assert ...
after-brace: write ...
after-brace: write ...
after-brace: restart ...
after-brace: wait-for-routine ...
run: 1:address:channel <- init-channel 2:literal
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1108
run: result:address:channel <- new channel:type
mem: new alloc: 1139
mem: storing 1139 in location 1110
run: full:address:number <- get-address result:address:channel/deref, first-full:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1139
mem: storing 1139 in location 1111
run: full:address:number/deref <- copy 0:literal
mem: location 1111 is 1139
mem: storing 0 in location 1139
run: free:address:number <- get-address result:address:channel/deref, first-free:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1140
mem: storing 1140 in location 1112
run: free:address:number/deref <- copy 0:literal
mem: location 1112 is 1140
mem: storing 0 in location 1140
run: capacity:number <- next-ingredient 
mem: storing 2 in location 1113
run: capacity:number <- add capacity:number, 1:literal
mem: location 1113 is 2
mem: storing 3 in location 1113
run: dest:address:address:array:location <- get-address result:address:channel/deref, data:offset
mem: location 1110 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 0
mem: location 1110 is 1139
run: address to copy is 1141
mem: storing 1141 in location 1114
run: dest:address:address:array:location/deref <- new location:type, capacity:number
mem: location 1113 is 3
mem: array size is 3
mem: new alloc: 1142
mem: location 1114 is 1141
mem: storing 1142 in location 1141
run: reply result:address:channel
mem: location 1110 is 1139
run: result 0 is 1139
mem: storing 1139 in location 1
run: 2:number/routine <- start-running read-move:recipe, 1:address:channel, screen:address
mem: location 1 is 1139
mem: location 900 is 1031
new: routine allocated memory from 101000 to 201000
mem: storing 2 in location 2
run: wait-for-routine 2:number
mem: location 2 is 2
run: waiting for routine 2
schedule: read-move
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101000
run: stdin:address:channel <- next-ingredient 
mem: storing 1139 in location 101002
run: screen:address <- next-ingredient 
mem: storing 1031 in location 101003
run: from-file:number, quit?:boolean, error?:boolean <- read-file stdin:address:channel, screen:address
mem: location 101002 is 1139
mem: location 101003 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101031
run: stdin:address:channel <- next-ingredient 
mem: storing 1139 in location 101033
run: screen:address <- next-ingredient 
mem: storing 1031 in location 101034
run: c:character, stdin:address:channel <- read stdin:address:channel
mem: location 101033 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101062
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 101064
run: empty:boolean <- channel-empty? chan:address:channel
mem: location 101064 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101093
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 101095
run: full:number <- get chan:address:channel/deref, first-full:offset
mem: location 101095 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101095 is 1139
run: address to copy is 1139
run: its type is 1
mem: location 1139 is 0
mem: storing 0 in location 101096
run: free:number <- get chan:address:channel/deref, first-free:offset
mem: location 101095 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101095 is 1139
run: address to copy is 1140
run: its type is 1
mem: location 1140 is 0
mem: storing 0 in location 101097
run: result:boolean <- equal full:number, free:number
mem: location 101096 is 0
mem: location 101097 is 0
mem: storing 1 in location 101098
run: reply result:boolean
mem: location 101098 is 1
run: result 0 is 1
mem: storing 1 in location 101065
run: break-unless empty:boolean, 
mem: location 101065 is 1
run: jump-unless fell through
run: free-address:address:number <- get-address chan:address:channel/deref, first-free:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1140
mem: storing 1140 in location 101066
run: wait-for-location free-address:address:number/deref
mem: location 101066 is 1140
mem: location 1140 is 0
mem: location 101066 is 1140
run: waiting for location 1140 to change from 0
schedule: waking up routine 1
schedule: run1001/read-move-empty
run: 3:number <- routine-state 2:number/id
mem: location 2 is 2
mem: storing 2 in location 3
run: 4:boolean/waiting? <- equal 3:number/routine-state, 2:literal/waiting
mem: location 3 is 2
mem: storing 1 in location 4
run: assert 4:boolean/waiting?, [
F read-move-file: routine failed to pause after coming up (before any keys were pressed)]
mem: location 4 is 1
run: 1:address:channel <- write 1:address:channel, 10:literal/newline
mem: location 1 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1146
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1148
run: val:location <- next-ingredient 
mem: storing 10 in location 1149
run: full:boolean <- channel-full? chan:address:channel
mem: location 1148 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1177
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1179
run: tmp:number <- get chan:address:channel/deref, first-free:offset
mem: location 1179 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1179 is 1139
run: address to copy is 1140
run: its type is 1
mem: location 1140 is 0
mem: storing 0 in location 1180
run: tmp:number <- add tmp:number, 1:literal
mem: location 1180 is 0
mem: storing 1 in location 1180
run: len:number <- channel-capacity chan:address:channel
mem: location 1179 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1208
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1210
run: q:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1210 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1210 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1211
run: result:number <- length q:address:array:location/deref
mem: location 1211 is 1142
mem: location 1142 is 3
mem: location 1143 is 0
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1211 is 1142
mem: storing 3 in location 1212
run: reply result:number
mem: location 1212 is 3
run: result 0 is 3
mem: storing 3 in location 1181
run: at-end?:boolean <- greater-or-equal tmp:number, len:number
mem: location 1180 is 1
mem: location 1181 is 3
mem: storing 0 in location 1182
run: break-unless at-end?:boolean, 
mem: location 1182 is 0
run: jumping to instruction 9
run: full:number <- get chan:address:channel/deref, first-full:offset
mem: location 1179 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1179 is 1139
run: address to copy is 1139
run: its type is 1
mem: location 1139 is 0
mem: storing 0 in location 1183
run: result:boolean <- equal full:number, tmp:number
mem: location 1183 is 0
mem: location 1180 is 1
mem: storing 0 in location 1184
run: reply result:boolean
mem: location 1184 is 0
run: result 0 is 0
mem: storing 0 in location 1150
run: break-unless full:boolean, 
mem: location 1150 is 0
run: jumping to instruction 8
run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1148 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1148 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1152
run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
mem: location 1148 is 1139
mem: location 1139 is 0
mem: location 1140 is 0
mem: location 1141 is 1142
mem: location 1148 is 1139
run: address to copy is 1140
mem: storing 1140 in location 1153
run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
mem: location 1152 is 1142
mem: location 1142 is 3
mem: location 1143 is 0
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1153 is 1140
mem: location 1140 is 0
mem: location 1152 is 1142
mem: location 1153 is 1140
mem: location 1140 is 0
mem: storing 1143 in location 1154
run: dest:address:location/deref <- copy val:location
mem: location 1149 is 10
mem: location 1154 is 1143
mem: storing 10 in location 1143
run: free:address:number/deref <- add free:address:number/deref, 1:literal
mem: location 1153 is 1140
mem: location 1140 is 0
mem: location 1153 is 1140
mem: storing 1 in location 1140
run: len:number <- length circular-buffer:address:array:location/deref
mem: location 1152 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1152 is 1142
mem: storing 3 in location 1155
run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
mem: location 1153 is 1140
mem: location 1140 is 1
mem: location 1155 is 3
mem: storing 0 in location 1156
run: break-unless at-end?:boolean, 
mem: location 1156 is 0
run: jumping to instruction 19
run: reply chan:address:channel/same-as-ingredient:0
mem: location 1148 is 1139
run: result 0 is 1139
mem: storing 1139 in location 1
run: 1:address:channel <- write 1:address:channel, 97:literal
mem: location 1 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1239
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1241
run: val:location <- next-ingredient 
mem: storing 97 in location 1242
run: full:boolean <- channel-full? chan:address:channel
mem: location 1241 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1270
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1272
run: tmp:number <- get chan:address:channel/deref, first-free:offset
mem: location 1272 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 1272 is 1139
run: address to copy is 1140
run: its type is 1
mem: location 1140 is 1
mem: storing 1 in location 1273
run: tmp:number <- add tmp:number, 1:literal
mem: location 1273 is 1
mem: storing 2 in location 1273
run: len:number <- channel-capacity chan:address:channel
mem: location 1272 is 1139
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1301
run: chan:address:channel <- next-ingredient 
mem: storing 1139 in location 1303
run: q:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1303 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 1303 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1304
run: result:number <- length q:address:array:location/deref
mem: location 1304 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1304 is 1142
mem: storing 3 in location 1305
run: reply result:number
mem: location 1305 is 3
run: result 0 is 3
mem: storing 3 in location 1274
run: at-end?:boolean <- greater-or-equal tmp:number, len:number
mem: location 1273 is 2
mem: location 1274 is 3
mem: storing 0 in location 1275
run: break-unless at-end?:boolean, 
mem: location 1275 is 0
run: jumping to instruction 9
run: full:number <- get chan:address:channel/deref, first-full:offset
mem: location 1272 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 1272 is 1139
run: address to copy is 1139
run: its type is 1
mem: location 1139 is 0
mem: storing 0 in location 1276
run: result:boolean <- equal full:number, tmp:number
mem: location 1276 is 0
mem: location 1273 is 2
mem: storing 0 in location 1277
run: reply result:boolean
mem: location 1277 is 0
run: result 0 is 0
mem: storing 0 in location 1243
run: break-unless full:boolean, 
mem: location 1243 is 0
run: jumping to instruction 8
run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 1241 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 1241 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 1245
run: free:address:number <- get-address chan:address:channel/deref, first-free:offset
mem: location 1241 is 1139
mem: location 1139 is 0
mem: location 1140 is 1
mem: location 1141 is 1142
mem: location 1241 is 1139
run: address to copy is 1140
mem: storing 1140 in location 1246
run: dest:address:location <- index-address circular-buffer:address:array:location/deref, free:address:number/deref
mem: location 1245 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 0
mem: location 1145 is 0
mem: location 1246 is 1140
mem: location 1140 is 1
mem: location 1245 is 1142
mem: location 1246 is 1140
mem: location 1140 is 1
mem: storing 1144 in location 1247
run: dest:address:location/deref <- copy val:location
mem: location 1242 is 97
mem: location 1247 is 1144
mem: storing 97 in location 1144
run: free:address:number/deref <- add free:address:number/deref, 1:literal
mem: location 1246 is 1140
mem: location 1140 is 1
mem: location 1246 is 1140
mem: storing 2 in location 1140
run: len:number <- length circular-buffer:address:array:location/deref
mem: location 1245 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 97
mem: location 1145 is 0
mem: location 1245 is 1142
mem: storing 3 in location 1248
run: at-end?:boolean <- greater-or-equal free:address:number/deref, len:number
mem: location 1246 is 1140
mem: location 1140 is 2
mem: location 1248 is 3
mem: storing 0 in location 1249
run: break-unless at-end?:boolean, 
mem: location 1249 is 0
run: jumping to instruction 19
run: reply chan:address:channel/same-as-ingredient:0
mem: location 1241 is 1139
run: result 0 is 1139
mem: storing 1139 in location 1
run: restart 2:number/routine
mem: location 2 is 2
run: wait-for-routine 2:number
mem: location 2 is 2
run: waiting for routine 2
schedule: read/read-file/read-move
run: full:address:number <- get-address chan:address:channel/deref, first-full:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 2
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1139
mem: storing 1139 in location 101067
run: circular-buffer:address:array:location <- get chan:address:channel/deref, data:offset
mem: location 101064 is 1139
mem: location 1139 is 0
mem: location 1140 is 2
mem: location 1141 is 1142
mem: location 101064 is 1139
run: address to copy is 1141
run: its type is 2
mem: location 1141 is 1142
mem: storing 1142 in location 101068
run: result:location <- index circular-buffer:address:array:location/deref, full:address:number/deref
mem: location 101068 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 97
mem: location 1145 is 0
mem: location 101067 is 1139
mem: location 1139 is 0
mem: location 101068 is 1142
mem: location 101067 is 1139
mem: location 1139 is 0
run: address to copy is 1143
run: its type is 1
mem: location 1143 is 10
mem: storing 10 in location 101069
run: full:address:number/deref <- add full:address:number/deref, 1:literal
mem: location 101067 is 1139
mem: location 1139 is 0
mem: location 101067 is 1139
mem: storing 1 in location 1139
run: len:number <- length circular-buffer:address:array:location/deref
mem: location 101068 is 1142
mem: location 1142 is 3
mem: location 1143 is 10
mem: location 1144 is 97
mem: location 1145 is 0
mem: location 101068 is 1142
mem: storing 3 in location 101070
run: at-end?:boolean <- greater-or-equal full:address:number/deref, len:number
mem: location 101067 is 1139
mem: location 1139 is 1
mem: location 101070 is 3
mem: storing 0 in location 101071
run: break-unless at-end?:boolean, 
mem: location 101071 is 0
run: jumping to instruction 17
run: reply result:location, chan:address:channel/same-as-ingredient:0
mem: location 101069 is 10
mem: location 101064 is 1139
run: result 0 is 10
run: result 1 is 1139
mem: storing 10 in location 101035
mem: storing 1139 in location 101033
run: q-pressed?:boolean <- equal c:character, 81:literal
mem: location 101035 is 10
mem: storing 0 in location 101036
run: break-unless q-pressed?:boolean, 
mem: location 101036 is 0
run: jumping to instruction 8
run: q-pressed?:boolean <- equal c:character, 113:literal
mem: location 101035 is 10
mem: storing 0 in location 101036
run: break-unless q-pressed?:boolean, 
mem: location 101036 is 0
run: jumping to instruction 13
run: empty-fake-keyboard?:boolean <- equal c:character, 0:literal/eof
mem: location 101035 is 10
mem: storing 0 in location 101037
run: break-unless empty-fake-keyboard?:boolean, 
mem: location 101037 is 0
run: jumping to instruction 18
run: newline?:boolean <- equal c:character, 10:literal/newline
mem: location 101035 is 10
mem: storing 1 in location 101038
run: break-unless newline?:boolean, 
mem: location 101038 is 1
run: jump-unless fell through
run: error-message:address:array:character <- new [that's not enough]
mem: storing 101124 in location 101039
run: print-string screen:address, error-message:address:array:character
mem: location 101034 is 1031
mem: location 101039 is 101124
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101142
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101144
run: s:address:array:character <- next-ingredient 
mem: storing 101124 in location 101145
run: len:number <- length s:address:array:character/deref
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101145 is 101124
mem: storing 17 in location 101146
run: i:number <- copy 0:literal
mem: storing 0 in location 101147
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 0
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 0
mem: location 101145 is 101124
mem: location 101147 is 0
run: address to copy is 101125
run: its type is 4
mem: location 101125 is 116
mem: storing 116 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 116
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101173
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101175
run: c:character <- next-ingredient 
mem: storing 116 in location 101176
run: break-unless x:address:screen, 
mem: location 101175 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101175 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 101175 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101177
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101175 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 101175 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101178
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101175 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 101175 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101179
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101175 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 101175 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101180
run: max-row:number <- subtract height:number, 1:literal
mem: location 101180 is 2
mem: storing 1 in location 101181
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101176 is 116
mem: storing 0 in location 101182
run: break-unless newline?:boolean, 
mem: location 101182 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101177 is 1033
mem: location 1033 is 0
mem: location 101179 is 20
mem: storing 0 in location 101184
run: index:number <- add index:number, column:address:number/deref
mem: location 101184 is 0
mem: location 101178 is 1034
mem: location 1034 is 0
mem: storing 0 in location 101184
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101175 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 101175 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101185
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101185 is 1036
mem: location 1036 is 40
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101184 is 0
mem: location 101185 is 1036
mem: location 101184 is 0
mem: storing 1037 in location 101186
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101176 is 116
mem: storing 0 in location 101187
run: break-unless backspace?:boolean, 
mem: location 101187 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101176 is 116
mem: location 101186 is 1037
mem: storing 116 in location 1037
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101178 is 1034
mem: location 1034 is 0
mem: location 101179 is 20
mem: storing 0 in location 101189
run: break-if at-right?:boolean, 
mem: location 101189 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101178 is 1034
mem: location 1034 is 0
mem: location 101178 is 1034
mem: storing 1 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101175 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 0
mem: storing 1 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 1
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 1
mem: location 101145 is 101124
mem: location 101147 is 1
run: address to copy is 101126
run: its type is 4
mem: location 101126 is 104
mem: storing 104 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 104
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101204
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101206
run: c:character <- next-ingredient 
mem: storing 104 in location 101207
run: break-unless x:address:screen, 
mem: location 101206 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101206 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 101206 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101208
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101206 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 101206 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101209
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101206 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 101206 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101210
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101206 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 101206 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101211
run: max-row:number <- subtract height:number, 1:literal
mem: location 101211 is 2
mem: storing 1 in location 101212
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101207 is 104
mem: storing 0 in location 101213
run: break-unless newline?:boolean, 
mem: location 101213 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101208 is 1033
mem: location 1033 is 0
mem: location 101210 is 20
mem: storing 0 in location 101215
run: index:number <- add index:number, column:address:number/deref
mem: location 101215 is 0
mem: location 101209 is 1034
mem: location 1034 is 1
mem: storing 1 in location 101215
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101206 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 1
mem: location 1035 is 1036
mem: location 101206 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101216
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101216 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101215 is 1
mem: location 101216 is 1036
mem: location 101215 is 1
mem: storing 1038 in location 101217
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101207 is 104
mem: storing 0 in location 101218
run: break-unless backspace?:boolean, 
mem: location 101218 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101207 is 104
mem: location 101217 is 1038
mem: storing 104 in location 1038
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101209 is 1034
mem: location 1034 is 1
mem: location 101210 is 20
mem: storing 0 in location 101220
run: break-if at-right?:boolean, 
mem: location 101220 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101209 is 1034
mem: location 1034 is 1
mem: location 101209 is 1034
mem: storing 2 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101206 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 1
mem: storing 2 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 2
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 2
mem: location 101145 is 101124
mem: location 101147 is 2
run: address to copy is 101127
run: its type is 4
mem: location 101127 is 97
mem: storing 97 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 97
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101235
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101237
run: c:character <- next-ingredient 
mem: storing 97 in location 101238
run: break-unless x:address:screen, 
mem: location 101237 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101237 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 101237 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101239
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101237 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 101237 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101240
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101237 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 101237 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101241
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101237 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 101237 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101242
run: max-row:number <- subtract height:number, 1:literal
mem: location 101242 is 2
mem: storing 1 in location 101243
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101238 is 97
mem: storing 0 in location 101244
run: break-unless newline?:boolean, 
mem: location 101244 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101239 is 1033
mem: location 1033 is 0
mem: location 101241 is 20
mem: storing 0 in location 101246
run: index:number <- add index:number, column:address:number/deref
mem: location 101246 is 0
mem: location 101240 is 1034
mem: location 1034 is 2
mem: storing 2 in location 101246
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101237 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 2
mem: location 1035 is 1036
mem: location 101237 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101247
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101247 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101246 is 2
mem: location 101247 is 1036
mem: location 101246 is 2
mem: storing 1039 in location 101248
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101238 is 97
mem: storing 0 in location 101249
run: break-unless backspace?:boolean, 
mem: location 101249 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101238 is 97
mem: location 101248 is 1039
mem: storing 97 in location 1039
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101240 is 1034
mem: location 1034 is 2
mem: location 101241 is 20
mem: storing 0 in location 101251
run: break-if at-right?:boolean, 
mem: location 101251 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101240 is 1034
mem: location 1034 is 2
mem: location 101240 is 1034
mem: storing 3 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101237 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 2
mem: storing 3 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 3
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 3
mem: location 101145 is 101124
mem: location 101147 is 3
run: address to copy is 101128
run: its type is 4
mem: location 101128 is 116
mem: storing 116 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 116
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101266
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101268
run: c:character <- next-ingredient 
mem: storing 116 in location 101269
run: break-unless x:address:screen, 
mem: location 101268 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101268 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 101268 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101270
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101268 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 101268 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101271
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101268 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 101268 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101272
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101268 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 101268 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101273
run: max-row:number <- subtract height:number, 1:literal
mem: location 101273 is 2
mem: storing 1 in location 101274
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101269 is 116
mem: storing 0 in location 101275
run: break-unless newline?:boolean, 
mem: location 101275 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101270 is 1033
mem: location 1033 is 0
mem: location 101272 is 20
mem: storing 0 in location 101277
run: index:number <- add index:number, column:address:number/deref
mem: location 101277 is 0
mem: location 101271 is 1034
mem: location 1034 is 3
mem: storing 3 in location 101277
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101268 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 3
mem: location 1035 is 1036
mem: location 101268 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101278
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101278 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101277 is 3
mem: location 101278 is 1036
mem: location 101277 is 3
mem: storing 1040 in location 101279
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101269 is 116
mem: storing 0 in location 101280
run: break-unless backspace?:boolean, 
mem: location 101280 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101269 is 116
mem: location 101279 is 1040
mem: storing 116 in location 1040
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101271 is 1034
mem: location 1034 is 3
mem: location 101272 is 20
mem: storing 0 in location 101282
run: break-if at-right?:boolean, 
mem: location 101282 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101271 is 1034
mem: location 1034 is 3
mem: location 101271 is 1034
mem: storing 4 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101268 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 3
mem: storing 4 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 4
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 4
mem: location 101145 is 101124
mem: location 101147 is 4
run: address to copy is 101129
run: its type is 4
mem: location 101129 is 39
mem: storing 39 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 39
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101297
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101299
run: c:character <- next-ingredient 
mem: storing 39 in location 101300
run: break-unless x:address:screen, 
mem: location 101299 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101299 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 101299 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101301
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101299 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 101299 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101302
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101299 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 101299 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101303
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101299 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 101299 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101304
run: max-row:number <- subtract height:number, 1:literal
mem: location 101304 is 2
mem: storing 1 in location 101305
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101300 is 39
mem: storing 0 in location 101306
run: break-unless newline?:boolean, 
mem: location 101306 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101301 is 1033
mem: location 1033 is 0
mem: location 101303 is 20
mem: storing 0 in location 101308
run: index:number <- add index:number, column:address:number/deref
mem: location 101308 is 0
mem: location 101302 is 1034
mem: location 1034 is 4
mem: storing 4 in location 101308
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101299 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 4
mem: location 1035 is 1036
mem: location 101299 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101309
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101309 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101308 is 4
mem: location 101309 is 1036
mem: location 101308 is 4
mem: storing 1041 in location 101310
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101300 is 39
mem: storing 0 in location 101311
run: break-unless backspace?:boolean, 
mem: location 101311 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101300 is 39
mem: location 101310 is 1041
mem: storing 39 in location 1041
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101302 is 1034
mem: location 1034 is 4
mem: location 101303 is 20
mem: storing 0 in location 101313
run: break-if at-right?:boolean, 
mem: location 101313 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101302 is 1034
mem: location 1034 is 4
mem: location 101302 is 1034
mem: storing 5 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101299 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 4
mem: storing 5 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 5
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 5
mem: location 101145 is 101124
mem: location 101147 is 5
run: address to copy is 101130
run: its type is 4
mem: location 101130 is 115
mem: storing 115 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 115
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101328
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101330
run: c:character <- next-ingredient 
mem: storing 115 in location 101331
run: break-unless x:address:screen, 
mem: location 101330 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101330 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 5
mem: location 1035 is 1036
mem: location 101330 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101332
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101330 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 5
mem: location 1035 is 1036
mem: location 101330 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101333
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101330 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 5
mem: location 1035 is 1036
mem: location 101330 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101334
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101330 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 5
mem: location 1035 is 1036
mem: location 101330 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101335
run: max-row:number <- subtract height:number, 1:literal
mem: location 101335 is 2
mem: storing 1 in location 101336
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101331 is 115
mem: storing 0 in location 101337
run: break-unless newline?:boolean, 
mem: location 101337 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101332 is 1033
mem: location 1033 is 0
mem: location 101334 is 20
mem: storing 0 in location 101339
run: index:number <- add index:number, column:address:number/deref
mem: location 101339 is 0
mem: location 101333 is 1034
mem: location 1034 is 5
mem: storing 5 in location 101339
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101330 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 5
mem: location 1035 is 1036
mem: location 101330 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101340
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101340 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 0
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101339 is 5
mem: location 101340 is 1036
mem: location 101339 is 5
mem: storing 1042 in location 101341
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101331 is 115
mem: storing 0 in location 101342
run: break-unless backspace?:boolean, 
mem: location 101342 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101331 is 115
mem: location 101341 is 1042
mem: storing 115 in location 1042
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101333 is 1034
mem: location 1034 is 5
mem: location 101334 is 20
mem: storing 0 in location 101344
run: break-if at-right?:boolean, 
mem: location 101344 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101333 is 1034
mem: location 1034 is 5
mem: location 101333 is 1034
mem: storing 6 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101330 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 5
mem: storing 6 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 6
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 6
mem: location 101145 is 101124
mem: location 101147 is 6
run: address to copy is 101131
run: its type is 4
mem: location 101131 is 32
mem: storing 32 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 32
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101359
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101361
run: c:character <- next-ingredient 
mem: storing 32 in location 101362
run: break-unless x:address:screen, 
mem: location 101361 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101361 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 6
mem: location 1035 is 1036
mem: location 101361 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101363
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101361 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 6
mem: location 1035 is 1036
mem: location 101361 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101364
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101361 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 6
mem: location 1035 is 1036
mem: location 101361 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101365
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101361 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 6
mem: location 1035 is 1036
mem: location 101361 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101366
run: max-row:number <- subtract height:number, 1:literal
mem: location 101366 is 2
mem: storing 1 in location 101367
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101362 is 32
mem: storing 0 in location 101368
run: break-unless newline?:boolean, 
mem: location 101368 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101363 is 1033
mem: location 1033 is 0
mem: location 101365 is 20
mem: storing 0 in location 101370
run: index:number <- add index:number, column:address:number/deref
mem: location 101370 is 0
mem: location 101364 is 1034
mem: location 1034 is 6
mem: storing 6 in location 101370
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101361 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 6
mem: location 1035 is 1036
mem: location 101361 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101371
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101371 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 0
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101370 is 6
mem: location 101371 is 1036
mem: location 101370 is 6
mem: storing 1043 in location 101372
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101362 is 32
mem: storing 0 in location 101373
run: break-unless backspace?:boolean, 
mem: location 101373 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101362 is 32
mem: location 101372 is 1043
mem: storing 32 in location 1043
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101364 is 1034
mem: location 1034 is 6
mem: location 101365 is 20
mem: storing 0 in location 101375
run: break-if at-right?:boolean, 
mem: location 101375 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101364 is 1034
mem: location 1034 is 6
mem: location 101364 is 1034
mem: storing 7 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101361 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 6
mem: storing 7 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 7
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 7
mem: location 101145 is 101124
mem: location 101147 is 7
run: address to copy is 101132
run: its type is 4
mem: location 101132 is 110
mem: storing 110 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 110
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101390
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101392
run: c:character <- next-ingredient 
mem: storing 110 in location 101393
run: break-unless x:address:screen, 
mem: location 101392 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101392 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 7
mem: location 1035 is 1036
mem: location 101392 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101394
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101392 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 7
mem: location 1035 is 1036
mem: location 101392 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101395
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101392 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 7
mem: location 1035 is 1036
mem: location 101392 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101396
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101392 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 7
mem: location 1035 is 1036
mem: location 101392 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101397
run: max-row:number <- subtract height:number, 1:literal
mem: location 101397 is 2
mem: storing 1 in location 101398
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101393 is 110
mem: storing 0 in location 101399
run: break-unless newline?:boolean, 
mem: location 101399 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101394 is 1033
mem: location 1033 is 0
mem: location 101396 is 20
mem: storing 0 in location 101401
run: index:number <- add index:number, column:address:number/deref
mem: location 101401 is 0
mem: location 101395 is 1034
mem: location 1034 is 7
mem: storing 7 in location 101401
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101392 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 7
mem: location 1035 is 1036
mem: location 101392 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101402
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101402 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 0
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101401 is 7
mem: location 101402 is 1036
mem: location 101401 is 7
mem: storing 1044 in location 101403
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101393 is 110
mem: storing 0 in location 101404
run: break-unless backspace?:boolean, 
mem: location 101404 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101393 is 110
mem: location 101403 is 1044
mem: storing 110 in location 1044
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101395 is 1034
mem: location 1034 is 7
mem: location 101396 is 20
mem: storing 0 in location 101406
run: break-if at-right?:boolean, 
mem: location 101406 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101395 is 1034
mem: location 1034 is 7
mem: location 101395 is 1034
mem: storing 8 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101392 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 7
mem: storing 8 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 8
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 8
mem: location 101145 is 101124
mem: location 101147 is 8
run: address to copy is 101133
run: its type is 4
mem: location 101133 is 111
mem: storing 111 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 111
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101421
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101423
run: c:character <- next-ingredient 
mem: storing 111 in location 101424
run: break-unless x:address:screen, 
mem: location 101423 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101423 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 8
mem: location 1035 is 1036
mem: location 101423 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101425
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101423 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 8
mem: location 1035 is 1036
mem: location 101423 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101426
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101423 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 8
mem: location 1035 is 1036
mem: location 101423 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101427
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101423 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 8
mem: location 1035 is 1036
mem: location 101423 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101428
run: max-row:number <- subtract height:number, 1:literal
mem: location 101428 is 2
mem: storing 1 in location 101429
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101424 is 111
mem: storing 0 in location 101430
run: break-unless newline?:boolean, 
mem: location 101430 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101425 is 1033
mem: location 1033 is 0
mem: location 101427 is 20
mem: storing 0 in location 101432
run: index:number <- add index:number, column:address:number/deref
mem: location 101432 is 0
mem: location 101426 is 1034
mem: location 1034 is 8
mem: storing 8 in location 101432
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101423 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 8
mem: location 1035 is 1036
mem: location 101423 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101433
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101433 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 0
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101432 is 8
mem: location 101433 is 1036
mem: location 101432 is 8
mem: storing 1045 in location 101434
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101424 is 111
mem: storing 0 in location 101435
run: break-unless backspace?:boolean, 
mem: location 101435 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101424 is 111
mem: location 101434 is 1045
mem: storing 111 in location 1045
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101426 is 1034
mem: location 1034 is 8
mem: location 101427 is 20
mem: storing 0 in location 101437
run: break-if at-right?:boolean, 
mem: location 101437 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101426 is 1034
mem: location 1034 is 8
mem: location 101426 is 1034
mem: storing 9 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101423 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 8
mem: storing 9 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 9
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 9
mem: location 101145 is 101124
mem: location 101147 is 9
run: address to copy is 101134
run: its type is 4
mem: location 101134 is 116
mem: storing 116 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 116
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101452
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101454
run: c:character <- next-ingredient 
mem: storing 116 in location 101455
run: break-unless x:address:screen, 
mem: location 101454 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101454 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 9
mem: location 1035 is 1036
mem: location 101454 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101456
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101454 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 9
mem: location 1035 is 1036
mem: location 101454 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101457
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101454 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 9
mem: location 1035 is 1036
mem: location 101454 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101458
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101454 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 9
mem: location 1035 is 1036
mem: location 101454 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101459
run: max-row:number <- subtract height:number, 1:literal
mem: location 101459 is 2
mem: storing 1 in location 101460
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101455 is 116
mem: storing 0 in location 101461
run: break-unless newline?:boolean, 
mem: location 101461 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101456 is 1033
mem: location 1033 is 0
mem: location 101458 is 20
mem: storing 0 in location 101463
run: index:number <- add index:number, column:address:number/deref
mem: location 101463 is 0
mem: location 101457 is 1034
mem: location 1034 is 9
mem: storing 9 in location 101463
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101454 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 9
mem: location 1035 is 1036
mem: location 101454 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101464
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101464 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 0
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101463 is 9
mem: location 101464 is 1036
mem: location 101463 is 9
mem: storing 1046 in location 101465
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101455 is 116
mem: storing 0 in location 101466
run: break-unless backspace?:boolean, 
mem: location 101466 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101455 is 116
mem: location 101465 is 1046
mem: storing 116 in location 1046
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101457 is 1034
mem: location 1034 is 9
mem: location 101458 is 20
mem: storing 0 in location 101468
run: break-if at-right?:boolean, 
mem: location 101468 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101457 is 1034
mem: location 1034 is 9
mem: location 101457 is 1034
mem: storing 10 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101454 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 9
mem: storing 10 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 10
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 10
mem: location 101145 is 101124
mem: location 101147 is 10
run: address to copy is 101135
run: its type is 4
mem: location 101135 is 32
mem: storing 32 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 32
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101483
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101485
run: c:character <- next-ingredient 
mem: storing 32 in location 101486
run: break-unless x:address:screen, 
mem: location 101485 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101485 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 10
mem: location 1035 is 1036
mem: location 101485 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101487
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101485 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 10
mem: location 1035 is 1036
mem: location 101485 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101488
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101485 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 10
mem: location 1035 is 1036
mem: location 101485 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101489
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101485 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 10
mem: location 1035 is 1036
mem: location 101485 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101490
run: max-row:number <- subtract height:number, 1:literal
mem: location 101490 is 2
mem: storing 1 in location 101491
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101486 is 32
mem: storing 0 in location 101492
run: break-unless newline?:boolean, 
mem: location 101492 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101487 is 1033
mem: location 1033 is 0
mem: location 101489 is 20
mem: storing 0 in location 101494
run: index:number <- add index:number, column:address:number/deref
mem: location 101494 is 0
mem: location 101488 is 1034
mem: location 1034 is 10
mem: storing 10 in location 101494
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101485 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 10
mem: location 1035 is 1036
mem: location 101485 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101495
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101495 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 0
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101494 is 10
mem: location 101495 is 1036
mem: location 101494 is 10
mem: storing 1047 in location 101496
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101486 is 32
mem: storing 0 in location 101497
run: break-unless backspace?:boolean, 
mem: location 101497 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101486 is 32
mem: location 101496 is 1047
mem: storing 32 in location 1047
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101488 is 1034
mem: location 1034 is 10
mem: location 101489 is 20
mem: storing 0 in location 101499
run: break-if at-right?:boolean, 
mem: location 101499 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101488 is 1034
mem: location 1034 is 10
mem: location 101488 is 1034
mem: storing 11 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101485 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 10
mem: storing 11 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 11
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 11
mem: location 101145 is 101124
mem: location 101147 is 11
run: address to copy is 101136
run: its type is 4
mem: location 101136 is 101
mem: storing 101 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 101
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101514
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101516
run: c:character <- next-ingredient 
mem: storing 101 in location 101517
run: break-unless x:address:screen, 
mem: location 101516 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101516 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 11
mem: location 1035 is 1036
mem: location 101516 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101518
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101516 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 11
mem: location 1035 is 1036
mem: location 101516 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101519
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101516 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 11
mem: location 1035 is 1036
mem: location 101516 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101520
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101516 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 11
mem: location 1035 is 1036
mem: location 101516 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101521
run: max-row:number <- subtract height:number, 1:literal
mem: location 101521 is 2
mem: storing 1 in location 101522
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101517 is 101
mem: storing 0 in location 101523
run: break-unless newline?:boolean, 
mem: location 101523 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101518 is 1033
mem: location 1033 is 0
mem: location 101520 is 20
mem: storing 0 in location 101525
run: index:number <- add index:number, column:address:number/deref
mem: location 101525 is 0
mem: location 101519 is 1034
mem: location 1034 is 11
mem: storing 11 in location 101525
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101516 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 11
mem: location 1035 is 1036
mem: location 101516 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101526
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101526 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 0
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101525 is 11
mem: location 101526 is 1036
mem: location 101525 is 11
mem: storing 1048 in location 101527
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101517 is 101
mem: storing 0 in location 101528
run: break-unless backspace?:boolean, 
mem: location 101528 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101517 is 101
mem: location 101527 is 1048
mem: storing 101 in location 1048
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101519 is 1034
mem: location 1034 is 11
mem: location 101520 is 20
mem: storing 0 in location 101530
run: break-if at-right?:boolean, 
mem: location 101530 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101519 is 1034
mem: location 1034 is 11
mem: location 101519 is 1034
mem: storing 12 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101516 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 11
mem: storing 12 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 12
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 12
mem: location 101145 is 101124
mem: location 101147 is 12
run: address to copy is 101137
run: its type is 4
mem: location 101137 is 110
mem: storing 110 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 110
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101545
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101547
run: c:character <- next-ingredient 
mem: storing 110 in location 101548
run: break-unless x:address:screen, 
mem: location 101547 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101547 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 12
mem: location 1035 is 1036
mem: location 101547 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101549
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101547 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 12
mem: location 1035 is 1036
mem: location 101547 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101550
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101547 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 12
mem: location 1035 is 1036
mem: location 101547 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101551
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101547 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 12
mem: location 1035 is 1036
mem: location 101547 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101552
run: max-row:number <- subtract height:number, 1:literal
mem: location 101552 is 2
mem: storing 1 in location 101553
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101548 is 110
mem: storing 0 in location 101554
run: break-unless newline?:boolean, 
mem: location 101554 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101549 is 1033
mem: location 1033 is 0
mem: location 101551 is 20
mem: storing 0 in location 101556
run: index:number <- add index:number, column:address:number/deref
mem: location 101556 is 0
mem: location 101550 is 1034
mem: location 1034 is 12
mem: storing 12 in location 101556
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101547 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 12
mem: location 1035 is 1036
mem: location 101547 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101557
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101557 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 101
mem: location 1049 is 0
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101556 is 12
mem: location 101557 is 1036
mem: location 101556 is 12
mem: storing 1049 in location 101558
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101548 is 110
mem: storing 0 in location 101559
run: break-unless backspace?:boolean, 
mem: location 101559 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101548 is 110
mem: location 101558 is 1049
mem: storing 110 in location 1049
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101550 is 1034
mem: location 1034 is 12
mem: location 101551 is 20
mem: storing 0 in location 101561
run: break-if at-right?:boolean, 
mem: location 101561 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101550 is 1034
mem: location 1034 is 12
mem: location 101550 is 1034
mem: storing 13 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101547 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 12
mem: storing 13 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 13
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 13
mem: location 101145 is 101124
mem: location 101147 is 13
run: address to copy is 101138
run: its type is 4
mem: location 101138 is 111
mem: storing 111 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 111
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101576
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101578
run: c:character <- next-ingredient 
mem: storing 111 in location 101579
run: break-unless x:address:screen, 
mem: location 101578 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101578 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 13
mem: location 1035 is 1036
mem: location 101578 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101580
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101578 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 13
mem: location 1035 is 1036
mem: location 101578 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101581
schedule: print-character/print-string/read-file/read-move
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101578 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 13
mem: location 1035 is 1036
mem: location 101578 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101582
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101578 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 13
mem: location 1035 is 1036
mem: location 101578 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101583
run: max-row:number <- subtract height:number, 1:literal
mem: location 101583 is 2
mem: storing 1 in location 101584
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101579 is 111
mem: storing 0 in location 101585
run: break-unless newline?:boolean, 
mem: location 101585 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101580 is 1033
mem: location 1033 is 0
mem: location 101582 is 20
mem: storing 0 in location 101587
run: index:number <- add index:number, column:address:number/deref
mem: location 101587 is 0
mem: location 101581 is 1034
mem: location 1034 is 13
mem: storing 13 in location 101587
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101578 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 13
mem: location 1035 is 1036
mem: location 101578 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101588
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101588 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 101
mem: location 1049 is 110
mem: location 1050 is 0
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101587 is 13
mem: location 101588 is 1036
mem: location 101587 is 13
mem: storing 1050 in location 101589
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101579 is 111
mem: storing 0 in location 101590
run: break-unless backspace?:boolean, 
mem: location 101590 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101579 is 111
mem: location 101589 is 1050
mem: storing 111 in location 1050
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101581 is 1034
mem: location 1034 is 13
mem: location 101582 is 20
mem: storing 0 in location 101592
run: break-if at-right?:boolean, 
mem: location 101592 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101581 is 1034
mem: location 1034 is 13
mem: location 101581 is 1034
mem: storing 14 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101578 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 13
mem: storing 14 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 14
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 14
mem: location 101145 is 101124
mem: location 101147 is 14
run: address to copy is 101139
run: its type is 4
mem: location 101139 is 117
mem: storing 117 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 117
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101607
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101609
run: c:character <- next-ingredient 
mem: storing 117 in location 101610
run: break-unless x:address:screen, 
mem: location 101609 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101609 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 14
mem: location 1035 is 1036
mem: location 101609 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101611
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101609 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 14
mem: location 1035 is 1036
mem: location 101609 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101612
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101609 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 14
mem: location 1035 is 1036
mem: location 101609 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101613
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101609 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 14
mem: location 1035 is 1036
mem: location 101609 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101614
run: max-row:number <- subtract height:number, 1:literal
mem: location 101614 is 2
mem: storing 1 in location 101615
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101610 is 117
mem: storing 0 in location 101616
run: break-unless newline?:boolean, 
mem: location 101616 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101611 is 1033
mem: location 1033 is 0
mem: location 101613 is 20
mem: storing 0 in location 101618
run: index:number <- add index:number, column:address:number/deref
mem: location 101618 is 0
mem: location 101612 is 1034
mem: location 1034 is 14
mem: storing 14 in location 101618
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101609 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 14
mem: location 1035 is 1036
mem: location 101609 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101619
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101619 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 101
mem: location 1049 is 110
mem: location 1050 is 111
mem: location 1051 is 0
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101618 is 14
mem: location 101619 is 1036
mem: location 101618 is 14
mem: storing 1051 in location 101620
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101610 is 117
mem: storing 0 in location 101621
run: break-unless backspace?:boolean, 
mem: location 101621 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101610 is 117
mem: location 101620 is 1051
mem: storing 117 in location 1051
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101612 is 1034
mem: location 1034 is 14
mem: location 101613 is 20
mem: storing 0 in location 101623
run: break-if at-right?:boolean, 
mem: location 101623 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101612 is 1034
mem: location 1034 is 14
mem: location 101612 is 1034
mem: storing 15 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101609 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 14
mem: storing 15 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 15
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 15
mem: location 101145 is 101124
mem: location 101147 is 15
run: address to copy is 101140
run: its type is 4
mem: location 101140 is 103
mem: storing 103 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 103
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101638
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101640
run: c:character <- next-ingredient 
mem: storing 103 in location 101641
run: break-unless x:address:screen, 
mem: location 101640 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101640 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 15
mem: location 1035 is 1036
mem: location 101640 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101642
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101640 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 15
mem: location 1035 is 1036
mem: location 101640 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101643
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101640 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 15
mem: location 1035 is 1036
mem: location 101640 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101644
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101640 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 15
mem: location 1035 is 1036
mem: location 101640 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101645
run: max-row:number <- subtract height:number, 1:literal
mem: location 101645 is 2
mem: storing 1 in location 101646
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101641 is 103
mem: storing 0 in location 101647
run: break-unless newline?:boolean, 
mem: location 101647 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101642 is 1033
mem: location 1033 is 0
mem: location 101644 is 20
mem: storing 0 in location 101649
run: index:number <- add index:number, column:address:number/deref
mem: location 101649 is 0
mem: location 101643 is 1034
mem: location 1034 is 15
mem: storing 15 in location 101649
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101640 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 15
mem: location 1035 is 1036
mem: location 101640 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101650
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101650 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 101
mem: location 1049 is 110
mem: location 1050 is 111
mem: location 1051 is 117
mem: location 1052 is 0
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101649 is 15
mem: location 101650 is 1036
mem: location 101649 is 15
mem: storing 1052 in location 101651
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101641 is 103
mem: storing 0 in location 101652
run: break-unless backspace?:boolean, 
mem: location 101652 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101641 is 103
mem: location 101651 is 1052
mem: storing 103 in location 1052
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101643 is 1034
mem: location 1034 is 15
mem: location 101644 is 20
mem: storing 0 in location 101654
run: break-if at-right?:boolean, 
mem: location 101654 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101643 is 1034
mem: location 1034 is 15
mem: location 101643 is 1034
mem: storing 16 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101640 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 15
mem: storing 16 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 16
mem: location 101146 is 17
mem: storing 0 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 0
run: jump-if fell through
run: c:character <- index s:address:array:character/deref, i:number
mem: location 101145 is 101124
mem: location 101124 is 17
mem: location 101125 is 116
mem: location 101126 is 104
mem: location 101127 is 97
mem: location 101128 is 116
mem: location 101129 is 39
mem: location 101130 is 115
mem: location 101131 is 32
mem: location 101132 is 110
mem: location 101133 is 111
mem: location 101134 is 116
mem: location 101135 is 32
mem: location 101136 is 101
mem: location 101137 is 110
mem: location 101138 is 111
mem: location 101139 is 117
mem: location 101140 is 103
mem: location 101141 is 104
mem: location 101147 is 16
mem: location 101145 is 101124
mem: location 101147 is 16
run: address to copy is 101141
run: its type is 4
mem: location 101141 is 104
mem: storing 104 in location 101149
run: print-character x:address:screen, c:character
mem: location 101144 is 1031
mem: location 101149 is 104
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 101669
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 101671
run: c:character <- next-ingredient 
mem: storing 104 in location 101672
run: break-unless x:address:screen, 
mem: location 101671 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 101671 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 16
mem: location 1035 is 1036
mem: location 101671 is 1031
run: address to copy is 1033
mem: storing 1033 in location 101673
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 101671 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 16
mem: location 1035 is 1036
mem: location 101671 is 1031
run: address to copy is 1034
mem: storing 1034 in location 101674
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 101671 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 16
mem: location 1035 is 1036
mem: location 101671 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 20
mem: storing 20 in location 101675
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 101671 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 16
mem: location 1035 is 1036
mem: location 101671 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 101676
run: max-row:number <- subtract height:number, 1:literal
mem: location 101676 is 2
mem: storing 1 in location 101677
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 101672 is 104
mem: storing 0 in location 101678
run: break-unless newline?:boolean, 
mem: location 101678 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 101673 is 1033
mem: location 1033 is 0
mem: location 101675 is 20
mem: storing 0 in location 101680
run: index:number <- add index:number, column:address:number/deref
mem: location 101680 is 0
mem: location 101674 is 1034
mem: location 1034 is 16
mem: storing 16 in location 101680
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 101671 is 1031
mem: location 1031 is 2
mem: location 1032 is 20
mem: location 1033 is 0
mem: location 1034 is 16
mem: location 1035 is 1036
mem: location 101671 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 101681
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 101681 is 1036
mem: location 1036 is 40
mem: location 1037 is 116
mem: location 1038 is 104
mem: location 1039 is 97
mem: location 1040 is 116
mem: location 1041 is 39
mem: location 1042 is 115
mem: location 1043 is 32
mem: location 1044 is 110
mem: location 1045 is 111
mem: location 1046 is 116
mem: location 1047 is 32
mem: location 1048 is 101
mem: location 1049 is 110
mem: location 1050 is 111
mem: location 1051 is 117
mem: location 1052 is 103
mem: location 1053 is 0
mem: location 1054 is 0
mem: location 1055 is 0
mem: location 1056 is 0
mem: location 1057 is 0
mem: location 1058 is 0
mem: location 1059 is 0
mem: location 1060 is 0
mem: location 1061 is 0
mem: location 1062 is 0
mem: location 1063 is 0
mem: location 1064 is 0
mem: location 1065 is 0
mem: location 1066 is 0
mem: location 1067 is 0
mem: location 1068 is 0
mem: location 1069 is 0
mem: location 1070 is 0
mem: location 1071 is 0
mem: location 1072 is 0
mem: location 1073 is 0
mem: location 1074 is 0
mem: location 1075 is 0
mem: location 1076 is 0
mem: location 101680 is 16
mem: location 101681 is 1036
mem: location 101680 is 16
mem: storing 1053 in location 101682
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 101672 is 104
mem: storing 0 in location 101683
run: break-unless backspace?:boolean, 
mem: location 101683 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 101672 is 104
mem: location 101682 is 1053
mem: storing 104 in location 1053
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 101674 is 1034
mem: location 1034 is 16
mem: location 101675 is 20
mem: storing 0 in location 101685
run: break-if at-right?:boolean, 
mem: location 101685 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 101674 is 1034
mem: location 1034 is 16
mem: location 101674 is 1034
mem: storing 17 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 101671 is 1031
run: i:number <- add i:number, 1:literal
mem: location 101147 is 16
mem: storing 17 in location 101147
run: loop 
run: jumping to instruction 6
run: done?:boolean <- greater-or-equal i:number, len:number
mem: location 101147 is 17
mem: location 101146 is 17
mem: storing 1 in location 101148
run: break-if done?:boolean, 
mem: location 101148 is 1
run: jumping to instruction 12
run: reply x:address:screen/same-as-ingredient:0
mem: location 101144 is 1031
run: reply 0:literal/dummy, 0:literal/quit, 1:literal/error
run: result 0 is 0
run: result 1 is 0
run: result 2 is 1
mem: storing 0 in location 101004
mem: storing 0 in location 101005
mem: storing 1 in location 101006
run: reply-if quit?:boolean, 1:offset
mem: location 101005 is 0
run: jumping to instruction 6
run: reply-if error?:boolean, 1:offset
mem: location 101006 is 1
run: jump-unless fell through
run: reply-if 0:literal/dummy, quit?:boolean, error?:boolean
mem: location 101005 is 0
mem: location 101006 is 1
schedule: waking up routine 1
schedule: run1001/read-move-empty
run: screen-should-contain [
    .that's not enough   .
    .                    .
  ]
