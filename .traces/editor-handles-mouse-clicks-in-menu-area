 102 run: assume-console [
    # click on first, 'menu' row
    left-click 0, 3
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 0, 3
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1276
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1278
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1280
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1276 in location 1281
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1282
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1283
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1284
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1280 is 1009
9999 mem: location 1283 is 1
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 105 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1280
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1281 is 1276
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1276 in location 1245
 105 run: jump-unless x, 
9999 mem: location 1245 is 1276
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1271
9999 mem: location 1245 is 1276
9998 run: address to copy is 1276
9999 mem: storing 1276 in location 1246
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1271
9999 mem: location 1245 is 1276
9998 run: address to copy is 1277
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1277 is 1271
9999 mem: storing 1271 in location 1247
 105 run: max:number <- length *buf
9999 mem: location 1247 is 1271
9999 mem: storing 1 in location 1248
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1248 is 1
9999 mem: storing 0 in location 1249
 105 run: jump-unless done?, 
9999 mem: location 1249 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1247 is 1271
9999 mem: location 1246 is 1276
9999 mem: location 1276 is 0
9998 run: address to copy is 1272
9998 run: its type is event
9999 mem: location 1272 is 2
9999 mem: location 1273 is 65513
9999 mem: location 1274 is 0
9999 mem: location 1275 is 3
9999 mem: storing 2 in location 1251
9999 mem: storing 65513 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 3 in location 1254
 105 run: *idx <- add *idx, 1
9999 mem: location 1246 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1246 is 1276
9999 mem: storing 1 in location 1276
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1251 is 2
9999 mem: location 1252 is 65513
9999 mem: location 1253 is 0
9999 mem: location 1254 is 3
9999 mem: location 1245 is 1276
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 0, 3]
9998 run: result 1 is 1276
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1285
9999 mem: storing 65513 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 3 in location 1288
9999 mem: storing 1276 in location 1281
9999 mem: storing 1 in location 1289
9999 mem: storing 0 in location 1290
 104 run: jump-unless found?, 
9999 mem: location 1289 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1285 is 2
9999 mem: location 1286 is 65513
9999 mem: location 1287 is 0
9999 mem: location 1288 is 3
9999 mem: storing 1286 in location 1291
 104 run: jump-unless t, 
9999 mem: location 1291 is 1286
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1280 is 1009
9999 mem: location 1282 is 1115
9999 mem: location 1291 is 1286
9999 mem: location 1286 is 65513
9999 mem: location 1287 is 0
9999 mem: location 1288 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1293
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1295
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1296
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 3 in location 1299
 105 run: jump-if editor, 1:offset
9999 mem: location 1296 is 1115
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1297 is 65513
9999 mem: location 1298 is 0
9999 mem: location 1299 is 3
9998 run: address to copy is 1298
9998 run: its type is number
9999 mem: location 1298 is 0
9999 mem: storing 0 in location 1300
 105 run: jump-if click-row, 1:offset
9999 mem: location 1300 is 0
9998 run: jump-if fell through
 105 run: reply 0/false
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1283
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1282 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1282 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1284
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1280 is 1009
9999 mem: location 1283 is 1
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 105 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1280
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1281 is 1276
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1276 in location 1245
 105 run: jump-unless x, 
9999 mem: location 1245 is 1276
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1271
9999 mem: location 1245 is 1276
9998 run: address to copy is 1276
9999 mem: storing 1276 in location 1246
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1271
9999 mem: location 1245 is 1276
9998 run: address to copy is 1277
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1277 is 1271
9999 mem: storing 1271 in location 1247
 105 run: max:number <- length *buf
9999 mem: location 1247 is 1271
9999 mem: storing 1 in location 1248
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1276
9999 mem: location 1276 is 1
9999 mem: location 1248 is 1
9999 mem: storing 1 in location 1249
 105 run: jump-unless done?, 
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1156 in location 1250
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1250 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1245 is 1276
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1276
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 1276 in location 1281
9999 mem: storing 1 in location 1289
9999 mem: storing 1 in location 1290
 104 run: jump-unless found?, 
9999 mem: location 1289 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1290 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 4
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
