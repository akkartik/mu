 102 run: assume-console [
    # click on first, 'menu' row
    left-click 0, 3
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 0, 3
9999 mem: storing 'left-click' event starting at 1287
9999 mem: storing console in 1291
9999 mem: storing console data in 1293
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1291
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1294
9999 mem: storing 14 in location 1295
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1297
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1291 in location 1298
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1299
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1012
9999 mem: location 1300 is 1
9999 mem: location 1301 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1222
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 105 run: jump-unless screen, 
9999 mem: location 1222 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1225
 105 run: *row <- copy new-row
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1226
 105 run: *column <- copy new-column
9999 mem: location 1224 is 0
9999 mem: location 1226 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1222 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1297
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1291
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1291 in location 1257
 105 run: jump-unless console, 
9999 mem: location 1257 is 1291
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1285
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9998 run: address to copy is 1292
9999 mem: storing 1292 in location 1258
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1285
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9998 run: address to copy is 1293
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1293 is 1285
9999 mem: storing 1285 in location 1259
 105 run: max:number <- length *buf
9999 mem: location 1259 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 1 in location 1260
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1258 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1260 is 1
9999 mem: storing 0 in location 1261
 105 run: jump-unless done?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1259 is 1285
9999 mem: skipping refcount at 1285
9998 run: base address is 1286
9999 mem: location 1258 is 1292
9999 mem: location 1292 is 0
9998 run: address to copy is 1287
9998 run: its type is event
9999 mem: location 1287 is 2
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 0
9999 mem: location 1290 is 3
9999 mem: storing 2 in location 1263
9999 mem: storing 65513 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 3 in location 1266
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1258 is 1292
9999 mem: location 1292 is 0
9999 mem: location 1258 is 1292
9999 mem: storing 1 in location 1292
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1263 is 2
9999 mem: location 1264 is 65513
9999 mem: location 1265 is 0
9999 mem: location 1266 is 3
9999 mem: location 1257 is 1291
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 0, 3]
9998 run: result 1 is 1291
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1302
9999 mem: storing 65513 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 3 in location 1305
9999 mem: storing 1291 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 0 in location 1307
 104 run: jump-unless found?, 
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 0
9999 mem: location 1305 is 3
9999 mem: storing 1303 in location 1308
 104 run: jump-unless t, 
9999 mem: location 1308 is 1303
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1297 is 1012
9999 mem: location 1299 is 1000
9999 mem: location 1308 is 1303
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 0
9999 mem: location 1305 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1193
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1194
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1195
9999 mem: storing 0 in location 1196
9999 mem: storing 3 in location 1197
 105 run: jump-if editor, 1:offset
9999 mem: location 1194 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1195 is 65513
9999 mem: location 1196 is 0
9999 mem: location 1197 is 3
9998 run: address to copy is 1196
9998 run: its type is number
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1198
 105 run: jump-if click-row, 1:offset
9999 mem: location 1198 is 0
9998 run: jump-if fell through
 105 run: reply 0/false
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1300
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1301
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1297 is 1012
9999 mem: location 1300 is 1
9999 mem: location 1301 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1222
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1224
 105 run: jump-unless screen, 
9999 mem: location 1222 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1225
 105 run: *row <- copy new-row
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1222 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1226
 105 run: *column <- copy new-column
9999 mem: location 1224 is 0
9999 mem: location 1226 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1222 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1297
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1298 is 1291
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1291 in location 1257
 105 run: jump-unless console, 
9999 mem: location 1257 is 1291
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9999 mem: location 1292 is 1
9999 mem: location 1293 is 1285
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9998 run: address to copy is 1292
9999 mem: storing 1292 in location 1258
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9999 mem: location 1292 is 1
9999 mem: location 1293 is 1285
9999 mem: location 1257 is 1291
9999 mem: skipping refcount at 1291
9998 run: address to copy is 1293
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1293 is 1285
9999 mem: storing 1285 in location 1259
 105 run: max:number <- length *buf
9999 mem: location 1259 is 1285
9999 mem: skipping refcount at 1285
9999 mem: storing 1 in location 1260
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1258 is 1292
9999 mem: location 1292 is 1
9999 mem: location 1260 is 1
9999 mem: storing 1 in location 1261
 105 run: jump-unless done?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1177 in location 1262
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1262 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1257 is 1291
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1291
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1291 in location 1298
9999 mem: storing 1 in location 1306
9999 mem: storing 1 in location 1307
 104 run: jump-unless found?, 
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1297 is 1012
9999 mem: location 1298 is 1291
9999 mem: location 1299 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1159
9999 mem: location 1002 is 1159
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1159
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 1
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
