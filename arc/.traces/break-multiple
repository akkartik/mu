c{0: 0 (((1 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 1 (((break)) ((2 blocks))) -- ((open 1) (open 1))
c{0: 2 (((2 integer)) <- ((copy)) ((0 literal))) -- ((close 2) (open 1) (open 1))
c{0: 3 (((3 integer)) <- ((copy)) ((0 literal))) -- ((close 2) (open 1) (open 1))
c{0: 4 (((4 integer)) <- ((copy)) ((0 literal))) -- ((close 2) (open 1) (open 1))
c{0: 5 (((5 integer)) <- ((copy)) ((0 literal))) -- ((close 2) (open 1) (open 1))
c{1: 0 ✓ (((1 integer)) <- ((copy)) ((0 literal)))
c{1: 1 X (((break)) ((2 blocks))) => (((jump)) ((4 offset)))
c{1: 2 ✓ (((2 integer)) <- ((copy)) ((0 literal)))
c{1: 3 ✓ (((3 integer)) <- ((copy)) ((0 literal)))
c{1: 4 ✓ (((4 integer)) <- ((copy)) ((0 literal)))
c{1: 5 ✓ (((5 integer)) <- ((copy)) ((0 literal)))
