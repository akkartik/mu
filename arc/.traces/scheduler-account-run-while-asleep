c{0: 0 (((sleep)) ((for-some-cycles literal)) ((4 literal))) -- nil
c{0: 1 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 2 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 3 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 4 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{1: 0 ✓ (((sleep)) ((for-some-cycles literal)) ((4 literal)))
c{1: 1 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 2 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 3 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 4 ✓ (((i integer)) <- ((copy)) ((0 literal)))
cn0: convert-names in f1
cn0: (((sleep)) ((for-some-cycles literal)) ((4 literal))) nil nil
cn0: checking arg ((for-some-cycles literal))
cn0: checking arg ((4 literal))
cn0: (((i integer)) <- ((copy)) ((0 literal))) nil nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 1
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((i 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((i 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((i 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn1: (((sleep)) ((for-some-cycles literal)) ((4 literal)))
cn1: (((1 integer)) <- ((copy)) ((0 literal)))
cn1: (((1 integer)) <- ((copy)) ((0 literal)))
cn1: (((1 integer)) <- ((copy)) ((0 literal)))
cn1: (((1 integer)) <- ((copy)) ((0 literal)))
schedule: f1
run: f1 0: (((sleep)) ((for-some-cycles literal)) ((4 literal)))
run: f1 0: sleeping until 5
schedule: pushing f1 to sleep queue
schedule: skipping to cycle 6
schedule: routine timed out
