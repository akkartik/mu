c{0: 0 (((test1)) ((1 literal)) ((2 literal)) ((3 literal))) -- nil
c{1: 0 ✓ (((test1)) ((1 literal)) ((2 literal)) ((3 literal)))
c{0: 0 (_ <- ((input)) ((1 literal))) -- nil
c{0: 1 (((1 integer)) <- ((next-input))) -- nil
c{1: 0 ✓ (_ <- ((input)) ((1 literal)))
c{1: 1 ✓ (((1 integer)) <- ((next-input)))
cn0: convert-names in main
cn0: (((test1)) ((1 literal)) ((2 literal)) ((3 literal))) nil nil
cn0: checking arg ((1 literal))
cn0: checking arg ((2 literal))
cn0: checking arg ((3 literal))
cn0: convert-names in test1
cn0: (_ <- ((input)) ((1 literal))) nil nil
cn0: checking arg ((1 literal))
cn0: checking oarg _
cn0: (((1 integer)) <- ((next-input))) nil nil
cn0: checking oarg ((1 integer))
maybe-add: ((1 integer))
cn1: (((test1)) ((1 literal)) ((2 literal)) ((3 literal)))
cn1: (_ <- ((input)) ((1 literal)))
cn1: (((1 integer)) <- ((next-input)))
schedule: main
run: main 0: (((test1)) ((1 literal)) ((2 literal)) ((3 literal)))
run: test1/main 0: (_ <- ((input)) ((1 literal)))
arg: (((1 literal))) 1 (1 2 3)
run: test1/main 1: (((1 integer)) <- ((next-input)))
arg: nil 2 (1 2 3)
run: test1/main 1: 3 => ((1 integer))
mem: ((1 integer)): 1 <= 3
schedule: done with routine nil
