c{0: 0 (((2 integer)) <- ((copy)) ((34 literal))) -- nil
c{0: 1 (((test1))) -- nil
c{1: 0 âœ“ (((2 integer)) <- ((copy)) ((34 literal)))
c{1: 1 âœ“ (((test1)))
c{0: 0 (((3 integer)) <- ((test2))) -- nil
c{1: 0 âœ“ (((3 integer)) <- ((test2)))
c{0: 0 (((reply)) ((2 integer))) -- nil
c{1: 0 âœ“ (((reply)) ((2 integer)))
cn0: convert-names in main
cn0: (((2 integer)) <- ((copy)) ((34 literal))) nil nil
cn0: checking arg ((34 literal))
cn0: checking oarg ((2 integer))
maybe-add: ((2 integer))
cn0: (((test1))) nil nil
cn0: convert-names in test1
cn0: (((3 integer)) <- ((test2))) nil nil
cn0: checking oarg ((3 integer))
maybe-add: ((3 integer))
cn0: convert-names in test2
cn0: (((reply)) ((2 integer))) nil nil
cn0: checking arg ((2 integer))
maybe-add: ((2 integer))
cn1: (((2 integer)) <- ((copy)) ((34 literal)))
cn1: (((test1)))
cn1: (((3 integer)) <- ((test2)))
cn1: (((reply)) ((2 integer)))
schedule: main
run: main 0: (((2 integer)) <- ((copy)) ((34 literal)))
run: main 0: 34 => ((2 integer))
mem: ((2 integer)): 2 <= 34
run: main 1: (((test1)))
run: test1/main 0: (((3 integer)) <- ((test2)))
run: test2/test1/main 0: (((reply)) ((2 integer)))
mem: ((2 integer)) => 34
run: test1/main 0: 34 => ((3 integer))
mem: ((3 integer)): 3 <= 34
schedule: done with routine nil
