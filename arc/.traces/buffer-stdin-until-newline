c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((s string-address)) <- ((new)) foo) -- nil
c{0: 2 (((k keyboard-address)) <- ((init-keyboard)) ((s string-address))) -- nil
c{0: 3 (((stdin channel-address)) <- ((init-channel)) ((1 literal))) -- nil
c{0: 4 (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address))) -- nil
c{0: 5 (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal))) -- nil
c{0: 6 (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address))) -- nil
c{0: 7 (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) -- nil
c{0: 8 (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) -- nil
c{0: 9 (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address))) -- nil
c{0: 10 (((sleep)) ((until-routine-done literal)) ((r integer) (routine))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((s string-address)) <- ((new)) foo)
c{1: 2 ✓ (((k keyboard-address)) <- ((init-keyboard)) ((s string-address)))
c{1: 3 ✓ (((stdin channel-address)) <- ((init-channel)) ((1 literal)))
c{1: 4 ✓ (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address)))
c{1: 5 ✓ (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal)))
c{1: 6 ✓ (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address)))
c{1: 7 ✓ (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
c{1: 8 ✓ (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset)))
c{1: 9 ✓ (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address)))
c{1: 10 ✓ (((sleep)) ((until-routine-done literal)) ((r integer) (routine)))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((s string-address)) <- ((new)) foo) nil nil
cn0: checking arg foo
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 1
cn0: (((k keyboard-address)) <- ((init-keyboard)) ((s string-address))) ((s 1)) nil
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: checking oarg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: location for oarg ((k keyboard-address)): 2
cn0: (((stdin channel-address)) <- ((init-channel)) ((1 literal))) ((k 2) (s 1)) nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 3
cn0: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((k keyboard-address)) ((stdin channel-address))) ((k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((send-keys-to-stdin fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: (((buffered-stdin channel-address)) <- ((init-channel)) ((1 literal))) ((k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: location for oarg ((buffered-stdin channel-address)): 4
cn0: (((r integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((stdin channel-address)) ((buffered-stdin channel-address))) ((buffered-stdin 4) (k 2) (s 1) (stdin 3)) nil
cn0: checking arg ((buffer-lines fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking arg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: checking oarg ((r integer) (routine))
maybe-add: ((r integer) (routine))
cn0: location for oarg ((r integer) (routine)): 5
cn0: (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) ((buffered-stdin 4) (k 2) (r 5) (s 1) (stdin 3)) nil
cn0: checking arg ((20 literal))
cn0: checking arg ((10 literal))
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 6
cn0: (((5 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) ((buffered-stdin 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) nil
cn0: field-access data in screenterminal-addressderef of type terminal
cn0: new field; computing location
cn0: field location 4
cn0: checking arg ((screen terminal-address) (deref))
maybe-add: ((screen terminal-address) (deref))
cn0: checking arg ((data offset))
cn0: checking oarg ((5 string-address) (raw))
maybe-add: ((5 string-address) (raw))
cn0: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((screen terminal-address)) ((buffered-stdin channel-address))) ((buffered-stdin 4) (data 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) ((data t))
cn0: checking arg ((send-prints-to-stdout fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((buffered-stdin channel-address))
maybe-add: ((buffered-stdin channel-address))
cn0: (((sleep)) ((until-routine-done literal)) ((r integer) (routine))) ((buffered-stdin 4) (data 4) (k 2) (r 5) (s 1) (screen 6) (stdin 3)) ((data t))
cn0: checking arg ((until-routine-done literal))
cn0: checking arg ((r integer) (routine))
maybe-add: ((r integer) (routine))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 string-address)) <- ((new)) foo)
cn1: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
cn1: (((3 channel-address)) <- ((init-channel)) ((1 literal)))
cn1: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((2 keyboard-address)) ((3 channel-address)))
cn1: (((4 channel-address)) <- ((init-channel)) ((1 literal)))
cn1: (((5 integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((3 channel-address)) ((4 channel-address)))
cn1: (((6 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
cn1: (((5 string-address) (raw)) <- ((get)) ((6 terminal-address) (deref)) ((4 offset)))
cn1: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((6 terminal-address)) ((4 channel-address)))
cn1: (((sleep)) ((until-routine-done literal)) ((5 integer) (routine)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 string-address)) <- ((new)) foo)
run: main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1002 <= 1031
run: main 2: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-keyboard/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-keyboard/main 0: 1035 => ((default-space space-address))
run: init-keyboard/main 1: (((1 keyboard-address)) <- ((new)) ((keyboard literal)))
run: init-keyboard/main 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 1037 <= 1066
run: init-keyboard/main 2: (((2 string-address-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((1 offset)))
run: init-keyboard/main 2: 1067 => ((2 string-address-address))
mem: ((2 string-address-address)): 1038 <= 1067
run: init-keyboard/main 3: (((2 string-address-address) (deref)) <- ((next-input)))
arg: nil 0 (1031)
run: init-keyboard/main 3: 1031 => ((2 string-address-address) (deref))
mem: ((2 string-address-address) (deref)): 1067 <= 1031
run: init-keyboard/main 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: init-keyboard/main 4: 1066 => ((3 integer-address))
mem: ((3 integer-address)): 1039 <= 1066
run: init-keyboard/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-keyboard/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1066 <= 0
run: init-keyboard/main 6: (((reply)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1066
run: main 2: 1066 => ((2 keyboard-address))
mem: ((2 keyboard-address)): 1003 <= 1066
run: main 3: (((3 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1068 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 1070 <= 1099
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1099 => ((2 integer-address))
mem: ((2 integer-address)): 1071 <= 1099
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1099 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1100 => ((3 integer-address))
mem: ((3 integer-address)): 1072 <= 1100
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1100 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1073 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1073 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1101 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1074 <= 1101
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1102 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1101 <= 1102
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1099
run: main 3: 1099 => ((3 channel-address))
mem: ((3 channel-address)): 1004 <= 1099
run: main 4: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((2 keyboard-address)) ((3 channel-address)))
mem: ((2 keyboard-address)) => 1066
mem: ((3 channel-address)) => 1099
run: main 5: (((4 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1107 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1138 => ((1 channel-address))
mem: ((1 channel-address)): 1109 <= 1138
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1138 => ((2 integer-address))
mem: ((2 integer-address)): 1110 <= 1138
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1138 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1139 => ((3 integer-address))
mem: ((3 integer-address)): 1111 <= 1139
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1139 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1112 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1112 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1140 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1113 <= 1140
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1141 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1140 <= 1141
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1138
run: main 5: 1138 => ((4 channel-address))
mem: ((4 channel-address)): 1005 <= 1138
run: main 6: (((5 integer) (routine)) <- ((fork)) ((buffer-lines fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((3 channel-address)) ((4 channel-address)))
mem: ((3 channel-address)) => 1099
mem: ((4 channel-address)) => 1138
run: main 6: 2 => ((5 integer) (routine))
mem: ((5 integer) (routine)): 1006 <= 2
run: main 7: (((6 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 1146 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 1177 => ((1 terminal-address))
mem: ((1 terminal-address)): 1148 <= 1177
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 1178 => ((2 integer-address))
mem: ((2 integer-address)): 1149 <= 1178
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1178 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 1177 => ((3 integer-address))
mem: ((3 integer-address)): 1150 <= 1177
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1177 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 1179 => ((4 integer-address))
mem: ((4 integer-address)): 1151 <= 1179
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1179 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 1180 => ((5 integer-address))
mem: ((5 integer-address)): 1152 <= 1180
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 1180 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 1153 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 1181 => ((7 string-address-address))
mem: ((7 string-address-address)): 1154 <= 1181
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 1182 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1181 <= 1182
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1177
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 1383 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1177)
run: clear-screen/init-fake-terminal/main 1: 1177 => ((1 terminal-address))
mem: ((1 terminal-address)): 1385 <= 1177
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1177
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1181 string-address) (raw)) => 1182
run: clear-screen/init-fake-terminal/main 3: 1182 => ((2 string-address))
mem: ((2 string-address)): 1386 <= 1182
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 1387 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1388 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1183 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1183
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1183 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1388 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1184 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1184
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1184 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1388 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1185 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1185
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1185 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1388 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1186 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1186
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1186 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1388 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1187 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1187
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1187 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1388 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1188 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1188
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1188 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1388 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1189 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1189
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1189 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1388 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1190 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1190
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1190 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1388 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1191 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1191
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1191 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 1388 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1192 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1192
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1192 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 1388 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1193 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1193
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1193 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 1388 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1194 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1194
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1194 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 1388 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1195 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1195
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1195 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 1388 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1196 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1196
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1196 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 1388 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1197 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1197
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1197 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 1388 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1198 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1198
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1198 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 1388 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1199 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1199
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1199 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 1388 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1200 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1200
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1200 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 1388 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1201 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1201
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1201 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 1388 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1202 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1202
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1202 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 1388 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1203 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1203
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1203 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 1388 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1204 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1204
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1204 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 1388 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1205 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1205
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1205 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 1388 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1206 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1206
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1206 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 1388 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1207 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1207
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1207 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 1388 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1208 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1208
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1208 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 1388 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1209 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1209
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1209 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 1388 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1210 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1210
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1210 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 1388 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1211 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1211
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1211 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 1388 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1212 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1212
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1212 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 1388 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1213 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1213
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1213 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 1388 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1214 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1214
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1214 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 1388 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1215 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1215
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1215 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 1388 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1216 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1216
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1216 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 1388 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1217 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1217
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1217 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 1388 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1218 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1218
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1218 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 1388 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1219 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1219
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1219 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 1388 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1220 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1220
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1220 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 1388 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1221 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1221
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1221 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 1388 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1222 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1222
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1222 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 1388 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1223 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1223
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1223 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 1388 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1224 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1224
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1224 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 1388 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1225 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1225
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1225 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 1388 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1226 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1226
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1226 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 1388 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1227 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1227
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1227 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 1388 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1228 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1228
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1228 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 1388 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1229 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1229
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1229 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 1388 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1230 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1230
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1230 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 1388 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1231 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1231
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1231 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 1388 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1232 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1232
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1232 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 1388 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1233 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1233
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1233 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 1388 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1234 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1234
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1234 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 1388 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1235 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1235
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1235 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 1388 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1236 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1236
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1236 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 1388 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1237 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1237
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1237 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 1388 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1238 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1238
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1238 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 1388 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1239 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1239
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1239 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 1388 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1240 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1240
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1240 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 1388 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1241 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1241
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1241 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 1388 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1242 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1242
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1242 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 1388 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1243 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1243
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1243 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 1388 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1244 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1244
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1244 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 1388 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1245 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1245
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1245 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 1388 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1246 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1246
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1246 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 1388 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1247 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1247
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1247 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 1388 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1248 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1248
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1248 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 1388 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1249 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1249
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1249 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 1388 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1250 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1250
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1250 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 1388 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1251 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1251
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1251 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 1388 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1252 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1252
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1252 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 1388 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1253 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1253
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1253 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 1388 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1254 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1254
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1254 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 1388 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1255 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1255
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1255 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 1388 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1256 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1256
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1256 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 1388 <= 74
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: send-keys-to-stdin
run: send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: send-keys-to-stdin 0: 101000 => ((default-space space-address))
run: send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066 1099)
run: send-keys-to-stdin 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101002 <= 1066
run: send-keys-to-stdin 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1066 1099)
run: send-keys-to-stdin 2: 1099 => ((2 channel-address))
mem: ((2 channel-address)): 101003 <= 1099
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101031 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: read-key/send-keys-to-stdin 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101033 <= 1066
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1066)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101034 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1066 => ((3 integer-address))
mem: ((3 integer-address)): 101035 <= 1066
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1067 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101036 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 3
run: read-key/send-keys-to-stdin 6: 3 => ((5 integer))
mem: ((5 integer)): 101037 <= 3
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 0
mem: ((5 integer)) => 3
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101038 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 3
mem: ((1032 byte) (raw)) => f
run: read-key/send-keys-to-stdin 10: #\f => ((7 character))
mem: ((7 character)): 101039 <= #\f
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 0
run: read-key/send-keys-to-stdin 11: 1 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1066 <= 1
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => f
run: send-keys-to-stdin 3: #\f => ((3 character))
mem: ((3 character)): 101004 <= #\f
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => f
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => f
run: send-keys-to-stdin 5: #(tagged record (character #\f)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\f
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1099
mem: ((4 tagged-value)) => #(tagged record (character f . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101062 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099 #(tagged record (character #\f . nil)))
run: write/send-keys-to-stdin 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 101064 <= 1099
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1099 #(tagged record (character #\f . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\f . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101065 <= character
mem: ((2 tagged-value)): 101066 <= #\f
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1102 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101093 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1102 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 0 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101095 <= 0
mem: ((1 channel)): 101096 <= 0
mem: ((1 channel)): 101097 <= 1102
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101096 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101098 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101098 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 0 1102 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101124 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1102 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 0 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101126 <= 0
mem: ((1 channel)): 101127 <= 0
mem: ((1 channel)): 101128 <= 1102
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101128 tagged-value-array-address) (raw)) => 1102
run: capacity/full?/write/send-keys-to-stdin 2: 1102 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101129 <= 1102
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101130 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101099 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101100 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101095 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101101 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: nil => ((8 boolean))
mem: ((8 boolean)): 101102 <= nil
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => nil
run: write/send-keys-to-stdin 3: nil => ((4 boolean))
mem: ((4 boolean)): 101067 <= nil
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: write/send-keys-to-stdin 7: 1102 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101069 <= 1102
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1100 => ((7 integer-address))
mem: ((7 integer-address)): 101070 <= 1100
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1103 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101071 <= 1103
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character f . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\f . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1103 <= character
mem: ((8 tagged-value-address) (deref)): 1104 <= #\f
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101072 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101073 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1102 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1102 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1099 <= 0
mem: ((2 channel-address) (deref)): 1100 <= 1
mem: ((2 channel-address) (deref)): 1101 <= 1102
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => f
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101155 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: read-key/send-keys-to-stdin 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101157 <= 1066
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1066)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101158 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1066 => ((3 integer-address))
mem: ((3 integer-address)): 101159 <= 1066
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1067 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101160 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 3
run: read-key/send-keys-to-stdin 6: 3 => ((5 integer))
mem: ((5 integer)): 101161 <= 3
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 1
mem: ((5 integer)) => 3
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101162 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 3
mem: ((1033 byte) (raw)) => o
run: read-key/send-keys-to-stdin 10: #\o => ((7 character))
mem: ((7 character)): 101163 <= #\o
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 1
run: read-key/send-keys-to-stdin 11: 2 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1066 <= 2
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => o
run: send-keys-to-stdin 3: #\o => ((3 character))
mem: ((3 character)): 101004 <= #\o
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: #(tagged record (character #\o)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\o
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1099
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101186 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 101188 <= 1099
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1099 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101189 <= character
mem: ((2 tagged-value)): 101190 <= #\o
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1102 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101217 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1102 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101219 <= 0
mem: ((1 channel)): 101220 <= 1
mem: ((1 channel)): 101221 <= 1102
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101220 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101222 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101222 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1102 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101248 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1102 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101250 <= 0
mem: ((1 channel)): 101251 <= 1
mem: ((1 channel)): 101252 <= 1102
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101252 tagged-value-array-address) (raw)) => 1102
run: capacity/full?/write/send-keys-to-stdin 2: 1102 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101253 <= 1102
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101254 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101223 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101224 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101222 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101219 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101225 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101226 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101191 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1099 => ((5 integer-address))
mem: ((5 integer-address)): 101192 <= 1099
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: buffer-lines
run: buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-lines 0: 201000 => ((default-space space-address))
run: buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099 1138)
run: buffer-lines 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 201002 <= 1099
run: buffer-lines 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1099 1138)
run: buffer-lines 2: 1138 => ((2 channel-address))
mem: ((2 channel-address)): 201003 <= 1138
run: buffer-lines 3: (((3 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/buffer-lines 0: 201031 => ((default-space space-address))
run: init-buffer/buffer-lines 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201033 <= 201062
run: init-buffer/buffer-lines 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/buffer-lines 2: 201062 => ((2 integer-address))
mem: ((2 integer-address)): 201034 <= 201062
run: init-buffer/buffer-lines 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/buffer-lines 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 201062 <= 0
run: init-buffer/buffer-lines 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/buffer-lines 4: 201063 => ((3 string-address-address))
mem: ((3 string-address-address)): 201035 <= 201063
run: init-buffer/buffer-lines 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/buffer-lines 5: 30 => ((4 integer))
mem: ((4 integer)): 201036 <= 30
run: init-buffer/buffer-lines 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/buffer-lines 6: 201064 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 201063 <= 201064
run: init-buffer/buffer-lines 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-lines 3: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1099
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201095 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099)
run: read/buffer-lines 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 201097 <= 1099
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1102 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201126 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1102 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 201128 <= 0
mem: ((1 channel)): 201129 <= 1
mem: ((1 channel)): 201130 <= 1102
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201128 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 201131 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201129 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201132 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: nil => ((6 boolean))
mem: ((6 boolean)): 201133 <= nil
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => nil
run: read/buffer-lines 2: nil => ((2 boolean))
mem: ((2 boolean)): 201098 <= nil
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1099 => ((4 integer-address))
mem: ((4 integer-address)): 201100 <= 1099
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: read/buffer-lines 7: 1102 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201101 <= 1102
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
mem: ((1103 tagged-value) (raw)) => #(tagged record (character f . nil))
run: read/buffer-lines 8: #(tagged record (character #\f . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201102 <= character
mem: ((6 tagged-value)): 201103 <= #\f
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201104 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 201105 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character f . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1102 . nil))
run: buffer-lines 4: #(tagged record (character #\f . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\f
run: buffer-lines 4: #(tagged record (1 1 1102 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1099 <= 1
mem: ((1 channel-address) (deref)): 1100 <= 1
mem: ((1 channel-address) (deref)): 1101 <= 1102
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character f . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201157 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201188 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201159 <= 201188
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\f . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201188 <= character
mem: ((1 tagged-value-address) (deref)): 201189 <= #\f
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\f . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201160 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201188 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201161 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201162 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201189 location) (raw)) => f
run: maybe-coerce/buffer-lines 8: #\f => ((5 location))
mem: ((5 location)): 201163 <= #\f
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => f
mem: ((4 boolean)) => t
run: buffer-lines 5: #\f => ((6 character))
mem: ((6 character)): 201007 <= #\f
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => f
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => f
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => f
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201190 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\f)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201192 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\f)
run: append/buffer-lines 2: #\f => ((2 character))
mem: ((2 character)): 201193 <= #\f
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201221 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201223 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 0
run: buffer-full?/append/buffer-lines 2: 0 => ((2 integer))
mem: ((2 integer)): 201224 <= 0
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201225 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201226 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201227 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201194 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201195 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201196 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201065 => ((6 byte-address))
mem: ((6 byte-address)): 201197 <= 201065
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: append/buffer-lines 9: #\f => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201065 <= #\f
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/buffer-lines 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 1
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => f
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => f
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1099
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201252 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099)
run: read/buffer-lines 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 201254 <= 1099
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1102 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201283 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1102 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 201285 <= 1
mem: ((1 channel)): 201286 <= 1
mem: ((1 channel)): 201287 <= 1102
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201285 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 201288 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201286 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201289 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201290 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201255 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1100 => ((3 integer-address))
mem: ((3 integer-address)): 201256 <= 1100
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1257 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1257
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1257 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 1388 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1258 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1258
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1258 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 1388 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1259 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1259
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1259 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 1388 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1260 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1260
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1260 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 1388 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1261 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1261
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1261 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 1388 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1262 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1262
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1262 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 1388 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1263 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1263
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1263 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 1388 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1264 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1264
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1264 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 1388 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1265 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1265
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1265 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 1388 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1266 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1266
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1266 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 1388 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1267 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1267
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1267 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 1388 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1268 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1268
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1268 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 1388 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1269 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1269
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1269 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 1388 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1270 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1270
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1270 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 1388 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1271 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1271
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1271 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 1388 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1272 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1272
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1272 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 1388 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1273 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1273
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1273 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 1388 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1274 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1274
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1274 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 1388 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1275 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1275
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1275 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 1388 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1276 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1276
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1276 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 1388 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1277 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1277
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1277 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 1388 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1278 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1278
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1278 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 1388 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1279 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1279
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1279 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 1388 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1280 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1280
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1280 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 1388 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1281 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1281
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1281 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 1388 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1282 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1282
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1282 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 1388 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1283 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1283
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1283 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 1388 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1284 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1284
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1284 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 1388 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1285 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1285
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1285 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 1388 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1286 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1286
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1286 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 1388 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1287 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1287
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1287 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 1388 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1288 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1288
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1288 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 1388 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1289 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1289
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1289 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 1388 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1290 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1290
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1290 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 1388 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1291 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1291
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1291 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 1388 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1292 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1292
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1292 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 1388 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1293 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1293
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1293 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 1388 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1294 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1294
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1294 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 1388 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1295 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1295
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1295 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 1388 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1296 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1296
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1296 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 1388 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1297 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1297
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1297 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 1388 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1298 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1298
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1298 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 1388 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1299 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1299
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1299 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 1388 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1300 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1300
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1300 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 1388 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1301 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1301
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1301 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 1388 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1302 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1302
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1302 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 1388 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1303 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1303
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1303 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 1388 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1304 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1304
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1304 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 1388 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1305 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1305
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1305 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 1388 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1306 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1306
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1306 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 1388 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1307 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1307
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1307 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 1388 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1308 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1308
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1308 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 1388 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1309 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1309
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1309 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 1388 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1310 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1310
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1310 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 1388 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1311 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1311
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1311 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 1388 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1312 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1312
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1312 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 1388 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1313 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1313
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1313 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 1388 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1314 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1314
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1314 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 1388 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1315 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1315
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1315 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 1388 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1316 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1316
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1316 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 1388 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1317 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1317
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1317 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 1388 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1318 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1318
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1318 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 1388 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1319 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1319
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1319 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 1388 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1320 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1320
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1320 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 1388 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1321 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1321
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1321 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 1388 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1322 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1322
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1322 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 1388 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1323 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1323
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1323 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 1388 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1324 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1324
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1324 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 1388 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1325 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1325
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1325 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 1388 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1326 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1326
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1326 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 1388 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1327 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1327
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1327 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 1388 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1328 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1328
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1328 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 1388 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1329 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1329
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1329 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 1388 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1330 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1330
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1330 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 1388 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1331 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1331
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1331 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 1388 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1332 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1332
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1332 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 1388 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1333 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1333
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1333 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 1388 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1334 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1334
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1334 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 1388 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1335 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1335
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1335 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 1388 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1336 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1336
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1336 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 1388 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1337 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1337
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1337 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 1388 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1338 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1338
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1338 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 1388 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1339 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1339
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1339 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 1388 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: write/send-keys-to-stdin 7: 1102 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101193 <= 1102
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1100 => ((7 integer-address))
mem: ((7 integer-address)): 101194 <= 1100
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1105 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101195 <= 1105
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1105 <= character
mem: ((8 tagged-value-address) (deref)): 1106 <= #\o
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101196 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101197 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1102 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1102 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1099 <= 1
mem: ((2 channel-address) (deref)): 1100 <= 0
mem: ((2 channel-address) (deref)): 1101 <= 1102
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => o
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101279 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: read-key/send-keys-to-stdin 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101281 <= 1066
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1066)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101282 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1066 => ((3 integer-address))
mem: ((3 integer-address)): 101283 <= 1066
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1067 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101284 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 3
run: read-key/send-keys-to-stdin 6: 3 => ((5 integer))
mem: ((5 integer)): 101285 <= 3
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 2
mem: ((5 integer)) => 3
run: read-key/send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101286 <= nil
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: read-key/send-keys-to-stdin 10: (((7 character)) <- ((index)) ((4 string-address) (deref)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 3
mem: ((1034 byte) (raw)) => o
run: read-key/send-keys-to-stdin 10: #\o => ((7 character))
mem: ((7 character)): 101287 <= #\o
run: read-key/send-keys-to-stdin 11: (((3 integer-address) (deref)) <- ((add)) ((3 integer-address) (deref)) ((1 literal)))
mem: ((3 integer-address) (deref)) => 2
run: read-key/send-keys-to-stdin 11: 3 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1066 <= 3
run: read-key/send-keys-to-stdin 12: (((reply)) ((7 character)))
mem: ((7 character)) => o
run: send-keys-to-stdin 3: #\o => ((3 character))
mem: ((3 character)): 101004 <= #\o
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) => o
run: send-keys-to-stdin 5: #(tagged record (character #\o)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\o
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1099
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101310 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 101312 <= 1099
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1099 #(tagged record (character #\o . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\o . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101313 <= character
mem: ((2 tagged-value)): 101314 <= #\o
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 0 1102 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101341 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1102 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101343 <= 1
mem: ((1 channel)): 101344 <= 0
mem: ((1 channel)): 101345 <= 1102
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101344 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 2: 0 => ((4 integer))
mem: ((4 integer)): 101346 <= 0
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 3: 1 => ((4 integer))
mem: ((4 integer)): 101346 <= 1
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (1 0 1102 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101372 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1102 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (1 0 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101374 <= 1
mem: ((1 channel)): 101375 <= 0
mem: ((1 channel)): 101376 <= 1102
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101376 tagged-value-array-address) (raw)) => 1102
run: capacity/full?/write/send-keys-to-stdin 2: 1102 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101377 <= 1102
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101378 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101347 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: t => ((6 boolean))
mem: ((6 boolean)): 101348 <= t
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101343 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 8: 1 => ((7 integer))
mem: ((7 integer)): 101349 <= 1
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101350 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101315 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1099 => ((5 integer-address))
mem: ((5 integer-address)): 101316 <= 1099
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 1
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1340 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1340
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1340 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 1388 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1341 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1341
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1341 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 1388 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1342 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1342
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1342 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 1388 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1343 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1343
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1343 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 1388 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1344 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1344
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1344 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 1388 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1345 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1345
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1345 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 1388 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1346 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1346
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1346 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 1388 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1347 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1347
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1347 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 1388 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1348 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1348
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1348 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 1388 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1349 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1349
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1349 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 1388 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1350 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1350
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1350 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 1388 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1351 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1351
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1351 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 1388 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1352 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1352
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1352 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 1388 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1353 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1353
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1353 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 1388 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1354 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1354
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1354 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 1388 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1355 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1355
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1355 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 1388 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1356 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1356
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1356 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 1388 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1357 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1357
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1357 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 1388 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1358 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1358
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1358 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 1388 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1359 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1359
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1359 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 1388 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1360 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1360
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1360 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 1388 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1361 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1361
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1361 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 1388 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1362 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1362
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1362 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 1388 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1363 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1363
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1363 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 1388 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1364 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1364
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1364 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 1388 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1365 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1365
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1365 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 1388 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1366 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1366
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1366 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 1388 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1367 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1367
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1367 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 1388 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1368 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1368
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1368 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 1388 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1369 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1369
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1369 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 1388 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1370 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1370
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1370 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 1388 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1371 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1371
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1371 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 1388 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1372 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1372
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1372 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 1388 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1373 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1373
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1373 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 1388 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1374 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1374
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1374 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 1388 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1375 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1375
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1375 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 1388 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1376 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1376
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1376 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 1388 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1377 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1377
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1377 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 1388 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1378 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1378
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1378 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 1388 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1379 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1379
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1379 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 1388 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1380 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1380
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1380 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 1388 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1381 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1381
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1381 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 1388 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1389 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((1182 string) (raw))
mem: ((1182 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1382 => ((1 byte-address))
mem: ((1 byte-address)): 1385 <= 1382
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1382 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 1388 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1389 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1177
run: main 7: 1177 => ((6 terminal-address))
mem: ((6 terminal-address)): 1007 <= 1177
run: main 8: (((5 string-address) (raw)) <- ((get)) ((6 terminal-address) (deref)) ((4 offset)))
mem: ((1181 string-address) (raw)) => 1182
run: main 8: 1182 => ((5 string-address) (raw))
mem: ((5 string-address) (raw)): 5 <= 1182
run: main 9: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((6 terminal-address)) ((4 channel-address)))
mem: ((6 terminal-address)) => 1177
mem: ((4 channel-address)) => 1138
run: main 10: (((sleep)) ((until-routine-done literal)) ((5 integer) (routine)))
mem: ((5 integer) (routine)) => 2
schedule: pushing main to sleep queue
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1099 => ((4 integer-address))
mem: ((4 integer-address)): 201257 <= 1099
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: read/buffer-lines 7: 1102 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201258 <= 1102
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
mem: ((1105 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/buffer-lines 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201259 <= character
mem: ((6 tagged-value)): 201260 <= #\o
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201261 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 201262 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1102 . nil))
run: buffer-lines 4: #(tagged record (character #\o . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\o
run: buffer-lines 4: #(tagged record (0 0 1102 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1099 <= 0
mem: ((1 channel-address) (deref)): 1100 <= 0
mem: ((1 channel-address) (deref)): 1101 <= 1102
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201314 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201345 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201316 <= 201345
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201345 <= character
mem: ((1 tagged-value-address) (deref)): 201346 <= #\o
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201317 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201345 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201318 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201319 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201346 location) (raw)) => o
run: maybe-coerce/buffer-lines 8: #\o => ((5 location))
mem: ((5 location)): 201320 <= #\o
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: buffer-lines 5: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => o
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => o
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201347 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201349 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: append/buffer-lines 2: #\o => ((2 character))
mem: ((2 character)): 201350 <= #\o
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201378 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201380 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 1
run: buffer-full?/append/buffer-lines 2: 1 => ((2 integer))
mem: ((2 integer)): 201381 <= 1
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201382 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201383 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201384 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201351 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201352 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201353 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201066 => ((6 byte-address))
mem: ((6 byte-address)): 201354 <= 201066
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: append/buffer-lines 9: #\o => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201066 <= #\o
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/buffer-lines 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 2
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => o
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => o
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1099
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201409 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099)
run: read/buffer-lines 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 201411 <= 1099
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1102 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201440 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1102 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (0 0 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 201442 <= 0
mem: ((1 channel)): 201443 <= 0
mem: ((1 channel)): 201444 <= 1102
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201442 integer) (raw)) => 0
run: empty?/read/buffer-lines 2: 0 => ((4 integer))
mem: ((4 integer)): 201445 <= 0
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201443 integer) (raw)) => 0
run: empty?/read/buffer-lines 3: 0 => ((5 integer))
mem: ((5 integer)): 201446 <= 0
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201447 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201412 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1100 => ((3 integer-address))
mem: ((3 integer-address)): 201413 <= 1100
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: send-prints-to-stdout
run: send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: send-prints-to-stdout 0: 301000 => ((default-space space-address))
run: send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1177 1138)
run: send-prints-to-stdout 1: 1177 => ((1 terminal-address))
mem: ((1 terminal-address)): 301002 <= 1177
run: send-prints-to-stdout 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1177 1138)
run: send-prints-to-stdout 2: 1138 => ((2 channel-address))
mem: ((2 channel-address)): 301003 <= 1138
run: send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
mem: ((2 channel-address)) => 1138
run: read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/send-prints-to-stdout 0: 301031 => ((default-space space-address))
run: read/send-prints-to-stdout 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1138)
run: read/send-prints-to-stdout 1: 1138 => ((1 channel-address))
mem: ((1 channel-address)): 301033 <= 1138
run: read/send-prints-to-stdout 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 0 1141 . nil))
run: empty?/read/send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/send-prints-to-stdout 0: 301062 => ((default-space space-address))
run: empty?/read/send-prints-to-stdout 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1141 . nil)))
run: empty?/read/send-prints-to-stdout 1: #(tagged record (0 0 1141 . nil)) => ((1 channel))
mem: ((1 channel)): 301064 <= 0
mem: ((1 channel)): 301065 <= 0
mem: ((1 channel)): 301066 <= 1141
run: empty?/read/send-prints-to-stdout 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((301064 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 2: 0 => ((4 integer))
mem: ((4 integer)): 301067 <= 0
run: empty?/read/send-prints-to-stdout 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((301065 integer) (raw)) => 0
run: empty?/read/send-prints-to-stdout 3: 0 => ((5 integer))
mem: ((5 integer)): 301068 <= 0
run: empty?/read/send-prints-to-stdout 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 0
mem: ((5 integer)) => 0
run: empty?/read/send-prints-to-stdout 4: t => ((6 boolean))
mem: ((6 boolean)): 301069 <= t
run: empty?/read/send-prints-to-stdout 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/send-prints-to-stdout 2: t => ((2 boolean))
mem: ((2 boolean)): 301034 <= t
run: read/send-prints-to-stdout 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/send-prints-to-stdout 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/send-prints-to-stdout 4: 1139 => ((3 integer-address))
mem: ((3 integer-address)): 301035 <= 1139
run: read/send-prints-to-stdout 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 0
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: write/send-keys-to-stdin 7: 1102 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101317 <= 1102
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1100 => ((7 integer-address))
mem: ((7 integer-address)): 101318 <= 1100
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 0
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1103 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101319 <= 1103
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character o . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1103 <= character
mem: ((8 tagged-value-address) (deref)): 1104 <= #\o
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 0
run: write/send-keys-to-stdin 11: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 1
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101320 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 1
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: t => ((10 boolean))
mem: ((10 boolean)): 101321 <= t
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 1 1102 . nil))
run: send-keys-to-stdin 6: #(tagged record (0 1 1102 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1099 <= 0
mem: ((2 channel-address) (deref)): 1100 <= 1
mem: ((2 channel-address) (deref)): 1101 <= 1102
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) => o
run: send-keys-to-stdin 7: nil => ((6 boolean))
mem: ((6 boolean)): 101007 <= nil
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-key/send-keys-to-stdin 0: 101403 => ((default-space space-address))
run: read-key/send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1066)
run: read-key/send-keys-to-stdin 1: 1066 => ((1 keyboard-address))
mem: ((1 keyboard-address)): 101405 <= 1066
run: read-key/send-keys-to-stdin 2: (((2 terminal-address)) <- ((next-input)))
arg: nil 1 (1066)
run: read-key/send-keys-to-stdin 2: nil => ((2 terminal-address))
mem: ((2 terminal-address)): 101406 <= nil
run: read-key/send-keys-to-stdin 3: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
mem: ((1 keyboard-address)) => 1066
run: read-key/send-keys-to-stdin 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: read-key/send-keys-to-stdin 4: 1066 => ((3 integer-address))
mem: ((3 integer-address)): 101407 <= 1066
run: read-key/send-keys-to-stdin 5: (((4 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
mem: ((1067 string-address) (raw)) => 1031
run: read-key/send-keys-to-stdin 5: 1031 => ((4 string-address))
mem: ((4 string-address)): 101408 <= 1031
run: read-key/send-keys-to-stdin 6: (((5 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
mem: ((1031 integer) (raw)) => 3
run: read-key/send-keys-to-stdin 6: 3 => ((5 integer))
mem: ((5 integer)): 101409 <= 3
run: read-key/send-keys-to-stdin 7: (((6 boolean)) <- ((greater-or-equal)) ((3 integer-address) (deref)) ((5 integer)))
mem: ((3 integer-address) (deref)) => 3
mem: ((5 integer)) => 3
run: read-key/send-keys-to-stdin 7: t => ((6 boolean))
mem: ((6 boolean)): 101410 <= t
run: read-key/send-keys-to-stdin 8: (((jump-unless)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: read-key/send-keys-to-stdin 9: (((reply)) ((  literal)))
run: send-keys-to-stdin 3: #\nul => ((3 character))
mem: ((3 character)): 101004 <= #\nul
run: send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 5: #(tagged record (character #\nul)) => ((4 tagged-value))
mem: ((4 tagged-value)): 101005 <= character
mem: ((4 tagged-value)): 101006 <= #\nul
run: send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
mem: ((2 channel-address)) => 1099
mem: ((4 tagged-value)) => #(tagged record (character   . nil))
run: write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: write/send-keys-to-stdin 0: 101434 => ((default-space space-address))
run: write/send-keys-to-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099 #(tagged record (character #\nul . nil)))
run: write/send-keys-to-stdin 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 101436 <= 1099
run: write/send-keys-to-stdin 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1099 #(tagged record (character #\nul . nil)))
run: write/send-keys-to-stdin 2: #(tagged record (character #\nul . nil)) => ((2 tagged-value))
mem: ((2 tagged-value)): 101437 <= character
mem: ((2 tagged-value)): 101438 <= #\nul
run: write/send-keys-to-stdin 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (0 1 1102 . nil))
run: full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: full?/write/send-keys-to-stdin 0: 101465 => ((default-space space-address))
run: full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1102 . nil)))
run: full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101467 <= 0
mem: ((1 channel)): 101468 <= 1
mem: ((1 channel)): 101469 <= 1102
run: full?/write/send-keys-to-stdin 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((101468 integer) (raw)) => 1
run: full?/write/send-keys-to-stdin 2: 1 => ((4 integer))
mem: ((4 integer)): 101470 <= 1
run: full?/write/send-keys-to-stdin 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: full?/write/send-keys-to-stdin 3: 2 => ((4 integer))
mem: ((4 integer)): 101470 <= 2
run: full?/write/send-keys-to-stdin 4: (((5 integer)) <- ((capacity)) ((1 channel)))
mem: ((1 channel)) => #(tagged record (0 1 1102 . nil))
run: capacity/full?/write/send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: capacity/full?/write/send-keys-to-stdin 0: 101496 => ((default-space space-address))
run: capacity/full?/write/send-keys-to-stdin 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1102 . nil)))
run: capacity/full?/write/send-keys-to-stdin 1: #(tagged record (0 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 101498 <= 0
mem: ((1 channel)): 101499 <= 1
mem: ((1 channel)): 101500 <= 1102
run: capacity/full?/write/send-keys-to-stdin 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
mem: ((101500 tagged-value-array-address) (raw)) => 1102
run: capacity/full?/write/send-keys-to-stdin 2: 1102 => ((4 tagged-value-array-address))
mem: ((4 tagged-value-array-address)): 101501 <= 1102
run: capacity/full?/write/send-keys-to-stdin 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: capacity/full?/write/send-keys-to-stdin 3: 2 => ((5 integer))
mem: ((5 integer)): 101502 <= 2
run: capacity/full?/write/send-keys-to-stdin 4: (((reply)) ((5 integer)))
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 4: 2 => ((5 integer))
mem: ((5 integer)): 101471 <= 2
run: full?/write/send-keys-to-stdin 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 2
mem: ((5 integer)) => 2
run: full?/write/send-keys-to-stdin 5: nil => ((6 boolean))
mem: ((6 boolean)): 101472 <= nil
run: full?/write/send-keys-to-stdin 6: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => nil
run: full?/write/send-keys-to-stdin 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: full?/write/send-keys-to-stdin 7: 0 => ((4 integer))
mem: ((4 integer)): 101470 <= 0
run: full?/write/send-keys-to-stdin 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((101467 integer) (raw)) => 0
run: full?/write/send-keys-to-stdin 8: 0 => ((7 integer))
mem: ((7 integer)): 101473 <= 0
run: full?/write/send-keys-to-stdin 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 0
run: full?/write/send-keys-to-stdin 9: t => ((8 boolean))
mem: ((8 boolean)): 101474 <= t
run: full?/write/send-keys-to-stdin 10: (((reply)) ((8 boolean)))
mem: ((8 boolean)) => t
run: write/send-keys-to-stdin 3: t => ((4 boolean))
mem: ((4 boolean)): 101439 <= t
run: write/send-keys-to-stdin 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => t
run: write/send-keys-to-stdin 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: write/send-keys-to-stdin 5: 1099 => ((5 integer-address))
mem: ((5 integer-address)): 101440 <= 1099
run: write/send-keys-to-stdin 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
mem: ((5 integer-address) (deref)) => 0
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1099 => ((4 integer-address))
mem: ((4 integer-address)): 201414 <= 1099
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: read/buffer-lines 7: 1102 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201415 <= 1102
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
mem: ((1103 tagged-value) (raw)) => #(tagged record (character o . nil))
run: read/buffer-lines 8: #(tagged record (character #\o . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201416 <= character
mem: ((6 tagged-value)): 201417 <= #\o
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: read/buffer-lines 9: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 1
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201418 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 1
mem: ((8 integer)) => 2
run: read/buffer-lines 11: t => ((9 boolean))
mem: ((9 boolean)): 201419 <= t
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => t
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character o . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 1 1102 . nil))
run: buffer-lines 4: #(tagged record (character #\o . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\o
run: buffer-lines 4: #(tagged record (1 1 1102 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1099 <= 1
mem: ((1 channel-address) (deref)): 1100 <= 1
mem: ((1 channel-address) (deref)): 1101 <= 1102
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character o . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201471 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201502 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201473 <= 201502
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201502 <= character
mem: ((1 tagged-value-address) (deref)): 201503 <= #\o
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201474 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201502 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201475 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201476 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201503 location) (raw)) => o
run: maybe-coerce/buffer-lines 8: #\o => ((5 location))
mem: ((5 location)): 201477 <= #\o
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) => o
mem: ((4 boolean)) => t
run: buffer-lines 5: #\o => ((6 character))
mem: ((6 character)): 201007 <= #\o
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) => o
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) => o
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) => o
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201504 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201506 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: append/buffer-lines 2: #\o => ((2 character))
mem: ((2 character)): 201507 <= #\o
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201535 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201537 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 2
run: buffer-full?/append/buffer-lines 2: 2 => ((2 integer))
mem: ((2 integer)): 201538 <= 2
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201539 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201540 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 2
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201541 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201508 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201509 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201510 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 2
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201067 => ((6 byte-address))
mem: ((6 byte-address)): 201511 <= 201067
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => o
run: append/buffer-lines 9: #\o => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201067 <= #\o
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 2
run: append/buffer-lines 10: 3 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 3
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) => o
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) => o
run: buffer-lines 17: nil => ((11 boolean))
mem: ((11 boolean)): 201012 <= nil
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => nil
run: buffer-lines 19: (((jump)) ((-16 offset)))
run: buffer-lines 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
mem: ((1 channel-address)) => 1099
run: read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read/buffer-lines 0: 201566 => ((default-space space-address))
run: read/buffer-lines 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1099)
run: read/buffer-lines 1: 1099 => ((1 channel-address))
mem: ((1 channel-address)): 201568 <= 1099
run: read/buffer-lines 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
mem: ((1 channel-address) (deref)) => #(tagged record (1 1 1102 . nil))
run: empty?/read/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: empty?/read/buffer-lines 0: 201597 => ((default-space space-address))
run: empty?/read/buffer-lines 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1102 . nil)))
run: empty?/read/buffer-lines 1: #(tagged record (1 1 1102 . nil)) => ((1 channel))
mem: ((1 channel)): 201599 <= 1
mem: ((1 channel)): 201600 <= 1
mem: ((1 channel)): 201601 <= 1102
run: empty?/read/buffer-lines 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
mem: ((201599 integer) (raw)) => 1
run: empty?/read/buffer-lines 2: 1 => ((4 integer))
mem: ((4 integer)): 201602 <= 1
run: empty?/read/buffer-lines 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
mem: ((201600 integer) (raw)) => 1
run: empty?/read/buffer-lines 3: 1 => ((5 integer))
mem: ((5 integer)): 201603 <= 1
run: empty?/read/buffer-lines 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
mem: ((4 integer)) => 1
mem: ((5 integer)) => 1
run: empty?/read/buffer-lines 4: t => ((6 boolean))
mem: ((6 boolean)): 201604 <= t
run: empty?/read/buffer-lines 5: (((reply)) ((6 boolean)))
mem: ((6 boolean)) => t
run: read/buffer-lines 2: t => ((2 boolean))
mem: ((2 boolean)): 201569 <= t
run: read/buffer-lines 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => t
run: read/buffer-lines 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: read/buffer-lines 4: 1100 => ((3 integer-address))
mem: ((3 integer-address)): 201570 <= 1100
run: read/buffer-lines 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
mem: ((3 integer-address) (deref)) => 1
schedule: pushing read/buffer-lines to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: write/send-keys-to-stdin 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: write/send-keys-to-stdin 7: 1102 => ((6 tagged-value-array-address))
mem: ((6 tagged-value-array-address)): 101441 <= 1102
run: write/send-keys-to-stdin 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: write/send-keys-to-stdin 8: 1100 => ((7 integer-address))
mem: ((7 integer-address)): 101442 <= 1100
run: write/send-keys-to-stdin 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
mem: ((7 integer-address) (deref)) => 1
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 9: 1105 => ((8 tagged-value-address))
mem: ((8 tagged-value-address)): 101443 <= 1105
run: write/send-keys-to-stdin 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
mem: ((2 tagged-value)) => #(tagged record (character   . nil))
run: write/send-keys-to-stdin 10: #(tagged record (character #\nul . nil)) => ((8 tagged-value-address) (deref))
mem: ((8 tagged-value-address) (deref)): 1105 <= character
mem: ((8 tagged-value-address) (deref)): 1106 <= #\nul
run: write/send-keys-to-stdin 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
mem: ((7 integer-address) (deref)) => 1
run: write/send-keys-to-stdin 11: 2 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 2
run: write/send-keys-to-stdin 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: write/send-keys-to-stdin 12: 2 => ((9 integer))
mem: ((9 integer)): 101444 <= 2
run: write/send-keys-to-stdin 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
mem: ((7 integer-address) (deref)) => 2
mem: ((9 integer)) => 2
run: write/send-keys-to-stdin 13: nil => ((10 boolean))
mem: ((10 boolean)): 101445 <= nil
run: write/send-keys-to-stdin 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: write/send-keys-to-stdin 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: write/send-keys-to-stdin 15: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= 0
run: write/send-keys-to-stdin 16: (((reply)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (1 0 1102 . nil))
run: send-keys-to-stdin 6: #(tagged record (1 0 1102 . nil)) => ((2 channel-address) (deref))
mem: ((2 channel-address) (deref)): 1099 <= 1
mem: ((2 channel-address) (deref)): 1100 <= 0
mem: ((2 channel-address) (deref)): 1101 <= 1102
run: send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
mem: ((3 character)) =>  
run: send-keys-to-stdin 7: t => ((6 boolean))
mem: ((6 boolean)): 101007 <= t
run: send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
schedule: done with routine nil
schedule: waking up read/buffer-lines
schedule: read/buffer-lines
run: read/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: read/buffer-lines 6: 1099 => ((4 integer-address))
mem: ((4 integer-address)): 201571 <= 1099
run: read/buffer-lines 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
mem: ((1101 tagged-value-array-address) (raw)) => 1102
run: read/buffer-lines 7: 1102 => ((5 tagged-value-array-address))
mem: ((5 tagged-value-array-address)): 201572 <= 1102
run: read/buffer-lines 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1102 tagged-value-array) (raw))
mem: ((1102 integer) (raw)) => 2
mem: ((1105 tagged-value) (raw)) => #(tagged record (character   . nil))
run: read/buffer-lines 8: #(tagged record (character #\nul . nil)) => ((6 tagged-value))
mem: ((6 tagged-value)): 201573 <= character
mem: ((6 tagged-value)): 201574 <= #\nul
run: read/buffer-lines 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: read/buffer-lines 9: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 2
run: read/buffer-lines 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
mem: ((1102 integer) (raw)) => 2
run: read/buffer-lines 10: 2 => ((8 integer))
mem: ((8 integer)): 201575 <= 2
run: read/buffer-lines 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
mem: ((4 integer-address) (deref)) => 2
mem: ((8 integer)) => 2
run: read/buffer-lines 11: nil => ((9 boolean))
mem: ((9 boolean)): 201576 <= nil
run: read/buffer-lines 12: (((jump-if)) ((9 boolean)) ((1 offset)))
mem: ((9 boolean)) => nil
run: read/buffer-lines 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: read/buffer-lines 13: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1099 <= 0
run: read/buffer-lines 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref) (same-as-arg 0)))
mem: ((6 tagged-value)) => #(tagged record (character   . nil))
mem: ((1 channel-address) (deref) (same-as-arg 0)) => #(tagged record (0 0 1102 . nil))
run: buffer-lines 4: #(tagged record (character #\nul . nil)) => ((4 tagged-value))
mem: ((4 tagged-value)): 201005 <= character
mem: ((4 tagged-value)): 201006 <= #\nul
run: buffer-lines 4: #(tagged record (0 0 1102 . nil)) => ((1 channel-address) (deref))
mem: ((1 channel-address) (deref)): 1099 <= 0
mem: ((1 channel-address) (deref)): 1100 <= 0
mem: ((1 channel-address) (deref)): 1101 <= 1102
run: buffer-lines 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
mem: ((4 tagged-value)) => #(tagged record (character   . nil))
run: maybe-coerce/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: maybe-coerce/buffer-lines 0: 201628 => ((default-space space-address))
run: maybe-coerce/buffer-lines 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
run: maybe-coerce/buffer-lines 1: 201659 => ((1 tagged-value-address))
mem: ((1 tagged-value-address)): 201630 <= 201659
run: maybe-coerce/buffer-lines 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\nul . nil)) character)
run: maybe-coerce/buffer-lines 2: #(tagged record (character #\nul . nil)) => ((1 tagged-value-address) (deref))
mem: ((1 tagged-value-address) (deref)): 201659 <= character
mem: ((1 tagged-value-address) (deref)): 201660 <= #\nul
run: maybe-coerce/buffer-lines 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\nul . nil)) character)
run: maybe-coerce/buffer-lines 3: character => ((2 type))
mem: ((2 type)): 201631 <= character
run: maybe-coerce/buffer-lines 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
mem: ((201659 type) (raw)) => character
run: maybe-coerce/buffer-lines 4: character => ((3 type))
mem: ((3 type)): 201632 <= character
run: maybe-coerce/buffer-lines 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
mem: ((3 type)) => character
mem: ((2 type)) => character
run: maybe-coerce/buffer-lines 5: t => ((4 boolean))
mem: ((4 boolean)): 201633 <= t
run: maybe-coerce/buffer-lines 6: (((jump-if)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => t
run: maybe-coerce/buffer-lines 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
mem: ((201660 location) (raw)) =>  
run: maybe-coerce/buffer-lines 8: #\nul => ((5 location))
mem: ((5 location)): 201634 <= #\nul
run: maybe-coerce/buffer-lines 9: (((reply)) ((5 location)) ((4 boolean)))
mem: ((5 location)) =>  
mem: ((4 boolean)) => t
run: buffer-lines 5: #\nul => ((6 character))
mem: ((6 character)): 201007 <= #\nul
run: buffer-lines 6: (((assert)) ((6 character)))
mem: ((6 character)) =>  
run: buffer-lines 7: (((7 boolean)) <- ((equal)) ((6 character)) (( literal)))
mem: ((6 character)) =>  
run: buffer-lines 7: nil => ((7 boolean))
mem: ((7 boolean)): 201008 <= nil
run: buffer-lines 8: (((jump-unless)) ((7 boolean)) ((5 offset)))
mem: ((7 boolean)) => nil
run: buffer-lines 14: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
mem: ((3 buffer-address)) => 201062
mem: ((6 character)) =>  
run: append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/buffer-lines 0: 201661 => ((default-space space-address))
run: append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\nul)
run: append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201663 <= 201062
run: append/buffer-lines 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\nul)
run: append/buffer-lines 2: #\nul => ((2 character))
mem: ((2 character)): 201664 <= #\nul
run: append/buffer-lines 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 201062
run: buffer-full?/append/buffer-lines 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/buffer-lines 0: 201692 => ((default-space space-address))
run: buffer-full?/append/buffer-lines 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: buffer-full?/append/buffer-lines 1: 201062 => ((1 buffer-address))
mem: ((1 buffer-address)): 201694 <= 201062
run: buffer-full?/append/buffer-lines 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((201062 integer) (raw)) => 3
run: buffer-full?/append/buffer-lines 2: 3 => ((2 integer))
mem: ((2 integer)): 201695 <= 3
run: buffer-full?/append/buffer-lines 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: buffer-full?/append/buffer-lines 3: 201064 => ((3 string-address))
mem: ((3 string-address)): 201696 <= 201064
run: buffer-full?/append/buffer-lines 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((201064 integer) (raw)) => 30
run: buffer-full?/append/buffer-lines 4: 30 => ((4 integer))
mem: ((4 integer)): 201697 <= 30
run: buffer-full?/append/buffer-lines 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 30
run: buffer-full?/append/buffer-lines 5: nil => ((5 boolean))
mem: ((5 boolean)): 201698 <= nil
run: buffer-full?/append/buffer-lines 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/buffer-lines 3: nil => ((3 boolean))
mem: ((3 boolean)): 201665 <= nil
run: append/buffer-lines 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/buffer-lines 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/buffer-lines 6: 201062 => ((4 integer-address))
mem: ((4 integer-address)): 201666 <= 201062
run: append/buffer-lines 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((201063 string-address) (raw)) => 201064
run: append/buffer-lines 7: 201064 => ((5 string-address))
mem: ((5 string-address)): 201667 <= 201064
run: append/buffer-lines 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 3
array-len: ((201064 string) (raw))
mem: ((201064 integer) (raw)) => 30
run: append/buffer-lines 8: 201068 => ((6 byte-address))
mem: ((6 byte-address)): 201668 <= 201068
run: append/buffer-lines 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: append/buffer-lines 9: #\nul => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 201068 <= #\nul
run: append/buffer-lines 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 3
run: append/buffer-lines 10: 4 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 201062 <= 4
run: append/buffer-lines 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 201062
run: buffer-lines 14: 201062 => ((3 buffer-address))
mem: ((3 buffer-address)): 201004 <= 201062
run: buffer-lines 15: (((10 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
mem: ((6 character)) =>  
run: buffer-lines 15: nil => ((10 boolean))
mem: ((10 boolean)): 201011 <= nil
run: buffer-lines 16: (((jump-if)) ((10 boolean)) ((3 offset)))
mem: ((10 boolean)) => nil
run: buffer-lines 17: (((11 boolean)) <- ((equal)) ((6 character)) ((  literal)))
mem: ((6 character)) =>  
run: buffer-lines 17: t => ((11 boolean))
mem: ((11 boolean)): 201012 <= t
run: buffer-lines 18: (((jump-if)) ((11 boolean)) ((12 offset)))
mem: ((11 boolean)) => t
schedule: done with routine nil
schedule: waking up main
schedule: main
schedule: done with routine nil
schedule: just helpers left; stopping everything
