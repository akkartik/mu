c{0: 0 (((2 integer)) <- ((next-input))) -- nil
c{1: 0 âœ“ (((2 integer)) <- ((next-input)))
c{0: 0 (((fork)) ((f1 fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((4 literal))) -- nil
c{1: 0 âœ“ (((fork)) ((f1 fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((4 literal)))
cn0: convert-names in f1
cn0: (((2 integer)) <- ((next-input))) nil nil
cn0: checking oarg ((2 integer))
maybe-add: ((2 integer))
cn0: convert-names in main
cn0: (((fork)) ((f1 fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((4 literal))) nil nil
cn0: checking arg ((f1 fn))
cn0: checking arg ((nil literal) (globals))
cn0: checking arg ((nil literal) (limit))
cn0: checking arg ((4 literal))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((fork)) ((f1 fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((4 literal)))
schedule: main
run: main 0: (((fork)) ((f1 fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((4 literal)))
schedule: done with routine nil
schedule: f1
run: f1 0: (((2 integer)) <- ((next-input)))
arg: nil 0 (4)
run: f1 0: 4 => ((2 integer))
mem: ((2 integer)): 2 <= 4
schedule: done with routine nil
