c{0: 0 (((1 integer)) <- ((copy)) ((8 literal))) -- nil
c{0: 1 (((jump)) ((1 offset))) -- nil
c{0: 2 (((2 integer)) <- ((copy)) ((3 literal))) -- nil
c{0: 3 (((reply))) -- nil
c{0: 4 (((3 integer)) <- ((copy)) ((34 literal))) -- nil
c{1: 0 ✓ (((1 integer)) <- ((copy)) ((8 literal)))
c{1: 1 ✓ (((jump)) ((1 offset)))
c{1: 2 ✓ (((2 integer)) <- ((copy)) ((3 literal)))
c{1: 3 ✓ (((reply)))
c{1: 4 ✓ (((3 integer)) <- ((copy)) ((34 literal)))
cn0: convert-names in main
cn0: (((1 integer)) <- ((copy)) ((8 literal))) nil nil
cn0: checking arg ((8 literal))
cn0: checking oarg ((1 integer))
maybe-add: ((1 integer))
cn0: (((jump)) ((1 offset))) nil nil
cn0: checking arg ((1 offset))
cn0: (((2 integer)) <- ((copy)) ((3 literal))) nil nil
cn0: checking arg ((3 literal))
cn0: checking oarg ((2 integer))
maybe-add: ((2 integer))
cn0: (((reply))) nil nil
cn0: (((3 integer)) <- ((copy)) ((34 literal))) nil nil
cn0: checking arg ((34 literal))
cn0: checking oarg ((3 integer))
maybe-add: ((3 integer))
cn1: (((1 integer)) <- ((copy)) ((8 literal)))
cn1: (((jump)) ((1 offset)))
cn1: (((2 integer)) <- ((copy)) ((3 literal)))
cn1: (((reply)))
cn1: (((3 integer)) <- ((copy)) ((34 literal)))
schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((8 literal)))
run: main 0: 8 => ((1 integer))
mem: ((1 integer)): 1 <= 8
run: main 1: (((jump)) ((1 offset)))
run: main 3: (((reply)))
schedule: done with routine nil
