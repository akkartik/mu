parse/0: instruction: run
parse/0:   ingredient: {name: "
    1:address:channel <- init-channel 3:literal/capacity
    2:integer <- get 1:address:channel/deref, first-full:offset
    3:integer <- get 1:address:channel/deref, first-free:offset
  ", value: 0, type: 0, properties: ["
    1:address:channel <- init-channel 3:literal/capacity
    2:integer <- get 1:address:channel/deref, first-full:offset
    3:integer <- get 1:address:channel/deref, first-free:offset
  ": "literal-string"]}
parse/0: instruction: memory-should-contain
parse/0:   ingredient: {name: "
    2 <- 0  # first-full
    3 <- 0  # first-free
  ", value: 0, type: 0, properties: ["
    2 <- 0  # first-full
    3 <- 0  # first-free
  ": "literal-string"]}
after-brace/0: recipe channel-initialization
after-brace/0: run ...
after-brace/0: memory-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: channel-initialization
run/0: instruction channel-initialization/0
run/0: run/43 {name: "
    1:address:channel <- init-channel 3:literal/capacity
    2:integer <- get 1:address:channel/deref, first-full:offset
    3:integer <- get 1:address:channel/deref, first-free:offset
  ", value: 0, type: 0, properties: ["
    1:address:channel <- init-channel 3:literal/capacity
    2:integer <- get 1:address:channel/deref, first-full:offset
    3:integer <- get 1:address:channel/deref, first-free:offset
  ": "literal-string"]}
parse/0: instruction: init-channel
parse/0:   ingredient: {name: "3", value: 0, type: 0, properties: ["3": "literal", "capacity": ]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: get
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel", "deref": ]}
parse/0:   ingredient: {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
parse/0:   product: {name: "2", value: 0, type: 1, properties: ["2": "integer"]}
parse/0: instruction: get
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel", "deref": ]}
parse/0:   ingredient: {name: "first-free", value: 0, type: 0, properties: ["first-free": "offset"]}
parse/0:   product: {name: "3", value: 0, type: 1, properties: ["3": "integer"]}
name/0: element first-full of type channel is at offset 0
name/0: element first-free of type channel is at offset 1
after-brace/0: recipe run1001
after-brace/0: init-channel ...
after-brace/0: get ...
after-brace/0: get ...
run/0: instruction run1001/0
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- init-channel/108 {name: "3", value: 3, type: 0, properties: ["3": "literal", "capacity": ]}
run/0: instruction init-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/42 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: instruction init-channel/1
run/0: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]} <- new/42 {name: "channel", value: 10, type: 0, properties: ["channel": "type"]}
mem/0: new alloc: 1031
mem/0: storing 1031 in location 1002
run/0: instruction init-channel/2
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/25 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: ingredient 1 is first-full
run/0: address to copy is 1031
run/0: product 0 is 1031
mem/0: storing 1031 in location 1003
run/0: instruction init-channel/3
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
mem/0: location 1003 is 1031
mem/0: storing 0 in location 1031
run/0: instruction init-channel/4
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/25 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: ingredient 1 is first-free
run/0: address to copy is 1032
run/0: product 0 is 1032
mem/0: storing 1032 in location 1004
run/0: instruction init-channel/5
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
mem/0: location 1004 is 1032
mem/0: storing 0 in location 1032
run/0: instruction init-channel/6
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/30 
run/0: product 0 is 3
mem/0: storing 3 in location 1005
run/0: instruction init-channel/7
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- add/2 {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1005 is 3
run/0: ingredient 1 is 1
run/0: product 0 is 4
mem/0: storing 4 in location 1005
run/0: instruction init-channel/8
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location"]} <- get-address/25 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: ingredient 1 is data
run/0: address to copy is 1033
run/0: product 0 is 1033
mem/0: storing 1033 in location 1006
run/0: instruction init-channel/9
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location", "deref": ]} <- new/42 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
mem/0: location 1005 is 4
mem/0: array size is 4
mem/0: new alloc: 1034
mem/0: location 1006 is 1033
mem/0: storing 1034 in location 1033
run/0: instruction init-channel/10
run/0: reply/33 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]}
mem/0: location 1002 is 1031
run/0: result 0 is 1031
mem/0: storing 1031 in location 1
run/0: instruction run1001/1
run/0: {name: "2", value: 2, type: 1, properties: ["2": "integer"]} <- get/24 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is first-full
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is 0
mem/0: storing 0 in location 2
run/0: instruction run1001/2
run/0: {name: "3", value: 3, type: 1, properties: ["3": "integer"]} <- get/24 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is first-free
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 0
run/0: product 0 is 0
mem/0: storing 0 in location 3
run/0: instruction channel-initialization/1
run/0: memory-should-contain/44 {name: "
    2 <- 0  # first-full
    3 <- 0  # first-free
  ", value: 0, type: 0, properties: ["
    2 <- 0  # first-full
    3 <- 0  # first-free
  ": "literal-string"]}
run/0: checking location 2
run/0: checking location 3
