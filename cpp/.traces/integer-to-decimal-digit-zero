parse/0: instruction: run
parse/0:   ingredient: {name: "
    1:address:array:character/raw <- integer-to-decimal-string 0:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ", value: 0, type: 0, properties: ["
    1:address:array:character/raw <- integer-to-decimal-string 0:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ": "literal-string"]}
parse/0: instruction: memory-should-contain
parse/0:   ingredient: {name: "
    2:string <- [0]
  ", value: 0, type: 0, properties: ["
    2:string <- [0]
  ": "literal-string"]}
after-brace/0: recipe integer-to-decimal-digit-zero
after-brace/0: run ...
after-brace/0: memory-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: integer-to-decimal-digit-zero
run/0: instruction integer-to-decimal-digit-zero/0
run/0: run/42 {name: "
    1:address:array:character/raw <- integer-to-decimal-string 0:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ", value: 0, type: 0, properties: ["
    1:address:array:character/raw <- integer-to-decimal-string 0:literal
    2:array:character/raw <- copy 1:address:array:character/deref/raw
  ": "literal-string"]}
parse/0: instruction: integer-to-decimal-string
parse/0:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-5-4, properties: ["1": "address":"array":"character", "raw": ]}
parse/0: instruction: copy
parse/0:   ingredient: {name: "1", value: 0, type: 2-5-4, properties: ["1": "address":"array":"character", "deref": , "raw": ]}
parse/0:   product: {name: "2", value: 0, type: 5-4, properties: ["2": "array":"character", "raw": ]}
after-brace/0: recipe run1001
after-brace/0: integer-to-decimal-string ...
after-brace/0: copy ...
run/0: instruction run1001/0
run/0: {name: "1", value: 1, type: 2-5-4, properties: ["1": "address":"array":"character", "raw": ]} <- integer-to-decimal-string/105 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: instruction integer-to-decimal-string/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/41 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: instruction integer-to-decimal-string/1
run/0: {name: "n", value: 1, type: 1, properties: ["n": "integer"]} <- next-ingredient/29 
run/0: product 0 is 0
mem/0: storing 0 in location 1002
run/0: instruction integer-to-decimal-string/3
run/0: break-if/11 {name: "n", value: 1, type: 1, properties: ["n": "integer"]}, {name: "", value: 2, type: , properties: ["": ]}
mem/0: location 1002 is 0
run/0: ingredient 0 is 0
run/0: jump-if fell through
run/0: instruction integer-to-decimal-string/4
run/0: {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character"]} <- new/41 {name: "0", value: 0, type: 0, properties: ["0": "literal-string"]}
mem/0: storing 1031 in location 1003
run/0: instruction integer-to-decimal-string/5
run/0: reply/32 {name: "result", value: 2, type: 2-5-4, properties: ["result": "address":"array":"character"]}
mem/0: location 1003 is 1031
run/0: result 0 is 1031
mem/0: storing 1031 in location 1
run/0: instruction run1001/1
run/0: {name: "2", value: 2, type: 5-4, properties: ["2": "array":"character", "raw": ]} <- copy/1 {name: "1", value: 1, type: 2-5-4, properties: ["1": "address":"array":"character", "deref": , "raw": ]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 48
mem/0: storing 1 in location 2
mem/0: storing 48 in location 3
run/0: instruction integer-to-decimal-digit-zero/1
run/0: memory-should-contain/43 {name: "
    2:string <- [0]
  ", value: 0, type: 0, properties: ["
    2:string <- [0]
  ": "literal-string"]}
run/0: checking array length at 2
run/0: checking location 3
