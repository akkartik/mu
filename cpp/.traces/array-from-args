parse/0: instruction: init-array
parse/0:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse/0:   ingredient: {name: "1", value: 0, type: 0, properties: ["1": "literal"]}
parse/0:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse/0:   product: {name: "1", value: 0, type: 2-5-1, properties: ["1": "address":"array":"location"]}
parse/0: instruction: copy
parse/0:   ingredient: {name: "1", value: 0, type: 2-5-1, properties: ["1": "address":"array":"location", "deref": ]}
parse/0:   product: {name: "2", value: 0, type: 5-1, properties: ["2": "array":"location"]}
after-brace/0: recipe test-array-from-args
after-brace/0: init-array ...
after-brace/0: copy ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: test-array-from-args
run/0: instruction test-array-from-args/0
run/0: {name: "1", value: 1, type: 2-5-1, properties: ["1": "address":"array":"location"]} <- init-array {name: "0", value: 0, type: 0, properties: ["0": "literal"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}, {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run/0: instruction init-array/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: instruction init-array/1
run/0: {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]} <- copy {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
mem/0: storing 0 in location 1002
run/0: instruction init-array/3
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 0
mem/0: storing 0 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/4
run/0: break-unless {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "", value: 2, type: , properties: ["": ]}
mem/0: location 1004 is 1
run/0: ingredient 0 is 1
run/0: jump-unless fell through
run/0: instruction init-array/5
run/0: {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]} <- add {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1002 is 0
run/0: ingredient 1 is 1
run/0: product 0 is 1
mem/0: storing 1 in location 1002
run/0: instruction init-array/6
run/0: loop {name: "", value: -4, type: , properties: ["": ]}
run/0: ingredient 0 is -4
run/0: jumping to instruction 3
run/0: instruction init-array/3
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 1
mem/0: storing 1 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/4
run/0: break-unless {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "", value: 2, type: , properties: ["": ]}
mem/0: location 1004 is 1
run/0: ingredient 0 is 1
run/0: jump-unless fell through
run/0: instruction init-array/5
run/0: {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]} <- add {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1002 is 1
run/0: ingredient 1 is 1
run/0: product 0 is 2
mem/0: storing 2 in location 1002
run/0: instruction init-array/6
run/0: loop {name: "", value: -4, type: , properties: ["": ]}
run/0: ingredient 0 is -4
run/0: jumping to instruction 3
run/0: instruction init-array/3
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 2
mem/0: storing 2 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/4
run/0: break-unless {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "", value: 2, type: , properties: ["": ]}
mem/0: location 1004 is 1
run/0: ingredient 0 is 1
run/0: jump-unless fell through
run/0: instruction init-array/5
run/0: {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]} <- add {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1002 is 2
run/0: ingredient 1 is 1
run/0: product 0 is 3
mem/0: storing 3 in location 1002
run/0: instruction init-array/6
run/0: loop {name: "", value: -4, type: , properties: ["": ]}
run/0: ingredient 0 is -4
run/0: jumping to instruction 3
run/0: instruction init-array/3
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
mem/0: storing 0 in location 1004
run/0: instruction init-array/4
run/0: break-unless {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "", value: 2, type: , properties: ["": ]}
mem/0: location 1004 is 0
run/0: ingredient 0 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction init-array/8
run/0: {name: "result", value: 4, type: 2-5-1, properties: ["result": "address":"array":"location"]} <- new {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}
mem/0: location 1002 is 3
mem/0: array size is 3
mem/0: new alloc: 1031
mem/0: storing 1031 in location 1005
run/0: instruction init-array/9
run/0: rewind-ingredients 
run/0: instruction init-array/10
run/0: {name: "i", value: 5, type: 1, properties: ["i": "integer"]} <- copy {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
mem/0: storing 0 in location 1006
run/0: instruction init-array/12
run/0: {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 0
run/0: ingredient 1 is capacity
mem/0: location 1002 is 3
run/0: product 0 is 0
mem/0: storing 0 in location 1007
run/0: instruction init-array/13
run/0: break-if {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: , properties: ["": ]}
mem/0: location 1007 is 0
run/0: ingredient 0 is 0
run/0: jump-if fell through
run/0: instruction init-array/14
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 0
mem/0: storing 0 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/15
run/0: assert {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "error in rewinding ingredients to init-array", value: 0, type: 0, properties: ["error in rewinding ingredients to init-array": "literal-string"]}
run/0: ingredient 0 is exists?
mem/0: location 1004 is 1
run/0: instruction init-array/16
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location"]} <- index-address {name: "result", value: 4, type: 2-5-1, properties: ["result": "address":"array":"location", "deref": ]}, {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1005 is 1031
run/0: ingredient 1 is {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
mem/0: location 1006 is 0
run/0: address to copy is 1032
run/0: product 0 is 1032
mem/0: storing 1032 in location 1008
run/0: instruction init-array/17
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location", "deref": ]} <- copy {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}
run/0: ingredient 0 is curr-value
mem/0: location 1003 is 0
mem/0: location 1008 is 1032
mem/0: storing 0 in location 1032
run/0: instruction init-array/18
run/0: {name: "i", value: 5, type: 1, properties: ["i": "integer"]} <- add {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 0
run/0: ingredient 1 is 1
run/0: product 0 is 1
mem/0: storing 1 in location 1006
run/0: instruction init-array/19
run/0: loop {name: "", value: -8, type: , properties: ["": ]}
run/0: ingredient 0 is -8
run/0: jumping to instruction 12
run/0: instruction init-array/12
run/0: {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 1
run/0: ingredient 1 is capacity
mem/0: location 1002 is 3
run/0: product 0 is 0
mem/0: storing 0 in location 1007
run/0: instruction init-array/13
run/0: break-if {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: , properties: ["": ]}
mem/0: location 1007 is 0
run/0: ingredient 0 is 0
run/0: jump-if fell through
run/0: instruction init-array/14
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 1
mem/0: storing 1 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/15
run/0: assert {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "error in rewinding ingredients to init-array", value: 0, type: 0, properties: ["error in rewinding ingredients to init-array": "literal-string"]}
run/0: ingredient 0 is exists?
mem/0: location 1004 is 1
run/0: instruction init-array/16
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location"]} <- index-address {name: "result", value: 4, type: 2-5-1, properties: ["result": "address":"array":"location", "deref": ]}, {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1005 is 1031
run/0: ingredient 1 is {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
mem/0: location 1006 is 1
run/0: address to copy is 1033
run/0: product 0 is 1033
mem/0: storing 1033 in location 1008
run/0: instruction init-array/17
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location", "deref": ]} <- copy {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}
run/0: ingredient 0 is curr-value
mem/0: location 1003 is 1
mem/0: location 1008 is 1033
mem/0: storing 1 in location 1033
run/0: instruction init-array/18
run/0: {name: "i", value: 5, type: 1, properties: ["i": "integer"]} <- add {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 1
run/0: ingredient 1 is 1
run/0: product 0 is 2
mem/0: storing 2 in location 1006
run/0: instruction init-array/19
run/0: loop {name: "", value: -8, type: , properties: ["": ]}
run/0: ingredient 0 is -8
run/0: jumping to instruction 12
run/0: instruction init-array/12
run/0: {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 2
run/0: ingredient 1 is capacity
mem/0: location 1002 is 3
run/0: product 0 is 0
mem/0: storing 0 in location 1007
run/0: instruction init-array/13
run/0: break-if {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: , properties: ["": ]}
mem/0: location 1007 is 0
run/0: ingredient 0 is 0
run/0: jump-if fell through
run/0: instruction init-array/14
run/0: {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}, {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]} <- next-ingredient 
run/0: product 0 is 2
mem/0: storing 2 in location 1003
mem/0: storing 1 in location 1004
run/0: instruction init-array/15
run/0: assert {name: "exists?", value: 3, type: 3, properties: ["exists?": "boolean"]}, {name: "error in rewinding ingredients to init-array", value: 0, type: 0, properties: ["error in rewinding ingredients to init-array": "literal-string"]}
run/0: ingredient 0 is exists?
mem/0: location 1004 is 1
run/0: instruction init-array/16
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location"]} <- index-address {name: "result", value: 4, type: 2-5-1, properties: ["result": "address":"array":"location", "deref": ]}, {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1005 is 1031
run/0: ingredient 1 is {name: "i", value: 5, type: 1, properties: ["i": "integer"]}
mem/0: location 1006 is 2
run/0: address to copy is 1034
run/0: product 0 is 1034
mem/0: storing 1034 in location 1008
run/0: instruction init-array/17
run/0: {name: "tmp", value: 7, type: 2-1, properties: ["tmp": "address":"location", "deref": ]} <- copy {name: "curr-value", value: 2, type: 1, properties: ["curr-value": "location"]}
run/0: ingredient 0 is curr-value
mem/0: location 1003 is 2
mem/0: location 1008 is 1034
mem/0: storing 2 in location 1034
run/0: instruction init-array/18
run/0: {name: "i", value: 5, type: 1, properties: ["i": "integer"]} <- add {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 2
run/0: ingredient 1 is 1
run/0: product 0 is 3
mem/0: storing 3 in location 1006
run/0: instruction init-array/19
run/0: loop {name: "", value: -8, type: , properties: ["": ]}
run/0: ingredient 0 is -8
run/0: jumping to instruction 12
run/0: instruction init-array/12
run/0: {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal {name: "i", value: 5, type: 1, properties: ["i": "integer"]}, {name: "capacity", value: 1, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is i
mem/0: location 1006 is 3
run/0: ingredient 1 is capacity
mem/0: location 1002 is 3
run/0: product 0 is 1
mem/0: storing 1 in location 1007
run/0: instruction init-array/13
run/0: break-if {name: "done?", value: 6, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 6, type: , properties: ["": ]}
mem/0: location 1007 is 1
run/0: ingredient 0 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 20
run/0: instruction init-array/21
run/0: reply {name: "result", value: 4, type: 2-5-1, properties: ["result": "address":"array":"location"]}
mem/0: location 1005 is 1031
run/0: result 0 is 1031
mem/0: storing 1031 in location 1
run/0: instruction test-array-from-args/1
run/0: {name: "2", value: 2, type: 5-1, properties: ["2": "array":"location"]} <- copy {name: "1", value: 1, type: 2-5-1, properties: ["1": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 0
mem/0: location 1033 is 1
mem/0: location 1034 is 2
mem/0: storing 3 in location 2
mem/0: storing 0 in location 3
mem/0: storing 1 in location 4
mem/0: storing 2 in location 5
